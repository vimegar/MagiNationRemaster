;********************************
; CARDSCENE.S
;********************************
;	Author:	Emory Georges
;	(c)2000	Interactive Imagination
;	All rights reserved
;********************************

	LIB		SOURCE\GAME\CARDSC~1\CARDSCENE_TABLE.S

;********************************
; (TEMP_MISC1)	:  which creature_card to load
; (TEMP_MISC2)  :  card slot to go into
?BTL_LOAD_CARD_VRAM
	PUSH_ROM_BANK
	CALL		?GET_CARD_VRAMDATA
	;----------------------------------------------
	; NUMBER OF TILES TO COPY ==  20 4x5
	LD		A,4*5
	INC		A								; FOR THE 1 ITERATION SETUP (BOTTOM LOOP EXITS ON ZERO)
	LD		(TEMP_WIDTH),A
	; DESTINATION VRAM
	CALL_FOREIGN	?GET_DEST_CARD_VRAM
	
	; SPEND 1 ITERATION UPDATING THE BG DATA - and copying the first tile

_LOOP_STARTUP				
	LD			A,(TEMP_MISC2)
	LD			(CARDSCN_PAL_SLOT),A
	MOVADDR		VBLANK_FUNC,?VBLANK_SET_CARD_PALETTE
	LD			A,(TEMP_WIDTH)
	CP			4*5 
	JR			Z,_DONE_STARTUP
	DEC			A
	LD			(TEMP_WIDTH),A
	CALL		?SYSTEM_UPDATE_GAME
	JR			_LOOP_STARTUP						
_DONE_STARTUP	
	
	INC			A
	LD			(TEMP_WIDTH),A              ; 21 CAUSE WE EXIT ON ZERO (I.E.: ON ITERATION 20 IT IS SET TO 19)
	
_LOOP
	MOVADDR		VBLANK_FUNC,?VBLANK_COPY_TILE
		
	LD			A,(TEMP_WIDTH)
	DEC			A
	JR			Z,_DONE
	LD			(TEMP_WIDTH),A
	
	CALL		?SYSTEM_UPDATE_GAME						; <-- total system update (sfx+graphics/animation+gamestates)
	JR			_LOOP	
_DONE
	MOVADDR		VBLANK_FUNC,?VBLANK_IDLE
	POP_ROM_BANK
	RET
	
;********************************	
?CARDSCENE_ARCHIVE_BG_VRAM

	SWITCH_RAM_BANK		WRAM_VRAMBAK1
	
	XOR			A
	LD			(VBK),A
	
	MEM_MOV		$D000,$9000,$800
	
	LD			A,1
	LD			(VBK),A
	
	MEM_MOV		$D800,$9000,$800

	RET

;********************************	
?CARDSCENE_ARCHIVE_SPRITE_VRAM

	SWITCH_RAM_BANK		WRAM_VRAMBAK0
	
	XOR			A
	LD			(VBK),A
	
	MEM_MOV		$D000,$8000,$1000

	RET
	
;********************************	
?CARDSCENE_ARCHIVE_PALETTE

	MEM_MOV		MENU_PAL_ARCHIVE,ANIM_PAL_BG_BUFFER,64

	RET
	
;********************************
?CARDSCENE_CLOSE
	XOR			A
	LD			(CARDSCN_SCX),A
	LD			(CARDSCN_SCY),A
	
	LD			A,BLANK_CARD_TILE
	LD			(CARD_CREATURE_DECK),A
	LD			(CARD_CREATURE_DECK+1),A
	LD			(CARD_CREATURE_DECK+2),A
	LD			(CARD_CREATURE_DECK+3),A
	LD			(CARD_CREATURE_DECK+4),A
	LD			(CARD_CREATURE_DECK+5),A
	LD			(CARD_CREATURE_DECK+6),A
	LD			(CARD_CREATURE_DECK+7),A
	RET

;********************************	
?CARDSCENE_DEARCHIVE_VRAM

	;DE-Archive VRAM
	;----------------------------
	;(1) Bottom 2 rows of txt vram
	CALL_FOREIGN	?MAIN_MENU_DE_ARCHIVE_VRAM
	
	;(2) de-Archive Palettes
	MEM_MOV			ANIM_PAL_BG_BUFFER,MENU_PAL_ARCHIVE,64
	MEM_MOV			BASE_PAL_BG_BUFFER,MENU_PAL_ARCHIVE,64
	
	CALL_FOREIGN		?VBLANK_UPDATE_PALETTE_BG
	CALL_FOREIGN		?VBLANK_UPDATE_PALETTE_OBJ	
	
	;(3) Top 2 chunks of VBK0
	SWITCH_RAM_BANK		WRAM_VRAMBAK0
	
	XOR			A
	LD			(VBK),A
	
	MEM_MOV		$8000,$D000,$1000
	
	;(4) Bottom chunk of VBK0 and VBK1
	SWITCH_RAM_BANK		WRAM_VRAMBAK1
	
	XOR			A
	LD			(VBK),A
	
	MEM_MOV		$9000,$D000,$800
	
	LD			A,1
	LD			(VBK),A
	
	MEM_MOV		$9000,$D800,$800
	
	RET
	
;********************************
?CARDSCENE_DO

	CALL		?CARDSCENE_STARTUP		; <-- called when first entering the CARDSCENE
	
CARDSCENE_LOOP
	
	CALL_FOREIGN ?DETERMINE_UPDATE_PALETTE_VFUNC
	CALL		?SYSTEM_UPDATE_GAME		; <-- total system update (sfx+graphics/animation+gamestates)
		
	LD			A,(CARDSCN_DONE)		; <-- flag should I leave the CARDSCENE
	AND			A	
	JR			Z,CARDSCENE_LOOP
	
	CALL		?CARDSCENE_CLOSE		; <-- called when finally leaving the CARDSCENE
	RET
		
;********************************
?CARDSCENE_INIT

	SCREEN_HIDE
	TIMER_START
	
	LD		A,(CARD_ARCHIVE_FLAG)
	AND		A
	JR		NZ,_NO_ARCHIVE
	
	;Archive VRAM
	;----------------------------
	PUSH_RAM_BANK
	
	;(1) Bottom 2 rows of txt vram
	CALL_FOREIGN	?MAIN_MENU_ARCHIVE_VRAM
	
	;(2) Archive Palettes
	CALL		?CARDSCENE_ARCHIVE_PALETTE
	
	;(3) Top 2 chunks of VBK0
	CALL		?CARDSCENE_ARCHIVE_SPRITE_VRAM

	;(4) Bottom chunk of VBK0 and VBK1
	CALL		?CARDSCENE_ARCHIVE_BG_VRAM
	
	POP_RAM_BANK


_NO_ARCHIVE
	CALL_FOREIGN		?ACTORLIST_INIT
	FRAME_INIT

	CALL				?BTL_INIT_CARDBATTLE

	INTERPRETER_REINIT	
	CALL				?SCRIPT_SCENE_INIT
	
	; load enemy magi vram here
	;---------------------------------
	PUSH_RAM_BANK
	SWITCH_RAM_BANK	WRAM_BATTLE
	
	LD		A,(BTL_AI_MAGI)
	SUB		TOGOTH
	ADD		A,A
	LD		C,A
	LD		B,0
	LD		HL,BTL_MAGI_VRM_TABLE
	ADD		HL,BC
	DEREF_HL
	LD		B,H
	LD		C,L
	
	CALL	?UNPACK_VRAM
	
	POP_RAM_BANK
	
	SCREEN_SHOW
	
	; SET SCX
	LD			A,(CARDSCN_SCX)
	LD			(SCXW),A
	LDFF_A		SCX
	
	; SET SCY
	LD			A,(CARDSCN_SCY)
	LD			(SCYW),A
	LDFF_A		SCY
	
	;DETERMINE      VBLANK FUNCTION
	MOVADDR		VBLANK_FUNC,?VBLANK_IDLE
	
	;RESET THE HBLANK FUNCTION
	MOVADDR		HFUNC,?HFUNC_IDLE
	RET

;********************************	
?CARDSCENE_INIT_VARS
	XOR			A
	LD			(TILEMAP_ROWPHASE),A
	LD			(TILEMAP_COLPHASE),A
	LD			(TILEMAP_ROWTRIG),A
	LD			(TILEMAP_COLTRIG),A
	LD			(TILEMAP_XDELTA),A
	LD			(TILEMAP_YDELTA),A
	LD			(CARDSCN_SCX),A
	LD			(CARDSCN_SCY),A
	
	LD			(CARDSCN_DONE),A
	LD			(PALETTE_SAFE),A
	LD			(CARDSCN_START),A
	
	LD			A,BLANK_CARD_TILE
	LD			(CARD_CREATURE_DECK),A
	LD			(CARD_CREATURE_DECK+1),A
	LD			(CARD_CREATURE_DECK+2),A
	LD			(CARD_CREATURE_DECK+3),A
	LD			(CARD_CREATURE_DECK+4),A
	LD			(CARD_CREATURE_DECK+5),A
	LD			(CARD_CREATURE_DECK+6),A
	LD			(CARD_CREATURE_DECK+7),A
	RET	
	
;********************************
?CARDSCENE_OPEN

	XOR			A
	LD			(CARD_ARCHIVE_FLAG),A

	CALL		?CARDSCENE_INIT_VARS
	CALL		?CARDSCENE_INIT	
_LOOP
	CALL		?SYSTEM_UPDATE_GAME

	LD			A,(MASTER_SCRIPT_FRAME+$01)
	AND			A
	JR			NZ,_LOOP
	
	LD			A,1
	LD			(CARD_ARCHIVE_FLAG),A

	CALL_FOREIGN	?BTL_BEGIN

	JP				?SOFT_RESET

;********************************
; Notice -- no script related stuff
?CARDSCENE_STARTUP
	CALL		?CARDSCENE_INIT_VARS
	SCREEN_HIDE
	TIMER_START
	CALL		?BTL_INIT_CARDBATTLE
	MOVADDR		VBLANK_FUNC,?VBLANK_IDLE
	CALL_FOREIGN ?ACTORLIST_INIT
	FRAME_INIT
	INTERPRETER_REINIT	
	SCREEN_SHOW
	
	; SET SCX
	LD			A,(CARDSCN_SCX)
	LD			(SCXW),A
	LDFF_A		SCX
	; SET SCY
	LD			A,(CARDSCN_SCY)
	LD			(SCYW),A
	LDFF_A		SCY
	
	;DETERMINE      VBLANK FUNCTION
	MOVADDR		VBLANK_FUNC,?VBLANK_IDLE
	;RESET THE HBLANK FUNCTION
	MOVADDR		HFUNC,?HFUNC_IDLE
	RET

;********************************	
; NOW CLEAR THE BG BACKGROUND DATA
	if 0
?CLEAR_ARENABG	
	; BANK 0
	XOR			A
	LD			(VBK),A
	; LOAD THE FIRST 48 VRAM TILES INTO VRAM_BANK 0
	MEM_SET		CARDSCN_ARENAVRM,16*48,$00   ;use the first color (arena color) 
	;LOAD THE BG DATA 
	MEM_SET		CARDSCN_ARENA_BG,32*32,$00 
	
	; BANK 1
	LD			A,1
	LD			(VBK),A
	; SET FIRST BG TILE TO BLANK IN BANK 1
	MEM_SET		CARDSCN_ARENAVRM,16,$00 
	;SET THE ATTRIBUTES
	MEM_SET		CARDSCN_ARENA_BG,32*13,$06   	;use the 6th palette
	MEM_SET		CARDSCN_ARENAMENU_BG,32*5,$07   ;use the 7th palette
	
	; RESET_MENU_BGATTRIBUTES_BANK1	
	MEM_SET		FIGHTSCN_POSTER1BG,32*5,$8F 
	RET	
	endif

;*******************************************	
; (TEMP_MISC1)	:  which creature_card to load
?GET_CARD_VRAMDATA	
	LD				A,(TEMP_MISC1)
	CP				BLANK_CARD_TILE
	JR				C,_GET_CREATURE_CARD
_SET_ERASE_CARD	
	LD			HL,BIT_ERASE_CARD
	LD			A,L		
	LD			(VBLANK_SOURCE),A
	LD			A,H		
	LD			(VBLANK_SOURCE+1),A
	LD			A,:BIT_ERASE_CARD	
	LD			(VBLANK_BANK),A
	; WE always use palette '5' for the Erase card ('7' is the TextBox Palette, '6' is bg)
	LD			A,5
	LD			(CARDSCN_PAL_OFFSET),A
	RET		
_GET_CREATURE_CARD	
	CALL_FOREIGN	?BTL_GET_CREATURE_BASE_POINTER		; GFX_POINTER IN (TEMP_MISC5) (HL has GFX pointer)
	LD				BC,CREATURE_GFX_TEMPLATE_SIZE
	ADD				HL,BC
	
	; CREATURE CARD VRAM Bitmap
	LD		A,(HLI)		
	LD		(VBLANK_SOURCE),A
	LD		A,(HLI)		
	LD		(VBLANK_SOURCE+1),A
	; CREATURE CARD VRAM Bitmap Bank
	LD		A,(HLI)
	LD		(VBLANK_BANK),A
	; CREATURE CARD PALETTE OFFSET
	LD		A,(HLI)
	AND		$07
	LD		(CARDSCN_PAL_OFFSET),A                             
	RET

;*******************************************	
; input:
;	(TEMP_MISC1)			:  which creature_card to load
; output:
;	(CARDSCN_PAL_OFFSET)	:  what palette to set
?GET_CARD_PALETTE	
	LD				A,(TEMP_MISC1)
	CP				BLANK_CARD_TILE
	JR				C,_GET_CREATURE_CARD
_SET_ERASE_CARD	
	; WE always use palette '5' for the Erase card ('7' is the TextBox Palette, '6' is bg)
	LD			A,5
	LD			(CARDSCN_PAL_OFFSET),A
	RET		
_GET_CREATURE_CARD	
	CALL_FOREIGN	?BTL_GET_CREATURE_BASE_POINTER		; GFX_POINTER IN (TEMP_MISC5) (HL has GFX pointer)
	LD				BC,CREATURE_GFX_TEMPLATE_SIZE+3
	ADD				HL,BC
	; CREATURE CARD PALETTE OFFSET
	DEREF_HL
	AND		$07
	LD		(CARDSCN_PAL_OFFSET),A                             
	RET		

;*******************************************
; (TEMP_MISC2)  :  card slot to reset (0..7)
; output:
; (TEMP_MISC1)  :  card of the bitmap previous loaded
?GET_CREATURE_CARD_SLOT
	LD		A,(TEMP_MISC2)
_CARD1
	CP		0
	JR		NZ,_CARD2
	LD		A,(CARD_CREATURE_DECK)
	LD		(TEMP_MISC1),A
	RET
_CARD2	
	CP		1
	JR		NZ,_CARD3
	LD		A,(CARD_CREATURE_DECK+1)
	LD		(TEMP_MISC1),A
	RET	
_CARD3	
	CP		2
	JR		NZ,_CARD4
	LD		A,(CARD_CREATURE_DECK+2)
	LD		(TEMP_MISC1),A	
	RET
_CARD4	
	CP		3
	JR		NZ,_CARD5
	LD		A,(CARD_CREATURE_DECK+3)
	LD		(TEMP_MISC1),A	
	RET
_CARD5	
	CP		4
	JR		NZ,_CARD6
	LD		A,(CARD_CREATURE_DECK+4)
	LD		(TEMP_MISC1),A
	RET
_CARD6	
	CP		5
	JR		NZ,_CARD7
	LD		A,(CARD_CREATURE_DECK+5)
	LD		(TEMP_MISC1),A
	RET
_CARD7	
	CP		6
	JR		NZ,_CARD8
	LD		A,(CARD_CREATURE_DECK+6)
	LD		(TEMP_MISC1),A
	RET
_CARD8	
	;ELSE..	7
	LD		A,(CARD_CREATURE_DECK+7)
	LD		(TEMP_MISC1),A
	RET
	
;********************************
; (TEMP_MISC1)  :  creature type
; (TEMP_MISC2)  :  card slot to go into (0..7)
; output:
; (VBLANK_DEST) :  this var is set to correct VRAM dest
; (VBLANK_VBK)  :  this var is set to correct VRAM bank 
?GET_DEST_CARD_VRAM
	LD		A,(TEMP_MISC2)
_CARD1
	CP		0
	JR		NZ,_CARD2
	LD		BC,CARDSCN_CARD1VRM
	LD			A,(TEMP_MISC1)
	LD			(CARD_CREATURE_DECK),A
	XOR		A
	JR		_SET_DEST		
_CARD2	
	CP		1
	JR		NZ,_CARD3
	LD		BC,CARDSCN_CARD2VRM
	LD			A,(TEMP_MISC1)
	LD			(CARD_CREATURE_DECK+1),A
	XOR		A
	JR		_SET_DEST		
_CARD3	
	CP		2
	JR		NZ,_CARD4
	LD		BC,CARDSCN_CARD3VRM
	LD			A,(TEMP_MISC1)
	LD			(CARD_CREATURE_DECK+2),A
	XOR		A
	JR		_SET_DEST		
_CARD4	
	CP		3
	JR		NZ,_CARD5
	LD		BC,CARDSCN_CARD4VRM
	LD			A,(TEMP_MISC1)
	LD			(CARD_CREATURE_DECK+3),A
	XOR		A
	JR		_SET_DEST		
_CARD5	
	CP		4
	JR		NZ,_CARD6
	LD		BC,CARDSCN_CARD5VRM
	LD			A,(TEMP_MISC1)
	LD			(CARD_CREATURE_DECK+4),A
	LD		A,1
	JR		_SET_DEST		
_CARD6	
	CP		5
	JR		NZ,_CARD7
	LD		BC,CARDSCN_CARD6VRM
	LD			A,(TEMP_MISC1)
	LD			(CARD_CREATURE_DECK+5),A
	LD		A,1
	JR		_SET_DEST		
_CARD7	
	CP		6
	JR		NZ,_CARD8
	LD		BC,CARDSCN_CARD7VRM
	LD			A,(TEMP_MISC1)
	LD			(CARD_CREATURE_DECK+6),A
	LD		A,1
	JR		_SET_DEST		
_CARD8	
	;ELSE..	7
	LD		BC,CARDSCN_CARD8VRM
	LD			A,(TEMP_MISC1)
	LD			(CARD_CREATURE_DECK+7),A
	LD		A,1
	
	;...		
_SET_DEST
	LD		(VBLANK_VBK),A
	LD		A,B
	LD		(VBLANK_DEST+1),A
	LD		A,C			
	LD		(VBLANK_DEST),A
	RET	
	
;******************************
;	
?RESET_ARENABG	
	; BANK 0
	XOR			A
	LD			(VBK),A
	;LOAD THE BG DATA 
	MEM_SET		CARDSCN_ARENAMENU_BG,32*5,$00 
	; BANK 1
	LD			A,1
	LD			(VBK),A
	; set attributes for menu
	MEM_SET		CARDSCN_ARENAMENU_BG,32*5,$07		;use the 7th palette
	; set palette use for 6th palette
	MEM_ADD		CARDSCN_ARENA_BG,32*13,$06,$FF		   	;use the 6th palette
	
	; RESET_MENU_BGATTRIBUTES_BANK1	
	MEM_SET		FIGHTSCN_POSTER1BG,32*5,$8F 
	RET	


;********************************
?SET_CARD1_PALETTE	
	MEM_AND		CARDSCN_CARD1BG+$00,4,$F8
	MEM_AND		CARDSCN_CARD1BG+$20,4,$F8
	MEM_AND		CARDSCN_CARD1BG+$40,4,$F8
	MEM_AND		CARDSCN_CARD1BG+$60,4,$F8
	MEM_AND		CARDSCN_CARD1BG+$80,4,$F8
	;--------------------------------------------
	MEM_ADD		CARDSCN_CARD1BG+$00,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD1BG+$20,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD1BG+$40,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD1BG+$60,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD1BG+$80,4,(CARDSCN_PAL_OFFSET),$FF	
	RET
;********************************
?SET_CARD2_PALETTE	
	MEM_AND		CARDSCN_CARD2BG+$00,4,$F8
	MEM_AND		CARDSCN_CARD2BG+$20,4,$F8
	MEM_AND		CARDSCN_CARD2BG+$40,4,$F8
	MEM_AND		CARDSCN_CARD2BG+$60,4,$F8
	MEM_AND		CARDSCN_CARD2BG+$80,4,$F8
	;--------------------------------------------
	MEM_ADD		CARDSCN_CARD2BG+$00,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD2BG+$20,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD2BG+$40,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD2BG+$60,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD2BG+$80,4,(CARDSCN_PAL_OFFSET),$FF
	RET
;********************************
?SET_CARD3_PALETTE	
	MEM_AND		CARDSCN_CARD3BG+$00,4,$F8
	MEM_AND		CARDSCN_CARD3BG+$20,4,$F8
	MEM_AND		CARDSCN_CARD3BG+$40,4,$F8
	MEM_AND		CARDSCN_CARD3BG+$60,4,$F8
	MEM_AND		CARDSCN_CARD3BG+$80,4,$F8
	;--------------------------------------------
	MEM_ADD		CARDSCN_CARD3BG+$00,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD3BG+$20,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD3BG+$40,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD3BG+$60,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD3BG+$80,4,(CARDSCN_PAL_OFFSET),$FF
	RET
;********************************
?SET_CARD4_PALETTE	
	MEM_AND		CARDSCN_CARD4BG+$00,4,$F8
	MEM_AND		CARDSCN_CARD4BG+$20,4,$F8
	MEM_AND		CARDSCN_CARD4BG+$40,4,$F8
	MEM_AND		CARDSCN_CARD4BG+$60,4,$F8
	MEM_AND		CARDSCN_CARD4BG+$80,4,$F8
	;--------------------------------------------
	MEM_ADD		CARDSCN_CARD4BG+$00,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD4BG+$20,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD4BG+$40,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD4BG+$60,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD4BG+$80,4,(CARDSCN_PAL_OFFSET),$FF
	RET
;********************************
?SET_CARD5_PALETTE	
	MEM_AND		CARDSCN_CARD5BG+$00,4,$F8
	MEM_AND		CARDSCN_CARD5BG+$20,4,$F8
	MEM_AND		CARDSCN_CARD5BG+$40,4,$F8
	MEM_AND		CARDSCN_CARD5BG+$60,4,$F8
	MEM_AND		CARDSCN_CARD5BG+$80,4,$F8
	;--------------------------------------------
	MEM_ADD		CARDSCN_CARD5BG+$00,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD5BG+$20,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD5BG+$40,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD5BG+$60,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD5BG+$80,4,(CARDSCN_PAL_OFFSET),$FF
	RET
;********************************
?SET_CARD6_PALETTE	
	MEM_AND		CARDSCN_CARD6BG+$00,4,$F8
	MEM_AND		CARDSCN_CARD6BG+$20,4,$F8
	MEM_AND		CARDSCN_CARD6BG+$40,4,$F8
	MEM_AND		CARDSCN_CARD6BG+$60,4,$F8
	MEM_AND		CARDSCN_CARD6BG+$80,4,$F8
	;--------------------------------------------
	MEM_ADD		CARDSCN_CARD6BG+$00,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD6BG+$20,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD6BG+$40,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD6BG+$60,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD6BG+$80,4,(CARDSCN_PAL_OFFSET),$FF
	RET
;********************************
?SET_CARD7_PALETTE	
	MEM_AND		CARDSCN_CARD7BG+$00,4,$F8
	MEM_AND		CARDSCN_CARD7BG+$20,4,$F8
	MEM_AND		CARDSCN_CARD7BG+$40,4,$F8
	MEM_AND		CARDSCN_CARD7BG+$60,4,$F8
	MEM_AND		CARDSCN_CARD7BG+$80,4,$F8
	;--------------------------------------------
	MEM_ADD		CARDSCN_CARD7BG+$00,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD7BG+$20,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD7BG+$40,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD7BG+$60,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD7BG+$80,4,(CARDSCN_PAL_OFFSET),$FF
	RET
;********************************
?SET_CARD8_PALETTE	
	MEM_AND		CARDSCN_CARD8BG+$00,4,$F8
	MEM_AND		CARDSCN_CARD8BG+$20,4,$F8
	MEM_AND		CARDSCN_CARD8BG+$40,4,$F8
	MEM_AND		CARDSCN_CARD8BG+$60,4,$F8
	MEM_AND		CARDSCN_CARD8BG+$80,4,$F8
	;--------------------------------------------
	MEM_ADD		CARDSCN_CARD8BG+$00,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD8BG+$20,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD8BG+$40,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD8BG+$60,4,(CARDSCN_PAL_OFFSET),$FF
	MEM_ADD		CARDSCN_CARD8BG+$80,4,(CARDSCN_PAL_OFFSET),$FF
	RET



		