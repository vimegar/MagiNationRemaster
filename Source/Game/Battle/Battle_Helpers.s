;********************************
; BATTLE_HELPERS.S
;********************************
;	Author: Dylan "Boot to the Head" Mayo
;	(c)2000	Interactive Imagination
;	All rights reserved

;********************************
?BTL_ADD_NEW_SUMMON

	LD		A,(BTL_CREATURE_TARGET)
	LD		B,%00000001
	
_LUPE
	DEC		A
	JR		Z,_DONE
	SLA		B
	JR		_LUPE
	
_DONE
	LD		HL,BTL_NEW_SUMMONS
	LD		A,B
	OR		(HL)
	LD		(HL),A

	LD		A,(BTL_CREATURE_TARGET)
	LD		C,A
	LD		B,0
	LD		HL,BTL_CREATURE_SLOTS
	ADD		HL,BC
	LD		A,1
	LD		(HL),A

	RET

;********************************
?BTL_APPLY_MULTI

	SWITCH_RAM_BANK		WRAM_BATTLE

	LD		A,(BTL_CREATURE_TARGET)
	LD		(BTL_TARGET_MODE),A


	;Check each creature against the target mode
	;to see if they are valid for this attack.
	;if so, set BTL_CREATURE_TARGET to that slot
	;and call BTL_APPLY_COMMAND, else go to the next one.
	;BLEH
	;-------------------------------------	
_APPLY_TONY
	CALL	?BTL_APPLY_TARGET_CHECK_TONY
	LD		A,(BTL_APPLY_FLAG)
	AND		A
	JR		Z,_ALLY_START
	XOR		A
	LD		(BTL_CREATURE_TARGET),A
	CALL_FOREIGN	?BTL_APPLY_COMMAND		
	
	
;**********************************
;IF THIS STARTS FAILING, THE OLD 
;VERSION IS BELOW UNDER THE END STATEMENT
;**********************************
	
_ALLY_START
	XOR		A
	LD		(BTL_COUNTER),A	

_ALLY_LOOP
	LD		HL,BTL_COUNTER
	INC		(HL)
	LD		A,5
	CP		(HL)
	JR		Z,_ENEMY_START
	LD		A,(HL)
	LD		(BTL_APPLY_COUNT),A
	CALL	?BTL_APPLY_TARGET_CHECK_ALLY
	LD		A,(BTL_APPLY_FLAG)
	AND		A
	JR		Z,_ALLY_LOOP
	LD		A,(BTL_COUNTER)
	LD		(BTL_CREATURE_TARGET),A
	CALL_FOREIGN	?BTL_APPLY_COMMAND				
	JR		_ALLY_LOOP
	
_ENEMY_START
	LD		A,4
	LD		(BTL_COUNTER),A

_ENEMY_LOOP
	LD		HL,BTL_COUNTER
	INC		(HL)
	LD		A,9
	CP		(HL)
	JR		Z,_APPLY_MAGI
	LD		A,(HL)
	LD		(BTL_APPLY_COUNT),A
	CALL	?BTL_APPLY_TARGET_CHECK_ENEMY
	LD		A,(BTL_APPLY_FLAG)
	AND		A
	JR		Z,_ENEMY_LOOP
	LD		A,(BTL_COUNTER)
	LD		(BTL_CREATURE_TARGET),A
	CALL_FOREIGN	?BTL_APPLY_COMMAND		
	JR		_ENEMY_LOOP

_APPLY_MAGI
	CALL	?BTL_APPLY_TARGET_CHECK_MAGI
	LD		A,(BTL_APPLY_FLAG)
	AND		A
	RET		Z
	LD		A,9
	LD		(BTL_CREATURE_TARGET),A
	CALL_FOREIGN	?BTL_APPLY_COMMAND		
	
	RET
	
;********************************
?BTL_APPLY_RELICS

	;Apply relic STATS funcs
	;--------------------------
	LD		A,(BTL_TARGET_RELIC0)
	AND		A
	JR		Z,_2ND_RELIC
	
	;Copy the relic to memory
	;--------------------
	LD		A,(BTL_TARGET_RELIC0)
	LD		(INV_OBJ_INDEX),A
	LD		BC,BTL_TABLE_COPY_BUFFER
	FSET16	B,C,INV_ADDR
	CALL_FOREIGN	?INV_COPY_RELIC_INDEX
	
	;Call the STATS func
	;-------------------------
	LD		HL,BTL_TABLE_COPY_BUFFER+RELIC_STATS_OFFSET
	DEREF_HL
	LD		E,RELIC_FUNC_BANK
	CALL	?CALL_FOREIGN		
	
_2ND_RELIC
	LD		A,(BTL_TARGET_RELIC1)
	AND		A
	RET		Z
	
	;Copy the relic to memory
	;--------------------
	LD		A,(BTL_TARGET_RELIC1)
	LD		(INV_OBJ_INDEX),A
	LD		BC,BTL_TABLE_COPY_BUFFER
	FSET16	B,C,INV_ADDR
	CALL_FOREIGN	?INV_COPY_RELIC_INDEX
	
	;Call the STATS func
	;-------------------------
	LD		HL,BTL_TABLE_COPY_BUFFER+RELIC_STATS_OFFSET
	DEREF_HL
	LD		E,RELIC_FUNC_BANK
	CALL	?CALL_FOREIGN


	RET

;********************************
?BTL_APPLY_TARGET_CHECK_ALLY

	SWITCH_RAM_BANK		WRAM_BATTLE

	LD		A,(BTL_APPLY_COUNT)

	LD		B,0
	LD		C,A
	LD		HL,BTL_CREATURE_SLOTS
	ADD		HL,BC
	
	LD		A,(HL)
	CP		0
	JP		Z,_INVALID
	
	LD		A,(BTL_PROCESS_ACTIVE)
	CP		5	
	JR		NC,_ENEMY
	
_ALLY
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLALLY_ME
	JR		Z,_VALID
			
	CP		BTL_TARGET_ALLALLY_MAGI_ME
	JR		Z,_VALID	

	CP		BTL_TARGET_ALL_ME
	JR		Z,_VALID
			
	CP		BTL_TARGET_ALL_MAGI_ME
	JR		Z,_VALID	
	
	CP		BTL_TARGET_ALLALLY
	JR		NZ,_1
	LD		A,(BTL_APPLY_COUNT)
	LD		B,A
	LD		A,(BTL_PROCESS_ACTIVE)
	CP		B	
	JR		NZ,_VALID	
_1
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLALLY_MAGI
	JR		NZ,_2
	LD		A,(BTL_APPLY_COUNT)
	LD		B,A
	LD		A,(BTL_PROCESS_ACTIVE)
	CP		B	
	JR		NZ,_VALID	
	
_2
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALL
	JR		NZ,_3
	LD		A,(BTL_APPLY_COUNT)
	LD		B,A
	LD		A,(BTL_PROCESS_ACTIVE)
	CP		B	
	JR		NZ,_VALID	

_3
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALL_MAGI
	JR		NZ,_INVALID
	LD		A,(BTL_APPLY_COUNT)
	LD		B,A
	LD		A,(BTL_PROCESS_ACTIVE)
	CP		B	
	JR		NZ,_VALID	

	JR		_INVALID	

_ENEMY
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLENEMY
	JR		Z,_VALID
			
	CP		BTL_TARGET_ALLENEMY_MAGI
	JR		Z,_VALID	
	
	CP		BTL_TARGET_ALL
	JR		NC,_VALID

_INVALID
	XOR		A
	LD		(BTL_APPLY_FLAG),A
	RET
	
_VALID
	LD		A,1
	LD		(BTL_APPLY_FLAG),A
	RET

;********************************
?BTL_APPLY_TARGET_CHECK_ENEMY

	SWITCH_RAM_BANK		WRAM_BATTLE

	LD		A,(BTL_APPLY_COUNT)

	LD		B,0
	LD		C,A
	LD		HL,BTL_CREATURE_SLOTS
	ADD		HL,BC
	
	LD		A,(HL)
	CP		0
	JP		Z,_INVALID
	
	LD		A,(BTL_PROCESS_ACTIVE)
	CP		5	
	JR		C,_ALLY
	
_ENEMY
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLALLY_ME
	JR		Z,_VALID
			
	CP		BTL_TARGET_ALLALLY_MAGI_ME
	JR		Z,_VALID	

	CP		BTL_TARGET_ALL_ME
	JR		Z,_VALID
			
	CP		BTL_TARGET_ALL_MAGI_ME
	JR		Z,_VALID	
	
	CP		BTL_TARGET_ALLALLY
	JR		NZ,_1
	LD		A,(BTL_APPLY_COUNT)
	LD		B,A
	LD		A,(BTL_PROCESS_ACTIVE)
	CP		B	
	JR		NZ,_VALID	
_1
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLALLY_MAGI
	JR		NZ,_2
	LD		A,(BTL_APPLY_COUNT)
	LD		B,A
	LD		A,(BTL_PROCESS_ACTIVE)
	CP		B	
	JR		NZ,_VALID	
	
_2
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALL
	JR		NZ,_3
	LD		A,(BTL_APPLY_COUNT)
	LD		B,A
	LD		A,(BTL_PROCESS_ACTIVE)
	CP		B	
	JR		NZ,_VALID	

_3
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALL_MAGI
	JR		NZ,_INVALID
	LD		A,(BTL_APPLY_COUNT)
	LD		B,A
	LD		A,(BTL_PROCESS_ACTIVE)
	CP		B	
	JR		NZ,_VALID	

	JR		_INVALID	

_ALLY
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLENEMY
	JR		Z,_VALID
			
	CP		BTL_TARGET_ALLENEMY_MAGI
	JR		Z,_VALID	
	
	CP		BTL_TARGET_ALL
	JR		NC,_VALID

_INVALID
	XOR		A
	LD		(BTL_APPLY_FLAG),A
	RET
	
_VALID
	LD		A,1
	LD		(BTL_APPLY_FLAG),A
	RET
		
;********************************
?BTL_APPLY_TARGET_CHECK_MAGI

	SWITCH_RAM_BANK		WRAM_BATTLE

	;IS THE MAGI VISIBLE?
	LD		A,(BTL_CREATURE_SLOTS+9)
	CP		0
	JR		Z,_INVALID

	LD		A,(BTL_PROCESS_ACTIVE)
	CP		5
	
	JR		C,_ALLY
	
_ENEYMY
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLALLY_MAGI
	JR		Z,_VALID
	
	CP		BTL_TARGET_ALLALLY_MAGI_ME
	JR		Z,_VALID
	
	CP		BTL_TARGET_ALL_MAGI
	JR		Z,_VALID
	
	CP		BTL_TARGET_ALL_MAGI_ME
	JR		Z,_VALID
	
	JR		_INVALID	
	
_ALLY
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLENEMY_MAGI
	JR		Z,_VALID
			
	CP		BTL_TARGET_ALL_MAGI
	JR		Z,_VALID
	
	CP		BTL_TARGET_ALL_MAGI_ME
	JR		Z,_VALID

_INVALID
	XOR		A
	LD		(BTL_APPLY_FLAG),A
	RET
	
_VALID
	LD		A,1
	LD		(BTL_APPLY_FLAG),A
	RET

;********************************
?BTL_APPLY_TARGET_CHECK_TONY

	SWITCH_RAM_BANK		WRAM_BATTLE
	
	LD		A,(BTL_PROCESS_ACTIVE)
	CP		5
	
	JR		NC,_ENEMY
	
_ALLY
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLALLY_MAGI
	JR		Z,_VALID
	
	CP		BTL_TARGET_ALLALLY_MAGI_ME
	JR		Z,_VALID
	
	CP		BTL_TARGET_ALL_MAGI
	JR		Z,_VALID
	
	CP		BTL_TARGET_ALL_MAGI_ME
	JR		Z,_VALID
	
	JR		_INVALID	
	
_ENEMY
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLENEMY_MAGI
	JR		Z,_VALID
			
	CP		BTL_TARGET_ALL_MAGI
	JR		Z,_VALID
	
	CP		BTL_TARGET_ALL_MAGI_ME
	JR		Z,_VALID

_INVALID
	XOR		A
	LD		(BTL_APPLY_FLAG),A
	RET
	
_VALID
	LD		A,1
	LD		(BTL_APPLY_FLAG),A
	RET
	
;********************************
?BTL_BOOTY

	LD		A,(BTL_NO_BOOTY)
	AND		A
	RET		NZ	

	LD		A,(BTL_CASH_PENDING)	
	SRL		A
	INC		A
	LD		(INV_ID_TOTAL),A
	
	CALL_FOREIGN	?INV_GIVE_ANIMITE
	LD		A,(INV_ID_TOTAL)
	
	AND		A
	JR		Z,_NO_CASH
	
	LD		E,A
	LD		D,0
	CALL	?CONVERT_NUMBER_2_ELEMENT
	
	LD		HL,TEXT_PARAM_BUFFER
	LD		A,(X100)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X10)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X1)
	ADD		A,?0
	LD		(HLI),A
	LD		(HL),?FORMAT
	TEXT_SET_PARAMS	TEXT_PARAM_BUFFER
	SCRIPT_SET		TEXT_SCRIPT,?_BTL_GOT_CASH_MSG
	
	CALL_FOREIGN	?BTL_TEXT_LOOP
	
_NO_CASH
	RANDVAL	B
	AND		$0F
	CP		$08
	JR		NC,_2ND_CHANCE
	CALL	?BTL_RAND_DEAD_CREATURE
	CP		$FF
	JR		Z,_2ND_CHANCE
	LD		(INV_ID),A
	LD		A,INV_TYPE_INFUSED
	LD		(INV_ID_TYPE),A
	LD		A,1
	LD		(INV_ID_TOTAL),A
	CALL_FOREIGN	?INVENTORY_GIVE
	
	TEXT_SET_PARAMS	TEXT_PARAM_BUFFER
	SCRIPT_SET		TEXT_SCRIPT,?_BTL_GOT_INFUSED_MSG
	
	CALL_FOREIGN	?BTL_TEXT_LOOP
	
	
_2ND_CHANCE
	RANDVAL	B
	SWAP	A
	AND		$0F
	CP		$05
	RET		NC
	CALL	?BTL_RAND_DEAD_CREATURE
	CP		$FF
	RET		Z
	LD		(INV_ID),A
	LD		A,INV_TYPE_INFUSED
	LD		(INV_ID_TYPE),A
	LD		A,1
	LD		(INV_ID_TOTAL),A
	CALL_FOREIGN	?INVENTORY_GIVE
	
	TEXT_SET_PARAMS	TEXT_PARAM_BUFFER
	SCRIPT_SET		TEXT_SCRIPT,?_BTL_GOT_INFUSED_MSG
	
	CALL_FOREIGN	?BTL_TEXT_LOOP

	RET

;********************************
?BTL_CHECK_TARGET

	SWITCH_RAM_BANK		WRAM_BATTLE

;*********************************
;DEBUG
;*********************************
;	LD		A,1
;	LD		(BTL_CREATURE_SLOTS+BTL_ID_HERO),A
;	LD		(BTL_CREATURE_SLOTS+BTL_ID_ALLY0),A
;	LD		(BTL_CREATURE_SLOTS+BTL_ID_ALLY1),A
;	LD		(BTL_CREATURE_SLOTS+BTL_ID_ALLY2),A
;	LD		(BTL_CREATURE_SLOTS+BTL_ID_ALLY3),A
;	LD		(BTL_CREATURE_SLOTS+BTL_ID_ENEMY0),A
;	LD		(BTL_CREATURE_SLOTS+BTL_ID_ENEMY1),A
;	LD		(BTL_CREATURE_SLOTS+BTL_ID_ENEMY2),A	
;	LD		(BTL_CREATURE_SLOTS+BTL_ID_ENEMY3),A	
;	LD		(BTL_CREATURE_SLOTS+BTL_ID_MAGI),A
;*********************************
;END DEBUG
;*********************************	

	LD		A,(BTL_CREATURE_COST)
	
	AND		A
	JR		Z,_TARGET_CHECK			;ALWAYS HAVE 0 ENERGY
	
	LD		C,A						;STORE COST IN C
	LD		HL,BTL_CREATURE_ENGH
	LD		A,(HLI)
	LD		L,(HL)
	LD		H,A						;ENERGY LEFT IN HL
	LD		B,0
	TWOS_COMP	B,C
	ADD		HL,BC
	JR		C,_TARGET_CHECK
	
_NOT_ENOUGH_NRG
	;PLAY SND EFFECT
	SOUND_START_SFX	SFXID_SFX_CANCEL
	
	LD		A,1
	LD		(BTL_SCRIPT_NO_ENERGY),A
	XOR		A
	LD		(BTL_CMD_VALID),A
	RET

_TARGET_CHECK	
	LD		A,H
	OR		L
	JR		Z,_NOT_ENOUGH_NRG

	LD		A,(BTL_CREATURE_TARGET)
	LD		(BTL_TARGET_MODE),A
	SUB		BTL_TARGET_ME			;FIRST TARGET EQUATE
	ADD		A,A						;GET PROPER OFFSET
	LD		C,A
	LD		B,0
	LD		HL,BTL_VALID_TARGET_FUNC_TABLE
	ADD		HL,BC
	ECALL_HL						;CALL THE TARGET FUNC	

	RET


;********************************	
?BTL_DAMAGE_TO_VRAM

	XOR		A
	LD		(BTL_BOUNCE_SHOW_ZERO),A

	LD		A,(X100)
	AND		A
	JR		Z,_100_BLANK
	LD		(BTL_BOUNCE_SHOW_ZERO),A
	ADD		A,BTL_0
	LD		C,A
	LD		B,0
	JR		_DO_100_VBLANK	
	
_100_BLANK
	LD		BC,BTL_FONT_BLANK
	
_DO_100_VBLANK
	SLA16		B,C,4
	LD		HL,BIT_DIGITS
	ADD		HL,BC
	
	SET16	H,L,VBLANK_SOURCE
	LD		BC,BTL_NUMBOUNCE_START
	FSET16	B,C,VBLANK_DEST
	LD		A,1
	LD		(VBLANK_VBK),A
	
	MOVADDR		VBLANK_FUNC,?BATTLE_COPY_TILE
	CALL	?SYSTEM_UPDATE_GAME	

	LD		A,(BTL_BOUNCE_SHOW_ZERO)
	AND		A
	LD		A,(X10)
	JR		NZ,_DO_10
	AND		A
	JR		Z,_10_BLANK
	LD		(BTL_BOUNCE_SHOW_ZERO),A
	
_DO_10
	ADD		A,BTL_0
	LD		C,A
	LD		B,0
	JR		_DO_10_VBLANK	
	
_10_BLANK
	LD		BC,BTL_FONT_BLANK
	
_DO_10_VBLANK
	SLA16		B,C,4
	LD		HL,BIT_DIGITS
	ADD		HL,BC
	
	SET16	H,L,VBLANK_SOURCE
	LD		BC,BTL_NUMBOUNCE_START
	
	MOVADDR		VBLANK_FUNC,?BATTLE_COPY_TILE
	CALL	?SYSTEM_UPDATE_GAME
	
	LD		A,(BTL_BOUNCE_SHOW_ZERO)
	AND		A
	LD		A,(X1)
	JR		NZ,_DO_1
	AND		A
	JR		Z,_1_BLANK
	LD		(BTL_BOUNCE_SHOW_ZERO),A
	
_DO_1
	ADD		A,BTL_0
	LD		C,A
	LD		B,0
	JR		_DO_1_VBLANK	
	
_1_BLANK
	LD		BC,BTL_FONT_BLANK
	
_DO_1_VBLANK
	SLA16		B,C,4
	LD		HL,BIT_DIGITS
	ADD		HL,BC
	
	SET16	H,L,VBLANK_SOURCE
	LD		BC,BTL_NUMBOUNCE_START
	
	MOVADDR		VBLANK_FUNC,?BATTLE_COPY_TILE
	CALL	?SYSTEM_UPDATE_GAME	

	RET

;********************************	
?BTL_DIVERT_TARGET	

	;Divert becuase dead or because of status?
	;---------------------------------
	LD		A,(BTL_DIVERT_TYPE)
	CP		BTL_DEAD_REDIRECT
	JR		Z,_DEAD_REDIRECT
	
_DIVERT_REDIRECT
	;which team is the creature on?
	;------------------------------
	LD		A,(BTL_CREATURE_TARGET)
	CP		BTL_ID_ENEMY0
	JR		C,_DIVERT_ALLY
	
_DIVERT_ENEMY	
	LD		D,A
	LD		BC,BTL_ID_ENEMY0
	LD		HL,BTL_CREATURE_SLOTS
	ADD		HL,BC
	
_DIVERT_ENEMY_LOOP
	;cycle through enemy creature slots
	;if you go past end, divert status fails
	;--------------------------
	PUSH	HL
	LD		BC,BTL_CREATURE_SLOTS+BTL_ID_MAGI+1
	TWOS_COMP	B,C
	ADD		HL,BC
	LD		A,H
	OR		L
	POP		HL
	RET		Z
	
	LD		A,(HLI)
	AND		A
	JR		Z,_DIVERT_ENEMY_LOOP

	;set new target, unless the one diverting
	;--------------------
	LD		BC,BTL_CREATURE_SLOTS
	TWOS_COMP	B,C
	PUSH	HL
	ADD		HL,BC
	LD		A,L
	DEC		A
	CP		D
	POP		HL
	JR		Z,_DIVERT_ENEMY_LOOP

	LD		(BTL_CREATURE_TARGET),A	
	RET
	
_DIVERT_ALLY
	LD		D,A
	LD		BC,BTL_ID_ALLY3
	LD		HL,BTL_CREATURE_SLOTS
	ADD		HL,BC
	
_DIVERT_ALLY_LOOP
	;cycle through ally creature slots
	;--------------------------
	LD		A,(HLD)
	AND		A
	JR		Z,_DIVERT_ALLY_LOOP

	;set new target, unless the one diverting
	;--------------------
	LD		BC,BTL_CREATURE_SLOTS
	TWOS_COMP	B,C
	PUSH	HL
	ADD		HL,BC
	LD		A,L
	INC		A
	CP		D
	POP		HL
	JR		Z,_DIVERT_ALLY_LOOP
	
	LD		(BTL_CREATURE_TARGET),A	
	RET
	
_DEAD_REDIRECT
	LD		A,(BTL_CREATURE_TARGET)
	CP		BTL_ID_ENEMY0
	JR		C,_DEAD_ALLY
	
_DEAD_ENEMY
	LD		BC,BTL_ID_ENEMY0
	LD		HL,BTL_CREATURE_SLOTS
	ADD		HL,BC
	
_DEAD_ENEMY_LOOP
	;find someone else on same team to beat on
	;-----------------------------------
	LD		A,(HLI)
	AND		A
	JR		Z,_DEAD_ENEMY_LOOP
	
	;set new target
	;---------------------
	LD		BC,BTL_CREATURE_SLOTS
	TWOS_COMP	B,C
	ADD		HL,BC
	LD		A,L
	DEC		A
	LD		(BTL_CREATURE_TARGET),A
	RET	
	
_DEAD_ALLY
	LD		BC,BTL_ID_ALLY3
	LD		HL,BTL_CREATURE_SLOTS
	ADD		HL,BC
	
_DEAD_ALLY_LOOP
	;find someone else on same team to beat on
	;-----------------------------------
	LD		A,(HLD)
	AND		A
	JR		Z,_DEAD_ALLY_LOOP	
	
	;set new target
	;---------------------
	LD		BC,BTL_CREATURE_SLOTS
	TWOS_COMP	B,C
	ADD		HL,BC
	LD		A,L
	INC		A
	LD		(BTL_CREATURE_TARGET),A
	RET	

;********************************	
?BTL_DRAIN_ATTACK
	
	LD		A,1
	LD		(BTL_PENDING_MSG),A
	
	SCRIPT_SET	TEXT_SCRIPT,?_BTL_DRAIN_MSG
	CALL		?BTL_MSG_NORM_PARAMS	
	
	RET	
	
;********************************
?BTL_DRAW_MENU
	
	LD		A,(BTL_ACTIVE_TURN)
	AND		A
	JR		Z,_TONY
	
	BTL_TEXTOPEN
	
	LD		A,(BTL_ACTIVE_TURN)

	DEC		A
	LD		B,20   		;CREATURE CARD SIZE
	LD		C,A			;WHICH CREATURE
	CALL	?MULT
	LD		A,L
	ADD		A,$30
	LD		(BTL_ICON_START),A
	LD		A,5
	LD		(VBLANK_BANK),A
	MOVADDR	VBLANK_FUNC,?BTL_VBLANK_ICON
	CALL	?SYSTEM_UPDATE_GAME
	JR		_BOTH

_TONY
	;SWAP SUMMON AND FOCUS
	;----------------------------
	LD		HL,BTL_MENU_CMD_NAME0
	LD		BC,BTL_MENU_CMD_NAME_SWAP
	LD		D,7
	
_SWAP_LOOP1
	LD_BCI_HLI
	DEC		D
	JR		NZ,_SWAP_LOOP1
	
	LD		HL,BTL_MENU_CMD_NAME1
	LD		BC,BTL_MENU_CMD_NAME0
	LD		D,7
	
_SWAP_LOOP2
	LD_BCI_HLI
	DEC		D
	JR		NZ,_SWAP_LOOP2
	
	LD		HL,BTL_MENU_CMD_NAME_SWAP
	LD		BC,BTL_MENU_CMD_NAME1
	LD		D,7
	
_SWAP_LOOP3
	LD_BCI_HLI
	DEC		D
	JR		NZ,_SWAP_LOOP3

;	LD		A,20
;	LD		(BTL_COUNTER),A
_ASSLOOP
;	CALL	?SYSTEM_UPDATE_GAME
;	LD		HL,BTL_COUNTER
;	DEC		(HL)
;	JR		NZ,_ASSLOOP

_BOTH
	;LD NRG STRINGS
	;----------------------------------
	CALL	?BTL_GET_ENERGY_STR
	CALL	?BTL_GET_COST_STR
	
	;PRINT ALL STRS
	;-------------------------------------
	SWITCH_RAM_BANK		WRAM_BATTLE
	
_NRG_STRING
	MENU_TEXT_SETUP	$8A90,$01,$9C0D,7,BTL_MENU_NRG_STR
	
	MENU_TEXTUPDATE		_UPDATE1
	
_CMD_ZERO
	MENU_TEXT_SETUP	$8860,$01,$9C05,7,BTL_MENU_CMD_NAME0
	
	MENU_TEXTUPDATE		_UPDATE2

_CMD_ONE
	MENU_TEXT_SETUP	$88D0,$01,$9C25,7,BTL_MENU_CMD_NAME1
	
	MENU_TEXTUPDATE		_UPDATE3
	
_CMD_ONE_COST
	MENU_TEXT_SETUP	$8B00,$01,$9C2F,3,BTL_MENU_CMD_COST1

	MENU_TEXTUPDATE		_UPDATE4

_CMD_TWO
	MENU_TEXT_SETUP	$8940,$01,$9C45,7,BTL_MENU_CMD_NAME2

	MENU_TEXTUPDATE		_UPDATE5
	
_CMD_TWO_COST
	MENU_TEXT_SETUP	$8B30,$01,$9C4F,3,BTL_MENU_CMD_COST2

	MENU_TEXTUPDATE		_UPDATE6
	
_CMD_THREE
	MENU_TEXT_SETUP	$89B0,$01,$9C65,7,BTL_MENU_CMD_NAME3

	MENU_TEXTUPDATE		_UPDATE7
	
_CMD_THREE_COST
	MENU_TEXT_SETUP	$8B60,$01,$9C6F,3,BTL_MENU_CMD_COST3
	
	MENU_TEXTUPDATE		_UPDATE8
	
_CMD_FOUR
	MENU_TEXT_SETUP	$8A20,$01,$9C85,7,BTL_MENU_CMD_NAME4

	MENU_TEXTUPDATE		_UPDATE9
	
_CMD_FOUR_COST
	MENU_TEXT_SETUP	$8B90,$01,$9C8F,3,BTL_MENU_CMD_COST4
	
	MENU_TEXTUPDATE		_UPDATE10
	
_CMD_DEFEND
	MENU_TEXT_SETUP	$9060,$01,$9CA5,8,BTL_DEFEND_STR
	
	MENU_TEXTUPDATE		_UPDATE11
	
	RET	

;********************************
?BTL_GET_COST_STR

	;FIRST FILL NAME STRS W/ DASHES.
	;-------------------------------
	SWITCH_RAM_BANK		WRAM_BATTLE
	
	LD		A,?DASH	
	LD		HL,BTL_MENU_CMD_COST1

	LD		B,12
	
_DASH_LOOP	
	LD		(HLI),A
	DEC		B
	JR		NZ,_DASH_LOOP
	

	;THEN CALC EACH CMDS COST STR, SKIP IF COST = 0
	;----------------------------------------------
	
	LD		C,0			;C = COUNTER

_TOP
	LD		B,0	
	LD		HL,BTL_CREATURE_CMD0
	ADD		HL,BC
	ADD		HL,BC
	
	LD		A,(HLI)
	LD		H,(HL)
	LD		L,A

	INC		HL
	INC		HL				;COST BYTE
	SET16	H,L,BTL_TABLE_COPY_FROM
	CALL_FOREIGN	?BTL_GET_CMD_BYTE
	LD		A,D
	
	;COST = 0?	
	LD		D,0				;NEED TO BE 0 FOR C_N_2_E ANYWAY
	OR		D
	JR		Z,_DONE	
	
	LD		E,A
	PUSH	BC
	CALL	?CONVERT_NUMBER_2_ELEMENT
	POP		BC
	
	LD		B,3			;SIZE OF COST STR
	
	CALL	?MULT
	
	LD		DE,BTL_MENU_CMD_COST1
	ADD		HL,DE

	LD		A,(X100)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X10)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X1)
	ADD		A,?0
	LD		(HLI),A
	
_DONE
	INC		C
	LD		A,4
	CP		C
	RET		Z
	
	LD		B,0
	LD		HL,BTL_CREATURE_CMD1LVL-1
	ADD		HL,BC
	LD		A,(HL)
	CP		$FF
	RET		NZ
		
	JR		_TOP

;********************************
?BTL_GET_ENERGY_STR

	LD		HL,BTL_CREATURE_ENGH
	LD		A,(HLI)
	LD		E,(HL)
	LD		D,A
	CALL	?CONVERT_NUMBER_2_ELEMENT
	
	LD		HL,BTL_MENU_NRG_STR
	LD		A,(X100)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X10)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X1)
	ADD		A,?0
	LD		(HLI),A
	LD		A,?COLN
	LD		(HLI),A
	
	LD		HL,BTL_CREATURE_ENGMAXH
	LD		A,(HLI)
	LD		E,(HL)
	LD		D,A
	CALL	?CONVERT_NUMBER_2_ELEMENT	
	
	LD		HL,BTL_MENU_NRG_STR+4
	LD		A,(X100)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X10)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X1)
	ADD		A,?0
	LD		(HLI),A
	
	RET	

;*******************************	
?BTL_KILL_TARGET

	LD		A,(BTL_TARGET_TYPE)
	CP		CREATURE_TYPE_MAGI
	RET		Z

	LD		A,1
	LD		(BTL_DEATH_FLAG),A
	
	RET
	
;*******************************
?BTL_MENU_ITEM

	SWITCH_RAM_BANK		WRAM_BATTLE	
	
	;Simulate main menu entry into item menu
	;And setup vars for the dyn packer
	;-----------------------------------	
	LD		BC,XRAM_INVENTORY_ITEMS
	FSET16	B,C,MENU_DYN_XRAM_BASE
	LD		BC,ITEM_TABLE
	FSET16	B,C,MENU_DYN_TABLE_BASE
	LD		A,ITEM_SIZE
	LD		(MENU_INV_SIZE),A
	XOR		A
	
?BTL_MENU_ITEM_LOAD_ARRAY
	ADD		A,$0D
	LD		(MENU_CURSOR_ID),A
	
	BATTERY_ON
	BATTERY_SET_BANK	RAMB_GAMESTATE
	
	CALL_FOREIGN	?MAIN_MENU_PACK_DYN_ARRAY
	
	BATTERY_OFF
	
	LD		HL,MENU_CURSOR_ID
	LD		A,(HL)
	SUB		$0D
	LD		(HL),A
	
	;See if they have no items
	;-----------------------------------
	FGET16	H,L,MENU_DYN
	LD		A,H
	OR		L
	JR		NZ,_HAVE_ITEMS
	
	;Buzz and throw them back into the main menu
	;-------------------------------------
	SOUND_START_SFX		SFXID_ERROR
	LD		A,$FE
	LD		(MENU_RETURN_VALUE),A
	RET	
	
_HAVE_ITEMS
	BTL_TEXTCLOSE	
	BTL_TEXTOPEN

	;See if they are at the edge
	;---------------------------
	LD		A,(MENU_NEW_INFO)
	AND		A
	JP		Z,_SETUP_MENU	

	XOR		A
	LD		(BTL_COUNTER),A
		
_ITEM_NAME_LOOP
	LD		HL,MENU_DYN
	LD		A,(BTL_COUNTER)
	LD		C,A
	LD		B,0
	ADD		HL,BC
	ADD		HL,BC
	LD		A,(HLI)
	LD		H,(HL)
	LD		L,A
	GET16	D,E,MENU_DYN_XRAM_BASE		;GRAB INDEX
	TWOS_COMP	D,E
	ADD		HL,DE
	LD		B,L
	LD		C,ITEM_SIZE
	
	CALL	?MULT
	
	GET16	B,C,MENU_DYN_TABLE_BASE
	ADD		HL,BC	
	SET16	H,L,INV_OBJ_PTR				;GET INTO TABLE
	LD		BC,BTL_TABLE_COPY_BUFFER
	FSET16	B,C,INV_ADDR
	CALL_FOREIGN	?INV_COPY_ITEM_ARRAY		;COPY INTO BUF
	LD		HL,BTL_TABLE_COPY_BUFFER
	LD		BC,ITEM_NAME_OFFSET
	ADD		HL,BC
	PUSH	HL							;STR LOCATION

	LD		A,(BTL_COUNTER)				;VRAM LOCATION
	LD		B,A
	LD		C,ITEM_NAME_SIZE						
	CALL	?MULT	
	SLA16	H,L,4
	LD		BC,BTL_ITEM_VRAM1
	ADD		HL,BC
	PUSH	HL
	
	LD		A,(BTL_COUNTER)				;BG LOCATION
	LD		B,A
	LD		C,$20						;DISTANCE BETWEEN ROWS
	CALL	?MULT	
	LD		BC,BTL_ITEM_BG1
	ADD		HL,BC
	LD		B,H
	LD		C,L	
	
	POP		DE
	POP		HL
	MENU_TEXT_SETUP_REG	1,ITEM_NAME_SIZE
	MENU_TEXTUPDATE		_INSIDE_LOOP
	
	LD		HL,BTL_COUNTER
	INC		(HL)
	LD		A,5
	CP		(HL)
	JP		NZ,_ITEM_NAME_LOOP
	
_ITEM_QUAN
	
	XOR		A
	LD		(BTL_COUNTER),A	

_ITEM_QUAN_LOOP
	LD		HL,MENU_DYN
	LD		A,(BTL_COUNTER)
	LD		C,A
	LD		B,0
	ADD		HL,BC
	ADD		HL,BC
	LD		A,(HLI)			;GET QUAN FROM XRAM
	LD		H,(HL)
	LD		L,A
	
	BATTERY_ON
	BATTERY_SET_BANK	RAMB_GAMESTATE
	
	LD		E,(HL)
	LD		D,0
	
	BATTERY_OFF	
	
	XOR		A
	CP		E
	JR		NZ,_NOT_ZERO
	
	LD		A,?SPCE-?0
	LD		HL,X1
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	JR		_ZERO
	
_NOT_ZERO
	CALL	?CONVERT_NUMBER_2_ELEMENT	;CONVERT AND PACK
_ZERO
	LD		HL,BTL_TABLE_COPY_BUFFER
	LD		A,(X100)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X10)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X1)
	ADD		A,?0
	LD		(HLI),A	
	
	LD		A,(BTL_COUNTER)				;GET VRAM LOC
	LD		B,A
	LD		C,3
	CALL	?MULT
	SLA16	H,L,4
	LD		BC,BTL_ITEM_QUAN_VRAM1
	ADD		HL,BC
	PUSH	HL
	
	LD		A,(BTL_COUNTER)				;BG LOCATION
	LD		B,A
	LD		C,$20						;DISTANCE BETWEEN ROWS
	CALL	?MULT	
	LD		BC,BTL_ITEM_QUAN_BG1
	ADD		HL,BC
	LD		B,H
	LD		C,L	
	
	LD		HL,BTL_TABLE_COPY_BUFFER	
	
	POP		DE
	MENU_TEXT_SETUP_REG	1,3
	MENU_TEXTUPDATE		_INSIDE_LOOP2	
	
	LD		HL,BTL_COUNTER
	INC		(HL)
	LD		A,5
	CP		(HL)
	JP		NZ,_ITEM_QUAN_LOOP
	
_SETUP_MENU
	;Steup the menu_valid_slots for the items
	;----------------------------------------
	LD		HL,MENU_DYN
	LD		DE,BTL_MENU_VALID_SLOTS
	LD		C,5
	
_VALID_LOOP
	PUSH	DE
	LD		A,(HLI)		;IF THE INV SLOT IS EMPTY
	LD		D,(HL)		;IT WILL BE $0000
	LD		E,A			;AND THUS WILL CLEAR THE MENU
	PUSH	HL
	TWOS_COMP	D,E
	FGET16	H,L,MENU_DYN_XRAM_BASE
	ADD		HL,DE
	LD		A,H
	OR		L	
	POP		HL
	POP		DE
	LD		(DE),A		;SLOT OTHERWISE, IT WILL BE 
	INC		DE			;LOADED W/ NON-ZERO VAL
	INC		HL
	DEC		C
	JR		NZ,_VALID_LOOP
	
	LD		A,1			;GET THE PG L/R VALID
	LD		(DE),A
	INC		DE
	LD		(DE),A	
		
	BATTERY_ON
	BATTERY_SET_BANK	RAMB_GAMESTATE
	
_CHECK_TOP
	FGET16	B,C,MENU_DYN_XRAM_BASE
	TWOS_COMP	B,C
	LD		HL,MENU_DYN
	DEREF_HL
	ADD		HL,BC
	LD		B,0
	LD		C,L		
	
_CHECK_TOP_LOOP
	FGET16	H,L,MENU_DYN_XRAM_BASE
	DEC		BC
	LD		A,$FF
	CP		C
	JR		Z,_AT_TOP
	ADD		HL,BC
	LD		A,(HL)
	AND		A
	JR		Z,_CHECK_TOP_LOOP
	JR		_CHECK_BOTTOM
		
_AT_TOP
	XOR		A
	LD		(BTL_MENU_VALID_SLOTS+5),A

_CHECK_BOTTOM
	FGET16	B,C,MENU_DYN_XRAM_BASE
	TWOS_COMP	B,C
	LD		HL,MENU_DYN+8
	DEREF_HL
	ADD		HL,BC
	LD		B,0
	LD		C,L	
	LD		A,C
	AND		C
	JR		Z,_AT_BOTTOM
	
_CHECK_BOTTOM_LOOP
	FGET16	H,L,MENU_DYN_XRAM_BASE
	INC		BC
	LD		A,$FF
	CP		C
	JR		Z,_AT_BOTTOM
	ADD		HL,BC
	LD		A,(HL)
	AND		A
	JR		Z,_CHECK_BOTTOM_LOOP
	JR		_CHECK_DONE
	
_AT_BOTTOM
	XOR		A
	LD		(BTL_MENU_VALID_SLOTS+6),A
	
_CHECK_DONE
	BATTERY_OFF
	
	MOVADDR	VBLANK_FUNC,?BATTLE_PGLR_VBLANK
	CALL	?SYSTEM_UPDATE_GAME
	
		
_MENU
	MOVADDR		HFUNC,?HFUNC_WINDOW_SPRITE	;LET THE CURSOR BE SEEN
	MENU_INIT	BATTLE_ITEM,243,BTL_MENU_VALID_SLOTS,?MENU_FLASH,?MENU_FLASH,0,MENU_CURSOR_BLINK,MENU_CURSOR_SPRITE
	LD		HL,CNTDOWN
	XOR		A
	LD		(HL),A
	
_MENU_LUPE
	MENU_GO
	CALL	?SYSTEM_UPDATE_GAME
	LD		A,(MENU_RETURN_VALUE)
	CP		$FF	
	JR		Z,_MENU_LUPE
	
_DEAL_WITH_RETURN
	CP		$FE			;DID THEY CANCEL OUT?
	RET		Z
	
	CP		$05			;DID THEY PAGE RIGHT/LEFT?
	JP		NC,?BTL_MENU_ITEM_LOAD_ARRAY	
	
_LOAD_CMD
	LD		C,A
	LD		B,0
	LD		HL,MENU_DYN
	ADD		HL,BC
	ADD		HL,BC
	LD		A,(HLI)
	LD		H,(HL)
	LD		L,A
	GET16	D,E,MENU_DYN_XRAM_BASE		;GRAB INDEX
	TWOS_COMP	D,E
	ADD		HL,DE
	LD		B,L
	LD		C,ITEM_SIZE
		
	CALL	?MULT
	
	GET16	B,C,MENU_DYN_TABLE_BASE
	ADD		HL,BC						
	PUSH	HL							;SAVE ADDR INCASE IT IS VALID
	SET16	H,L,INV_OBJ_PTR				;GET INTO TABLE
	LD		BC,BTL_TABLE_COPY_BUFFER
	FSET16	B,C,INV_ADDR
	CALL_FOREIGN	?INV_COPY_ITEM_ARRAY
	
	LD		A,(BTL_TABLE_COPY_BUFFER+ITEM_USE_OFFSET)
	AND		USE_BATTLE
	JR		Z,_INVALID
	
	LD		A,(BTL_TABLE_COPY_BUFFER+ITEM_TARGET_OFFSET)	;LOAD THE TARGET MODE
	LD		(BTL_CREATURE_TARGET),A
	
	LD		A,(BTL_TABLE_COPY_BUFFER+SPELL_COST_OFFSET)	;LOAD THE COST
	LD		(BTL_CREATURE_COST),A		
	
	LD		A,(BTL_TABLE_COPY_BUFFER+ITEM_RATING_OFFSET)
	LD		(BTL_CREATURE_RATING),A
	
	CALL	?BTL_CHECK_TARGET
	LD		A,(BTL_CMD_VALID)
	AND		A
	JR		NZ,_VALID
	
_INVALID
	POP		BC
	SOUND_START_SFX		SFXID_SFX_CANCEL
	JP		_MENU	
	
_VALID
	POP		BC
	FSET16	B,C,BTL_CREATURE_ITEM	

	RET
	
;*******************************
?BTL_MENU_RING	

	SWITCH_RAM_BANK		WRAM_BATTLE	
	
	LD		A,BTL_SUMMON_SPARKLE
	LD		(BTL_ACTOR_EFFECT_TYPE),A
	
	LD		A,4
	LD		(MENU_CURSOR_ID),A		;SETUP FOR FIRST TIME THROUGH
	XOR		A
	
_PRINT_NAMES
	LD		(MENU_NAME_INDEX),A
	
	BTL_TEXTCLOSE	
	BTL_TEXTOPEN
	
	CALL_FOREIGN	?BTL_PRINT_CREATURE_NAMES
	;MENU_NAME_INDEX WILL COMEBACK AS YOU SENT IT
	
_PRINT_COSTS
	LD		A,?SPCE	
	LD		HL,BTL_MENU_CMD_COST0
	
	LD		B,15	
	
_BLNK_LOOP	
	LD		(HLI),A
	DEC		B
	JR		NZ,_BLNK_LOOP
	
	XOR		A
	LD		HL,BTL_MENU_VALID_SLOTS

	LD		B,5

_SLOT_LOOP	
	LD		(HLI),A
	DEC		B
	JR		NZ,_SLOT_LOOP

	;Page left and right
	;-------------------
	BATTERY_SET_BANK	RAMB_GAMESTATE
	BATTERY_ON
		
	;This will clear out page left and right if they 
	;have <6 rings on
	;-------------------------
	LD		A,(XRAM_INVENTORY_RINGS+5)
	PUSH	AF
	
	BATTERY_OFF
	
	POP		AF
	INC		A
	LD		(HLI),A
	XOR		A
	LD		(HLI),A
	
	SWITCH_RAM_BANK		WRAM_BATTLE	

_COST1
	MENU_RING_TO_ID		MENU_NAME_INDEX
	
	BATTERY_SET_BANK	RAMB_CREATURES
	BATTERY_ON
	
	;CHECK FOR EMPTY RING
	LD		A,B
	CP		$FF
	JR		Z,_COST2
	
	LD		A,1
	LD		(BTL_MENU_VALID_SLOTS),A
	
	LD		C,XRAM_CREATURE_ENGMAXH
	LD		B,0
	ADD		HL,BC
	
	LD		A,(HLI)
	LD		E,(HL)
	LD		D,A
	
	CALL	?CONVERT_NUMBER_2_ELEMENT
	
	LD		HL,BTL_MENU_CMD_COST0
	LD		A,(X100)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X10)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X1)
	ADD		A,?0
	LD		(HLI),A
	
	
_COST2
	LD		HL,MENU_NAME_INDEX
	INC		(HL)

	MENU_RING_TO_ID		MENU_NAME_INDEX
	
	BATTERY_SET_BANK	RAMB_CREATURES
	BATTERY_ON
	
	;CHECK FOR EMPTY RING
	LD		A,B
	CP		$FF
	JR		Z,_COST3
	
	LD		A,1
	LD		(BTL_MENU_VALID_SLOTS+1),A
	
	LD		C,XRAM_CREATURE_ENGMAXH
	LD		B,0
	ADD		HL,BC
	
	LD		A,(HLI)
	LD		E,(HL)
	LD		D,A
	
	CALL	?CONVERT_NUMBER_2_ELEMENT
	
	LD		HL,BTL_MENU_CMD_COST1
	LD		A,(X100)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X10)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X1)
	ADD		A,?0
	LD		(HLI),A
	
_COST3
	LD		HL,MENU_NAME_INDEX
	INC		(HL)

	MENU_RING_TO_ID		MENU_NAME_INDEX
	
	BATTERY_SET_BANK	RAMB_CREATURES
	BATTERY_ON
	
	;CHECK FOR EMPTY RING
	LD		A,B
	CP		$FF
	JR		Z,_COST4
		
	LD		A,1
	LD		(BTL_MENU_VALID_SLOTS+2),A
	
	LD		C,XRAM_CREATURE_ENGMAXH
	LD		B,0
	ADD		HL,BC
	
	LD		A,(HLI)
	LD		E,(HL)
	LD		D,A
	
	CALL	?CONVERT_NUMBER_2_ELEMENT
	
	LD		HL,BTL_MENU_CMD_COST2
	LD		A,(X100)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X10)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X1)
	ADD		A,?0
	LD		(HLI),A
	
_COST4
	LD		HL,MENU_NAME_INDEX
	INC		(HL)	

	MENU_RING_TO_ID		MENU_NAME_INDEX
	
	BATTERY_SET_BANK	RAMB_CREATURES
	BATTERY_ON
	
	;CHECK FOR EMPTY RING
	LD		A,B
	CP		$FF
	JR		Z,_COST5
	
	LD		A,1
	LD		(BTL_MENU_VALID_SLOTS+3),A
	
	LD		C,XRAM_CREATURE_ENGMAXH
	LD		B,0
	ADD		HL,BC
	
	LD		A,(HLI)
	LD		E,(HL)
	LD		D,A
	
	CALL	?CONVERT_NUMBER_2_ELEMENT
	
	LD		HL,BTL_MENU_CMD_COST3
	LD		A,(X100)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X10)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X1)
	ADD		A,?0
	LD		(HLI),A
	
_COST5
	LD		HL,MENU_NAME_INDEX
	INC		(HL)	

	MENU_RING_TO_ID		MENU_NAME_INDEX
	
	BATTERY_SET_BANK	RAMB_CREATURES
	BATTERY_ON
	
	;CHECK FOR EMPTY RING
	LD		A,B
	CP		$FF
	JR		Z,_COST_DONE
	
	LD		A,1
	LD		(BTL_MENU_VALID_SLOTS+4),A
	
	LD		C,XRAM_CREATURE_ENGMAXH
	LD		B,0
	ADD		HL,BC
	
	LD		A,(HLI)
	LD		E,(HL)
	LD		D,A
	
	CALL	?CONVERT_NUMBER_2_ELEMENT
	
	LD		HL,BTL_MENU_CMD_COST4
	LD		A,(X100)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X10)
	ADD		A,?0
	LD		(HLI),A
	LD		A,(X1)
	ADD		A,?0
	LD		(HLI),A
	

_COST_DONE
	BATTERY_OFF
	
	;MAKE MENU SKIP RINGS THAT ARE IN USE
	;------------------------
	LD		C,0
	LD		A,(BTL_RING_PTR)
	CP		9
	JR		NZ,_SKIP_CONTINUE
	LD		C,5
	
_SKIP_CONTINUE
	LD		B,0
	LD		HL,BTL_HERO_USED_RINGS
	ADD		HL,BC
	LD		BC,BTL_MENU_VALID_SLOTS
	LD		D,5
	
_SKIP_LOOP
	LD		A,(HLI)
	CP		2
	JR		NZ,_NO_SKIP
	XOR		A
	LD		(BC),A
	
_NO_SKIP
	INC		BC
	DEC		D
	JR		NZ,_SKIP_LOOP
	
	;Check for all rings used
	;------------------------
	LD		HL,BTL_MENU_VALID_SLOTS
	LD		D,7
	XOR		A
	
_ALL_USED_LOOP
	ADD		A,(HL)
	INC		HL
	DEC		D
	JR		NZ,_ALL_USED_LOOP
	AND		A
	JR		NZ,_DO_MENU
	LD		A,$FE
	LD		(MENU_RETURN_VALUE),A
	RET
		
_DO_MENU
	MENU_TEXT_SETUP	$8B80,$01,$9C0F,3,BTL_MENU_CMD_COST0
	
	MENU_TEXTUPDATE		_UPDATE1
	
	MENU_TEXT_SETUP	$8BB0,$01,$9C2F,3,BTL_MENU_CMD_COST1
	
	MENU_TEXTUPDATE		_UPDATE2
	
	MENU_TEXT_SETUP	$8BE0,$01,$9C4F,3,BTL_MENU_CMD_COST2
	
	MENU_TEXTUPDATE		_UPDATE3
	
	MENU_TEXT_SETUP	$8C10,$01,$9C6F,3,BTL_MENU_CMD_COST3
	
	MENU_TEXTUPDATE		_UPDATE4
	
	MENU_TEXT_SETUP	$8C40,$01,$9C8F,3,BTL_MENU_CMD_COST4
	
	MENU_TEXTUPDATE		_UPDATE5
	
	MOVADDR	VBLANK_FUNC,?BATTLE_PGLR_VBLANK
	CALL	?SYSTEM_UPDATE_GAME	

	MOVADDR		HFUNC,?HFUNC_WINDOW_SPRITE	;LET THE CURSOR BE SEEN
	
	LD		A,(MENU_CURSOR_ID)
	CP		4
	JR		Z,_MENU
	LD		A,$FF
	LD		(MENU_RETURN_VALUE),A
	JR		_MENU_LUPE	
	
_MENU
	
	MENU_INIT	BATTLE_RINGMENU,243,BTL_MENU_VALID_SLOTS,?MENU_FLASH,?MENU_FLASH,0,MENU_CURSOR_NOBLINK,MENU_CURSOR_SPRITE
	
_MENU_LUPE
	MENU_GO
	CALL	?SYSTEM_UPDATE_GAME
	LD		A,(MENU_RETURN_VALUE)
	CP		$FF	
	JR		Z,_MENU_LUPE
	
_DEAL_WITH_RETURN
	CP		$FE			;DID THEY CANCEL OUT?
	RET		Z
	
	CP		$05			;DID THEY PAGE RIGHT?
	JR		C,_LOAD_CMD
	
	LD		A,(BTL_RING_PTR)
	INC		A
	CP		10
	JP		NZ,_PRINT_NAMES
	XOR		A
	JP		_PRINT_NAMES	
	
_LOAD_CMD
	;fill in the command's info for use/validity check
	;----------------------------------------------
	LD		A,(MENU_RETURN_VALUE)
	LD		(MENU_NAME_INDEX),A
	LD		B,A
	LD		A,(BTL_RING_PTR)
	CP		9
	JR		NZ,_LOW_HAND
	LD		A,B
	ADD		A,5
	LD		(MENU_NAME_INDEX),A
	
_LOW_HAND
	;FOR UPDATING EXP VARS
	;---------------------------------
	LD		A,(MENU_NAME_INDEX)
	LD		(BTL_RING_USING),A

	MENU_RING_TO_ID		MENU_NAME_INDEX
	
	BATTERY_SET_BANK	RAMB_CREATURES
	BATTERY_ON
	
	LD		A,BTL_TARGET_ALLYEMPTY
	LD		(BTL_CREATURE_TARGET),A
	
	SET16	H,L,BTL_CREATURE_SUMMON
	
	LD		BC,XRAM_CREATURE_ENGMAXL
	ADD		HL,BC
	
	LD		A,(HL)
	LD		(BTL_CREATURE_COST),A
	
	CALL	?BTL_CHECK_TARGET
	LD		A,(BTL_CMD_VALID)	
	
	AND		A
	JP		Z,_MENU	
	
_VALID

	RET

;*******************************
?BTL_MENU_SPELL		

	SWITCH_RAM_BANK		WRAM_BATTLE	
	
	;Simulate main menu entry into item menu
	;And setup vars for the dyn packer
	;-----------------------------------	
	LD		BC,XRAM_INVENTORY_SPELLS
	FSET16	B,C,MENU_DYN_XRAM_BASE
	LD		BC,SPELL_TABLE
	FSET16	B,C,MENU_DYN_TABLE_BASE
	LD		A,ITEM_SIZE
	LD		(MENU_INV_SIZE),A
	XOR		A
	
	JP		?BTL_MENU_ITEM_LOAD_ARRAY
	
;********************************
?BTL_MSG_NORM_PARAMS	
;btl_creature_name,btl_target_name,damage

	LD		A,(BTL_CREATURE_ID)
	LD		(BTL_NAME_INDEX),A
	LD		BC,TEXT_PARAM_BUFFER
	FSET16	B,C,BTL_TABLE_COPY_TO
	CALL_FOREIGN	?BTL_COPY_CREATURE_NAME
	
	LD		A,?FORMAT
	LD		(TEXT_PARAM_BUFFER+10),A
	
	LD		A,(BTL_TARGET_ID)
	LD		(BTL_NAME_INDEX),A
	LD		BC,TEXT_PARAM_BUFFER+11
	FSET16	B,C,BTL_TABLE_COPY_TO
	CALL_FOREIGN	?BTL_COPY_CREATURE_NAME
	
	LD		A,?FORMAT
	LD		(TEXT_PARAM_BUFFER+21),A

	LD		HL,TEXT_PARAM_BUFFER+22
	LD		A,(BTL_OVERRIDE_FLAG)
	AND		A
	JR		Z,_NORM
	LD		A,(BTL_OVERRIDE_DAMAGE)
	JR		_GOT_VALUE
	
_NORM
	LD		A,(BTL_PENDING_DAMAGE)
	
_GOT_VALUE
	LD		E,A
	LD		D,0
	
	CALL	?CONVERT_NUMBER_2_ELEMENT
	LD		A,(X100)
	AND		A
	JR		Z,_SKIP_100
	ADD		A,?0
	LD		(HLI),A
	
_SKIP_100
	LD		A,(X10)
	AND		A
	JR		Z,_SKIP_10
	ADD		A,?0
	LD		(HLI),A
	
_SKIP_10
	LD		A,(X1)
	ADD		A,?0
	LD		(HLI),A
	
	LD		A,?FORMAT
	LD		(HLI),A	

	RET
	
;********************************
?BTL_MSG_SPELL_PARAMS

	LD		A,(BTL_CREATURE_ID)
	LD		(BTL_NAME_INDEX),A
	LD		BC,TEXT_PARAM_BUFFER
	FSET16	B,C,BTL_TABLE_COPY_TO
	CALL_FOREIGN	?BTL_COPY_CREATURE_NAME
	
	LD		A,?FORMAT
	LD		(TEXT_PARAM_BUFFER+10),A
	
	LD		BC,TEXT_PARAM_BUFFER+11
	LD		HL,BTL_TABLE_COPY_BUFFER+ITEM_NAME_OFFSET
	LD		D,ITEM_NAME_SIZE
	
_NAME_LOOP
	LD_BCI_HLI
	DEC		D
	JR		NZ,_NAME_LOOP
	
	LD		A,?FORMAT
	LD		(BC),A


	RET	
	
;********************************
?BTL_MSG_STAT_PARAMS

	LD		HL,TEXT_PARAM_BUFFER
	LD		A,?FORMAT
	LD		(HLI),A
	SET16	H,L,BTL_TABLE_COPY_TO
	LD		A,(BTL_CREATURE_PARAM)
	LD		(BTL_NAME_INDEX),A
	CALL_FOREIGN	?BTL_COPY_CREATURE_NAME
	
	LD		A,?FORMAT
	LD		(TEXT_PARAM_BUFFER+11),A
	
	LD		A,(BTL_AMT_PARAM)
	
_GOT_VALUE
	LD		E,A
	LD		D,0
	
	CALL	?CONVERT_NUMBER_2_ELEMENT
	LD		HL,TEXT_PARAM_BUFFER+12
	LD		A,(X100)
	AND		A
	JR		Z,_SKIP_100
	ADD		A,?0
	LD		(HLI),A
	
_SKIP_100
	LD		A,(X10)
	AND		A
	JR		Z,_SKIP_10
	ADD		A,?0
	LD		(HLI),A
	
_SKIP_10
	LD		A,(X1)
	ADD		A,?0
	LD		(HLI),A
	
	LD		A,?FORMAT
	LD		(HLI),A	

	RET
	
;********************************
?BTL_MSG_TARGET_PARAMS	
;btl_creature_name,btl_target_name,damage

	LD		A,(BTL_CREATURE_ID)
	LD		(BTL_NAME_INDEX),A
	LD		BC,TEXT_PARAM_BUFFER
	FSET16	B,C,BTL_TABLE_COPY_TO
	CALL_FOREIGN	?BTL_COPY_CREATURE_NAME
	
	LD		A,?FORMAT
	LD		(TEXT_PARAM_BUFFER+10),A
	
	LD		HL,BTL_CREATURE_NAME
	LD		BC,TEXT_PARAM_BUFFER+11
	LD		D,7
	
_ATTACK_NAME_LOOP
	LD_BCI_HLI
	DEC		D
	JR		NZ,_ATTACK_NAME_LOOP
	
	;CLEAR ANY TRIANGLE THING
	LD		A,(TEXT_PARAM_BUFFER+17)
	CP		?HTRI
	JR		NZ,_NO_TRIANGLE
	LD		A,?SPCE
	LD		(TEXT_PARAM_BUFFER+17),A
	
_NO_TRIANGLE	
	LD		A,?FORMAT
	LD		(TEXT_PARAM_BUFFER+18),A
	
	LD		A,(BTL_TARGET_ID)
	LD		(BTL_NAME_INDEX),A
	LD		BC,TEXT_PARAM_BUFFER+19
	FSET16	B,C,BTL_TABLE_COPY_TO
	CALL_FOREIGN	?BTL_COPY_CREATURE_NAME
	
	LD		A,?FORMAT
	LD		(TEXT_PARAM_BUFFER+29),A

	RET
	
;********************************
?BTL_OPEN_CMD

	;COPY THE COMMAND TO THE OPEN CREATURE
	;-------------------------------------
	SWITCH_RAM_BANK		WRAM_BATTLE
	
	XOR		A
	LD		(BTL_DEFEND_TOGGLE),A
	
	LD		A,(MENU_RETURN_VALUE)
	CP		0
	JR		NZ,_NOT0
	
_0
	LD		A,(BTL_ACTIVE_TURN)
	RES		7,A
	CP		BTL_ID_HERO
	JR		Z,_MAGI
	
	CP		BTL_ID_MAGI
	JR		Z,_MAGI
	
_CREATURE
	LD		HL,ATK_STANDARD
	LD		A,(BTL_CREATURE_OTHER)
	LD		(BTL_DEFEND_TOGGLE),A
	JR		_GOT_PTR
	
_MAGI
	LD		HL,CMD_FOCUS
	JR		_GOT_PTR	
	
_NOT0
	CP		5
	JR		Z,_0
	DEC		A
	LD		C,A
	LD		B,0
	LD		HL,BTL_CREATURE_CMD0
	ADD		HL,BC
	ADD		HL,BC
	
	LD		A,(HLI)
	LD		H,(HL)
	LD		L,A
	
_GOT_PTR
	SET16	H,L,BTL_TABLE_COPY_FROM
	LD		BC,BTL_CREATURE_FUNC_PTR
	FSET16	B,C,BTL_TABLE_COPY_TO
	
	CALL_FOREIGN	?BTL_CMD_COPY_CMD
	LD		A,(BTL_DEFEND_TOGGLE)
	AND		A
	JR		Z,_RELIC_START
	
	LD		A,BTL_TARGET_NONE
	LD		(BTL_CREATURE_TARGET),A
	
	;Do the relics
_RELIC_START
	LD		A,(BTL_CREATURE_RELIC0)
	AND		A
	JR		Z,_2ND_RELIC
	
	;Copy the relic to memory
	;--------------------
	LD		A,(BTL_CREATURE_RELIC0)
	LD		(INV_OBJ_INDEX),A
	LD		BC,BTL_TABLE_COPY_BUFFER
	FSET16	B,C,INV_ADDR
	CALL_FOREIGN	?INV_COPY_RELIC_INDEX
	
	;Call the CMD func
	;-------------------------
	LD		HL,BTL_TABLE_COPY_BUFFER+RELIC_CMD_OFFSET
	DEREF_HL
	LD		E,RELIC_FUNC_BANK
	CALL	?CALL_FOREIGN		
	
_2ND_RELIC
	LD		A,(BTL_CREATURE_RELIC1)
	AND		A
	RET		Z
	
	;Copy the relic to memory
	;--------------------
	LD		A,(BTL_CREATURE_RELIC1)
	LD		(INV_OBJ_INDEX),A
	LD		BC,BTL_TABLE_COPY_BUFFER
	FSET16	B,C,INV_ADDR
	CALL_FOREIGN	?INV_COPY_RELIC_INDEX
	
	;Call the CMD func
	;-------------------------
	LD		HL,BTL_TABLE_COPY_BUFFER+RELIC_CMD_OFFSET
	DEREF_HL
	LD		E,RELIC_FUNC_BANK
	CALL	?CALL_FOREIGN
	
	RET
	
;********************************
?BTL_RAND_DEAD_CREATURE

	;Find how many creature types died this battle
	;---------------------------------
	LD		HL,BTL_DEAD_CREATURE_TYPES
	LD		D,8
	LD		A,$FF
	
_DEAD_COUNT_LOOP
	CP		(HL)
	JR		Z,_DONE_COUNT
	DEC		D
	JR		Z,_DONE_COUNT	
	INC		HL
	JR		_DEAD_COUNT_LOOP
	
_DONE_COUNT
	LD		A,8
	SUB		D
	JR		Z,_NONE
	LD		B,A
	RANDVAL	E
	LD		C,A
	CALL	?DIV
	LD		C,L
	LD		B,0
	LD		HL,BTL_DEAD_CREATURE_TYPES
	ADD		HL,BC
	LD		A,(HL)

	RET	
	
_NONE
	LD		A,$FF
	RET
	
;********************************
?BTL_SELECT_MENU

	
	LD		A,(BTL_CREATURE_MENU)
	ADD		A,A
	LD		HL,BTL_MENU_FUNC_TABLE
	LD		C,A
	LD		B,0
	ADD		HL,BC
	ECALL_HL	

	RET
	
;********************************
?BTL_SET_ACTOR_EFFECT

	SWITCH_RAM_BANK		WRAM_BATTLE	

	LD		A,(BTL_ACTOR_EFFECT_TYPE)
	AND		A
	RET		Z
	
	CP		BTL_SUMMON_SPARKLE
	JR		NZ,_CHECK_NEXT		
	
	BTL_ACTOR_SET_SCRIPT	(BTL_ACTOR_AFFECTING),?_DREAMGLOW_BEGIN_ANIM
	RET	
	
_CHECK_NEXT
	

	RET
	
;********************************
?BTL_SET_MAGI_ANIM

	LD		A,(BTL_ACTOR_ID)
	CP		MAGI_RND1
	RET		NC
	SUB		TONY
	ADD		A,A
	LD		C,A
	LD		B,0
	LD		HL,BATTLE_MAGI_ANIM_TABLE
	ADD		HL,BC
	DEREF_HL
	
	PUSH	HL
	LD		A,(BTL_ACTOR_EFFECT_TYPE)
	LD		B,A
	LD		C,3
	CALL	?MULT
	POP		BC
	ADD		HL,BC
	
	LD		D,(HL)
	INC		HL
	LD		A,(HLI)
	LD		B,(HL)
	LD		C,A
	LD		A,(BTL_ACTOR_AFFECTING)
	CALL	?BTL_ACTOR_SET_SCRIPT

	RET	
	
;********************************
?BTL_SET_STATUS_ANIM

	LD		A,(BTL_ACTOR_EFFECT_TYPE)
	LD		B,A
	LD		C,3
	CALL	?MULT
	LD		BC,BTL_STATUS_SCRIPT_TABLE
	ADD		HL,BC
	
	LD		D,(HL)
	INC		HL
	LD		A,(HLI)
	LD		B,(HL)
	LD		C,A
	LD		A,(BTL_ACTOR_AFFECTING)
	CALL	?BTL_ACTOR_SET_SCRIPT	

	RET
	
;********************************
?BTL_TARGET_ALL

	SWITCH_RAM_BANK		WRAM_BATTLE
	
	LD		BC,BTL_CREATURE_SLOTS
	LD		HL,BTL_MENU_VALID_SLOTS
	
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLALLY_MAGI
	JR		Z,_MAGI
	
	CP		BTL_TARGET_ALLALLY_MAGI_ME
	JR		Z,_MAGI
	
	CP		BTL_TARGET_ALL_MAGI
	JR		Z,_MAGI
	
	CP		BTL_TARGET_ALL_MAGI_ME
	JR		Z,_MAGI
	
	XOR		A
	JR		_BEGIN_TRANSFER
	
_MAGI
	LD		A,1
	
_BEGIN_TRANSFER
	LD		(HLI),A
	INC		BC
	
	LD		D,$FF
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLENEMY
	JR		Z,_NO_ALLY
	
	CP		BTL_TARGET_ALLENEMY_MAGI
	JR		Z,_NO_ALLY
	
	JR		_ALLY_TRANSFER
	
_NO_ALLY
	LD		D,$00
	
_ALLY_TRANSFER
	LD		A,(BC)
	AND		D
	LD		(HLI),A
	INC		BC
	
	LD		A,(BC)
	AND		D
	LD		(HLI),A
	INC		BC
	
	LD		A,(BC)
	AND		D
	LD		(HLI),A
	INC		BC
	
	LD		A,(BC)
	AND		D
	LD		(HLI),A
	INC		BC
	
_END_ALLY	
	LD		D,$FF
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLALLY
	JR		Z,_NO_ENEMY
	
	CP		BTL_TARGET_ALLALLY_ME
	JR		Z,_NO_ENEMY
	
	CP		BTL_TARGET_ALLALLY_MAGI
	JR		Z,_NO_ENEMY
	
	CP		BTL_TARGET_ALLALLY_MAGI_ME
	JR		Z,_NO_ENEMY
	
	JR		_ENEMY_TRANSFER
	
_NO_ENEMY	
	LD		D,$00
	
_ENEMY_TRANSFER
	LD		A,(BC)
	AND		D
	LD		(HLI),A
	INC		BC
	
	LD		A,(BC)
	AND		D
	LD		(HLI),A
	INC		BC
	
	LD		A,(BC)
	AND		D
	LD		(HLI),A
	INC		BC
	
	LD		A,(BC)
	AND		D
	LD		(HLI),A
	
_END_ENEMY
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLENEMY_MAGI
	JR		Z,_MAGI2
	
	CP		BTL_TARGET_ALL_MAGI
	JR		Z,_MAGI2
	
	CP		BTL_TARGET_ALL_MAGI_ME
	JR		Z,_MAGI2
	
	XOR		A
	JR		_END_TRANSFER
	
_MAGI2
	LD		A,1
	
_END_TRANSFER
	LD		(HL),A
	
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLALLY
	JR		Z,_NO_ME
	
	CP		BTL_TARGET_ALLALLY_MAGI
	JR		Z,_NO_ME
	
	CP		BTL_TARGET_ALL
	JR		Z,_NO_ME
	
	CP		BTL_TARGET_ALL_MAGI
	JR		Z,_NO_ME
	
	JR		_DONE	
	
_NO_ME
	LD		HL,BTL_MENU_VALID_SLOTS		;CLEAR OUT THE CURRENT CREATURE'S
	LD		A,(BTL_ACTIVE_TURN)		;SLOT IF _ME NOT INCLUDED
	LD		C,A
	LD		B,0
	ADD		HL,BC
	LD		(HL),B		
	
_DONE
	LD		D,0
		
	RET
		
;********************************
?BTL_TARGET_ALLYMAGI
	SWITCH_RAM_BANK		WRAM_BATTLE
	
	LD		HL,BTL_MENU_VALID_SLOTS
	
	LD		A,1
	LD		(HLI),A
	
	XOR		A
	LD		B,10
	
_LOOP
	LD		(HLI),A
	DEC		B
	JR		NZ,_LOOP
	
	LD		D,3
	
	RET
	
;********************************
?BTL_TARGET_ANY

	SWITCH_RAM_BANK		WRAM_BATTLE
	
	LD		BC,BTL_CREATURE_SLOTS
	LD		HL,BTL_MENU_VALID_SLOTS
	
	;CHECK FOR ALLY MAGI
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ANYCREATURE
	JR		Z,_NO_MAGI1
	
	LD		A,1
	JR		_MAIN_TRANSFER
	
_NO_MAGI1
	XOR		A

_MAIN_TRANSFER
	LD		(HLI),A
	INC		BC				;SLOT 0
	
	LD		D,8	

_MAIN_TRANS_LOOP
	LD_HLI_BCI				;SLOT 1-8
	DEC		D
	JR		NZ,_MAIN_TRANS_LOOP
	
	;LD		A,(BTL_MAGI_VISIBLE)
	;CP		BTL_INVISBLE_MAGI
	LD		A,(BTL_CREATURE_SLOTS+BTL_ID_MAGI)
	CP		0
	JR		Z,_NO_MAGI2
	
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ANY_EVASION
	JR		Z,_GET_MAGI2
	
	LD		HL,BTL_CREATURE_SLOTS+BTL_ID_ENEMY0
	LD		D,4
	XOR		A
	
_BLOCKER_LOOP
	LD		A,(HLI)
	AND		A
	JR		NZ,_NO_MAGI2
	DEC		D
	JR		NZ,_BLOCKER_LOOP	
	
_GET_MAGI2
	LD		A,1
	LD		(BTL_MENU_VALID_SLOTS+BTL_ID_MAGI),A
	
	JR		_DONE	
	
_NO_MAGI2
	XOR		A
	LD		(BTL_MENU_VALID_SLOTS+BTL_ID_MAGI),A
	
_DONE	
	LD		D,5				;START ON SLOT 5 USUALY.

	RET
	
;********************************
?BTL_TARGET_CRASH		

	JR		?BTL_TARGET_CRASH

;********************************	
?BTL_TARGET_CURSOR_CONTROL

	SWITCH_RAM_BANK		WRAM_BATTLE

	LD		A,(BTL_TARGET_MODE)
	SUB		BTL_TARGET_ME			;FIRST TARGET EQUATE
	ADD		A,A						;GET PROPER OFFSET
	LD		C,A
	LD		B,0
	LD		HL,BTL_TARGET_FUNC_TABLE
	ADD		HL,BC
	
	;this sets up the valid slot array and should set
	;its default begining pos in D
	;---------------------------------------------
	ECALL_HL						;CALL THE TARGET FUNC		

	LD		A,2
	CP		D
	JR		Z,_NO_FRIEND
	LD		D,5
	LD		A,(BTL_CREATURE_RATING)
	RES		7,A
	CP		BTL_CMD_RATING_HEAL0
	JR		C,_NO_FRIEND
	LD		D,1
	
	
_NO_FRIEND
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLENEMY
	JR		C,_NO_MULTI
	LD		A,0
	JR		_MENU

_NO_MULTI	
	LD		A,1

_MENU
;	MENU_INIT	BATTLE_TARGET_MENU_SEL,243,BTL_MENU_VALID_SLOTS,?MENU_FLASH,?MENU_FLASH,D,A,MENU_CURSOR_SPRITE
	MENU_INIT	BATTLE_TARGET_MENU_SEL,243,BTL_MENU_VALID_SLOTS,?MENU_FLASH,?MENU_FLASH,D,MENU_CURSOR_NOBLINK,MENU_CURSOR_ACTOR
	
_MENU_LUPE
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLENEMY
	JR		C,_NO_MULTI2
	LD		HL,CNTDOWN
	SET		BitRight,(HL)
	
_NO_MULTI2
	MENU_GO
	CALL	?SYSTEM_UPDATE_GAME
	LD		A,(MENU_RETURN_VALUE)
	CP		$FF	
	JR		Z,_MENU_LUPE	
			
	BTL_ACTOR_HIDE_PTR			
	       
	RET
	
;********************************
?BTL_TARGET_EMPTY

	LD		BC,BTL_CREATURE_SLOTS
	LD		HL,BTL_MENU_VALID_SLOTS
	
	;NEVER ALLOW MAGI
	XOR		A
	LD		(HLI),A
	INC		BC
	
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLYEMPTY
	JR		Z,_ALLY
	
_ENEMY	
	XOR		A
	LD		D,4	

_LOOP1
	LD		(HLI),A
	INC		BC			;SLOT 1-4
	DEC		D
	JR		NZ,_LOOP1
	
	LD		D,4
	
_LOOP2
	LD		A,(BC)
	XOR		%00000001
	LD		(HLI),A
	INC		BC			;SLOT 5-8
	DEC		D
	JR		NZ,_LOOP2
	
	LD		D,5			;START PTR ON 4
	XOR		A
	JR		_DONE	
	
_ALLY
	LD		D,4

_LOOP3
	LD		A,(BC)
	XOR		%00000001
	LD		(HLI),A
	INC		BC			;SLOT 1-4
	DEC		D
	JR		NZ,_LOOP3
	
	XOR		A
	LD		D,4
	
_LOOP4
	LD		(HLI),A
	INC		BC			;SLOT 5-8
	DEC		D
	JR		NZ,_LOOP4	
	
	LD		D,2			;START PTR ON 4

_DONE

	LD		(HL),A		;OTHER MAGI
	PUSH	DE
	
	;Clear out creatures in progress of being summoned
	;-------------------------------
	LD		DE,08
	LD		BC,BTL_BEING_SUMMONED+8
	
_INCOMING_LOOP
	LD		HL,BTL_MENU_VALID_SLOTS
	ADD		HL,DE
	LD		A,(BC)
	AND		A
	JR		Z,_NO_CLEAR
	XOR		A
	LD		A,(HL)	
_NO_CLEAR
	DEC		BC
	DEC		E
	JR		NZ,_INCOMING_LOOP	
	
	POP		DE

	RET
	
;********************************
?BTL_TARGET_ENEMYMAGI

	SWITCH_RAM_BANK		WRAM_BATTLE
	
	LD		HL,BTL_MENU_VALID_SLOTS
	
	XOR		A
	LD		B,9
	
_LOOP	
	LD		(HLI),A
	DEC		B
	JR		NZ,_LOOP
	
	LD		A,1
	LD		(HLI),A
	
	LD		D,3
	
	RET
	
;********************************
?BTL_TEXT_LOOP

_TXT_LOOP
	CALL	?SYSTEM_UPDATE_GAME
	LD		A,(TEXT_SCRIPT_FRAME+1)
	AND		A
	JR		NZ,_TXT_LOOP

	RET
	
;********************************
?BTL_TARGET_ME
	
	SWITCH_RAM_BANK		WRAM_BATTLE
	
	LD		HL,BTL_MENU_VALID_SLOTS
	
	XOR		A
	LD		B,10
	
_LOOP
	LD		(HLI),A
	DEC		B
	JR		NZ,_LOOP
	
	LD		A,(BTL_ACTIVE_TURN)
	LD		C,A
	LD		B,0
	LD		HL,BTL_MENU_VALID_SLOTS
	ADD		HL,BC
	
	LD		A,1
	LD		(HL),A
	
	LD		D,8
	
	RET	
;********************************
?BTL_UPDATE_NEW_SUMMON

	LD		HL,BTL_BEING_SUMMONED+BTL_ID_ALLY0
	LD		A,8
	LD		(BTL_COUNTER),A
	
_INCOMING_LUPE
	LD		A,(HL)
	AND		A
	JP		Z,_NOT_INCOMING
	DEC		A
	LD		(HL),A
	AND		A
	JP		NZ,_NOT_INCOMING
	
	;(1) STOP THE SPARKLEY ACTOR
	;----------------------------
	PUSH	HL
	LD		A,(BTL_COUNTER)
	LD		B,A
	LD		A,BTL_ID_MAGI
	SUB		B
	PUSH	AF
	CALL	?BTL_ACTOR_END
	
	;(1.5)Stop the summoning magi actor
	;----------------------------
	BTL_SET_MAGI_ANIM	(BTL_ENEMY_ID),STAND_ANIM,BTL_ID_MAGI_ACTOR

	
	;(2) SHOW THE CARD
	;----------------------------
	POP		AF
	PUSH	AF
	LD		B,A
	LD		C,CREATURE_BTL_SIZE
	CALL	?MULT
	LD		BC,BTL_HERO+CREATURE_ID
	ADD		HL,BC
	LD		D,(HL)
	LD		A,D
	LD		(BTL_TARGET_ID),A
	POP		BC
	PUSH	BC	
	DEC		B
	
	BTL_LOAD_CARD_VRAM	D,B	
	
	;(3) LOAD BTL_NEW_SUMMONS
	;----------------------------
	POP		AF
	LD		(BTL_CREATURE_TARGET),A
	CALL	?BTL_ADD_NEW_SUMMON	
	
	;(3.5) INC ENEMY TOTAL CREATURE COUNTER
	;------------------------------------
	LD		HL,BTL_EXP_ENEMY_SUMMONED
	INC		(HL)
	
	;(4) PLAY "APPEARS" MSG
	;--------------------
	CALL_FOREIGN	?BTL_MSG_NORM_PARAMS
	TEXT_SET_PARAMS	TEXT_PARAM_BUFFER
	LD		A,(BTL_CREATURE_SLOTS+BTL_ID_MAGI)
	AND		A
	JR		Z,_RND_SUMMON
	
	SCRIPT_SET		TEXT_SCRIPT,?_BTL_SUMMON_MAGI_MSG
	JR		_TXT_LOOP
	
_RND_SUMMON
	SCRIPT_SET		TEXT_SCRIPT,?_BTL_SUMMON_RND_MSG
	
_TXT_LOOP
	CALL_FOREIGN	?BTL_TEXT_LOOP
	
	POP		HL
	
_NOT_INCOMING
	INC		HL
	LD		A,(BTL_COUNTER)
	DEC		A
	LD		(BTL_COUNTER),A
	JP		NZ,_INCOMING_LUPE


	;Now see who was totaly summoned this turn
	;----------------------------------

	LD		A,(BTL_NEW_SUMMONS)	
	LD		B,8
	LD		C,1
	LD		HL,BTL_CREATURE_SLOTS+1	;START OF CREATURES
	
_LUPE
	BIT		0,A
	JR		Z,_NONE
	LD		(HL),C	
	
_NONE
	SRL		A
	JR		Z,_CHECK_DEAD	;IF THERE ARE NO NEW ONES LEFT
	DEC		B
	JR		Z,_CHECK_DEAD	;SHOULDN'T BE NEEDED BUT JUST IN CASE
	INC		HL
	JR		_LUPE	
	
_CHECK_DEAD
	LD		HL,BTL_RECENT_DEAD_ARRAY
	LD		BC,BTL_CREATURE_SLOTS
	LD		D,10
	
_CD_LUPE
	LD		A,(HLI)
	AND		A
	JR		Z,_NO_DEAD
	XOR		A
	LD		(BC),A
_NO_DEAD
	DEC		D
	RET		Z
	INC		BC
	JR		_CD_LUPE	
	
;********************************
?BTL_VALID_TARGET_ALLALLY

	LD		A,(BTL_ACTIVE_TURN)
	LD		C,A
	LD		B,0
	RES		7,C
	LD		HL,BTL_CREATURE_SLOTS
	ADD		HL,BC
	XOR		A
	LD		(HL),A
	
	LD		A,(BTL_ACTIVE_TURN)
	BIT		7,A
	JR		Z,_ALLY_TEAM
	
_ENEMY_TEAM
	LD		HL,BTL_CREATURE_SLOTS+5
	JR		_CREATURE_CHECK
	
_ALLY_TEAM
	LD		HL,BTL_CREATURE_SLOTS+1
	
_CREATURE_CHECK
	LD		B,4
	
_CHECK_LOOP
	LD		A,(HLI)
	AND		A
	JR		NZ,_VALID
	DEC		B
	JR		NZ,_CHECK_LOOP
	
_CHECK_MAGI
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLENEMY_MAGI
	JR		NZ,_INVALID
	
	LD		A,(BTL_ACTIVE_TURN)
	BIT		7,A
	JR		Z,_ALLY_TEAM2
	
_ENEMY_TEAM2
	LD		A,(BTL_CREATURE_SLOTS+BTL_ID_MAGI)
	CP		0
	JR		Z,_INVALID
	JR		_VALID
	
_ALLY_TEAM2	
	
	JR		_VALID
	
_INVALID
	XOR		A
	LD		(BTL_CMD_VALID),A
	
	LD		A,(BTL_ACTIVE_TURN)
	LD		C,A
	LD		B,0
	RES		7,C
	LD		HL,BTL_CREATURE_SLOTS
	ADD		HL,BC
	LD		A,1
	LD		(HL),A
	
	RET
	
_VALID
	LD		A,1
	LD		(BTL_CMD_VALID),A 
	
	LD		A,(BTL_ACTIVE_TURN)
	LD		C,A
	LD		B,0
	RES		7,C
	LD		HL,BTL_CREATURE_SLOTS
	ADD		HL,BC
	LD		A,1
	LD		(HL),A
	
	RET	
	
;********************************
?BTL_VALID_TARGET_ALLENEMY

	LD		A,(BTL_ACTIVE_TURN)
	BIT		7,A
	JR		Z,_ALLY_TEAM
	
_ENEMY_TEAM
	LD		HL,BTL_CREATURE_SLOTS+1
	JR		_CREATURE_CHECK
	
_ALLY_TEAM
	LD		HL,BTL_CREATURE_SLOTS+5
	
_CREATURE_CHECK
	LD		B,4
	
_CHECK_LOOP
	LD		A,(HLI)
	CP		0
	JR		NZ,_VALID
	DEC		B
	JR		NZ,_CHECK_LOOP
	
_CHECK_MAGI
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLENEMY_MAGI
	JR		NZ,_INVALID
	
	LD		A,(BTL_ACTIVE_TURN)
	BIT		7,A
	JR		Z,_ALLY_TEAM2
	
_ENEMY_TEAM2
	JR		_VALID
	
_ALLY_TEAM2	
	LD		A,(BTL_CREATURE_SLOTS+BTL_ID_MAGI)
	CP		0
	JR		Z,_INVALID
	JR		_VALID
	
_INVALID
	XOR		A
	LD		(BTL_CMD_VALID),A
	
	RET
	
_VALID
	LD		A,1
	LD		(BTL_CMD_VALID),A 
	
	RET	
	
;********************************
?BTL_VALID_TARGET_ALLYMAGI
	
	LD		A,(BTL_ACTIVE_TURN)
	BIT		7,A
	JR		Z,_VALID
	
_ENEMY_TEAM
	LD		A,(BTL_CREATURE_SLOTS+BTL_ID_MAGI)
	CP		0
	JR		NZ,_VALID
	
	XOR		A
	LD		(BTL_CMD_VALID),A
	
	RET	

_VALID
	LD		A,1
	LD		(BTL_CMD_VALID),A 	


	RET

;********************************	
?BTL_VALID_TARGET_ANYCREAUTRE

	LD		HL,BTL_CREATURE_SLOTS+BTL_ID_ALLY0
	LD		D,8
	
_LOOP
	LD		A,(HLI)
	AND		A
	JR		NZ,_VALID
	DEC		D
	JR		NZ,_LOOP
	
	XOR		A
	LD		(BTL_CMD_VALID),A
	
	RET	

_VALID
	LD		A,1
	LD		(BTL_CMD_VALID),A 	

	RET
;********************************
?BTL_VALID_TARGET_DONTCARE

	LD		A,1
	LD		(BTL_CMD_VALID),A
	
	RET
	
;********************************
?BTL_VALID_TARGET_EMPTY

	LD		A,(BTL_ACTIVE_TURN)
	BIT		7,A
	JR		Z,_ALLY_TEAM
	
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLYEMPTY
	JR		NZ,_TONY_TEAM
	JR		_ENEMY_TEAM	
	
_ALLY_TEAM
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ALLYEMPTY
	JR		NZ,_ENEMY_TEAM

_TONY_TEAM
	LD		HL,BTL_CREATURE_SLOTS+1		;START OF TONY'S CREATURE SLOTS
	LD		BC,BTL_BEING_SUMMONED+1
	JR		_COMPARE

_ENEMY_TEAM
	LD		HL,BTL_CREATURE_SLOTS+5		;START OF ENEMY'S CREATURE SLOTS
	LD		BC,BTL_BEING_SUMMONED+5
	
_COMPARE
	LD		D,4
	
_COMPARE_LOOP
	LD		A,(HLI)
	CP		0
	JR		Z,_VALID
_RELOOP
	INC		BC
	DEC		D
	JR		NZ,_COMPARE_LOOP
	
_INVALID
	XOR		A
	LD		(BTL_CMD_VALID),A
	
	RET
	
_VALID
	LD		A,(BC)
	CP		0
	JR		NZ,_RELOOP

	LD		A,1
	LD		(BTL_CMD_VALID),A 
	
	RET	
	
;********************************
?BTL_VALID_TARGET_ENEMYMAGI

	LD		A,(BTL_ACTIVE_TURN)
	BIT		7,A
	JR		Z,_ALLY_TEAM
	
_ENEMYTEAM
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ENEMYMAGI_EVASION
	JR		Z,_VALID

	LD		HL,BTL_CREATURE_SLOTS+1
	LD		B,4
	JR		_COMPARE_LOOP
	
_ALLY_TEAM
	LD		A,(BTL_CREATURE_SLOTS+BTL_ID_MAGI)
	CP		0
	JR		Z,_INVALID
	
	LD		A,(BTL_TARGET_MODE)
	CP		BTL_TARGET_ENEMYMAGI_EVASION
	JR		Z,_VALID

	LD		HL,BTL_CREATURE_SLOTS+5
	LD		B,4
	
_COMPARE_LOOP
	LD		A,(HLI)
	CP		0
	JR		NZ,_INVALID
	DEC		B
	JR		NZ,_COMPARE_LOOP
	JR		_VALID	
	
_INVALID
	XOR		A
	LD		(BTL_CMD_VALID),A
	
	RET
	
_VALID
	LD		A,1
	LD		(BTL_CMD_VALID),A 
	
	RET	
	
;********************************
?BTL_VBLANK_ICON

	SWITCH_RAM_BANK		WRAM_BATTLE
	
	XOR		A
	LD		(VBK),A

	LD		HL,$9C00
	LD		A,(BTL_ICON_START)
	LD		DE,$1C
	
	LD		(HLI),A
	INC		A
	LD		(HLI),A
	INC		A
	LD		(HLI),A
	INC		A
	LD		(HLI),A
	INC		A
	
	ADD		HL,DE
	
	LD		(HLI),A
	INC		A
	LD		(HLI),A
	INC		A
	LD		(HLI),A
	INC		A
	LD		(HLI),A
	INC		A
	
	ADD		HL,DE
	
	LD		(HLI),A
	INC		A
	LD		(HLI),A
	INC		A
	LD		(HLI),A
	INC		A
	LD		(HLI),A
	INC		A
	
	ADD		HL,DE
	
	LD		(HLI),A
	INC		A
	LD		(HLI),A
	INC		A
	LD		(HLI),A
	INC		A
	LD		(HLI),A
	INC		A
	
	ADD		HL,DE
	
	LD		(HLI),A
	INC		A
	LD		(HLI),A
	INC		A
	LD		(HLI),A
	INC		A
	LD		(HLI),A
	
	
	LD		HL,$9C00
	LD		A,1
	LD		(VBK),A
	LD		A,%00000111
	
	
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	
	ADD		HL,DE
	
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	
	ADD		HL,DE
	
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	
	ADD		HL,DE
	
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	
	ADD		HL,DE
	
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	
	XOR			A
	LD			(VBLANK_BANK),A
	MOVADDR		VBLANK_FUNC,?VBLANK_IDLE
	
	RET
	

	
;********************************
	END
;********************************
;*******************************
;OLD VERSION OF LOOP IN ?BTL_APPLY_MULTI
;KEEP UNTIL BATTLE WORKS FOR SURE
;*******************************

_APPLY_ALLY1
	LD		A,1
	LD		(BTL_APPLY_COUNT),A
	CALL	?BTL_APPLY_TARGET_CHECK_ALLY
	LD		A,(BTL_APPLY_FLAG)
	CP		0
	JR		Z,_APPLY_ALLY2
	LD		A,1
	LD		(BTL_CREATURE_TARGET),A
	CALL	?BTL_APPLY_COMMAND		
	
_APPLY_ALLY2
	LD		A,2
	LD		(BTL_APPLY_COUNT),A
	CALL	?BTL_APPLY_TARGET_CHECK_ALLY
	LD		A,(BTL_APPLY_FLAG)
	CP		0
	JR		Z,_APPLY_ALLY3
	LD		A,2
	LD		(BTL_CREATURE_TARGET),A
	CALL	?BTL_APPLY_COMMAND		

_APPLY_ALLY3
	LD		A,3
	LD		(BTL_APPLY_COUNT),A
	CALL	?BTL_APPLY_TARGET_CHECK_ALLY
	LD		A,(BTL_APPLY_FLAG)
	CP		0
	JR		Z,_APPLY_ALLY4
	LD		A,3
	LD		(BTL_CREATURE_TARGET),A
	CALL	?BTL_APPLY_COMMAND		
	
_APPLY_ALLY4
	LD		A,4
	LD		(BTL_APPLY_COUNT),A
	CALL	?BTL_APPLY_TARGET_CHECK_ALLY
	LD		A,(BTL_APPLY_FLAG)
	CP		0
	JR		Z,_APPLY_ENEMY0
	LD		A,4
	LD		(BTL_CREATURE_TARGET),A
	CALL	?BTL_APPLY_COMMAND		
	
_APPLY_ENEMY0
	LD		A,5
	LD		(BTL_APPLY_COUNT),A
	CALL	?BTL_APPLY_TARGET_CHECK_ENEMY
	LD		A,(BTL_APPLY_FLAG)
	CP		0
	JR		Z,_APPLY_ENEMY1
	LD		A,5
	LD		(BTL_CREATURE_TARGET),A
	CALL	?BTL_APPLY_COMMAND		

_APPLY_ENEMY1
	LD		A,6
	LD		(BTL_APPLY_COUNT),A
	CALL	?BTL_APPLY_TARGET_CHECK_ENEMY
	LD		A,(BTL_APPLY_FLAG)
	CP		0
	JR		Z,_APPLY_ENEMY2
	LD		A,6
	LD		(BTL_CREATURE_TARGET),A
	CALL	?BTL_APPLY_COMMAND	
	
_APPLY_ENEMY2
	LD		A,7
	LD		(BTL_APPLY_COUNT),A
	CALL	?BTL_APPLY_TARGET_CHECK_ENEMY
	LD		A,(BTL_APPLY_FLAG)
	CP		0
	JR		Z,_APPLY_ENEMY3
	LD		A,7
	LD		(BTL_CREATURE_TARGET),A
	CALL	?BTL_APPLY_COMMAND		
	
_APPLY_ENEMY3
	LD		A,8
	LD		(BTL_APPLY_COUNT),A
	CALL	?BTL_APPLY_TARGET_CHECK_ENEMY
	LD		A,(BTL_APPLY_FLAG)
	CP		0
	JR		Z,_APPLY_MAGI
	LD		A,8
	LD		(BTL_CREATURE_TARGET),A
	CALL	?BTL_APPLY_COMMAND		

;*******************************
;OLD VERSION OF LOOP IN ?BTL_APPLY_MULTI
;KEEP UNTIL BATTLE WORKS FOR SURE
;*******************************

_APPLY_ALLY1
	LD		A,1
	LD		(BTL_APPLY_COUNT),A
	CALL	?BTL_APPLY_TARGET_CHECK_ALLY
	LD		A,(BTL_APPLY_FLAG)
	CP		0
	JR		Z,_APPLY_ALLY2
	LD		A,1
	LD		(BTL_CREATURE_TARGET),A
	CALL	?BTL_APPLY_COMMAND		
	
_APPLY_ALLY2
	LD		A,2
	LD		(BTL_APPLY_COUNT),A
	CALL	?BTL_APPLY_TARGET_CHECK_ALLY
	LD		A,(BTL_APPLY_FLAG)
	CP		0
	JR		Z,_APPLY_ALLY3
	LD		A,2
	LD		(BTL_CREATURE_TARGET),A
	CALL	?BTL_APPLY_COMMAND		

_APPLY_ALLY3
	LD		A,3
	LD		(BTL_APPLY_COUNT),A
	CALL	?BTL_APPLY_TARGET_CHECK_ALLY
	LD		A,(BTL_APPLY_FLAG)
	CP		0
	JR		Z,_APPLY_ALLY4
	LD		A,3
	LD		(BTL_CREATURE_TARGET),A
	CALL	?BTL_APPLY_COMMAND		
	
_APPLY_ALLY4
	LD		A,4
	LD		(BTL_APPLY_COUNT),A
	CALL	?BTL_APPLY_TARGET_CHECK_ALLY
	LD		A,(BTL_APPLY_FLAG)
	CP		0
	JR		Z,_APPLY_ENEMY0
	LD		A,4
	LD		(BTL_CREATURE_TARGET),A
	CALL	?BTL_APPLY_COMMAND		
	
_APPLY_ENEMY0
	LD		A,5
	LD		(BTL_APPLY_COUNT),A
	CALL	?BTL_APPLY_TARGET_CHECK_ENEMY
	LD		A,(BTL_APPLY_FLAG)
	CP		0
	JR		Z,_APPLY_ENEMY1
	LD		A,5
	LD		(BTL_CREATURE_TARGET),A
	CALL	?BTL_APPLY_COMMAND		

_APPLY_ENEMY1
	LD		A,6
	LD		(BTL_APPLY_COUNT),A
	CALL	?BTL_APPLY_TARGET_CHECK_ENEMY
	LD		A,(BTL_APPLY_FLAG)
	CP		0
	JR		Z,_APPLY_ENEMY2
	LD		A,6
	LD		(BTL_CREATURE_TARGET),A
	CALL	?BTL_APPLY_COMMAND	
	
_APPLY_ENEMY2
	LD		A,7
	LD		(BTL_APPLY_COUNT),A
	CALL	?BTL_APPLY_TARGET_CHECK_ENEMY
	LD		A,(BTL_APPLY_FLAG)
	CP		0
	JR		Z,_APPLY_ENEMY3
	LD		A,7
	LD		(BTL_CREATURE_TARGET),A
	CALL	?BTL_APPLY_COMMAND		
	
_APPLY_ENEMY3
	LD		A,8
	LD		(BTL_APPLY_COUNT),A
	CALL	?BTL_APPLY_TARGET_CHECK_ENEMY
	LD		A,(BTL_APPLY_FLAG)
	CP		0
	JR		Z,_APPLY_MAGI
	LD		A,8
	LD		(BTL_CREATURE_TARGET),A
	CALL	?BTL_APPLY_COMMAND		
