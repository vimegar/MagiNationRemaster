;********************************
; MENU_RINGSMITH.S
;********************************
;	Author:	ExoByte
;	(c)2000	Interactive Imagination
;	All rights reserved

;********************************
;CALL AFTER C_N_2_E
; HL = BG START
; D = VRAM_0
?MENU_DRAW_3DIGIT_VALUE
	
	LD		A,(X100)
	ADD		A,D
	LD		(HLI),A
	LD		A,(X10)
	ADD		A,D
	LD		(HLI),A
	LD		A,(X1)
	ADD		A,D
	LD		(HLI),A

	RET

;********************************
?RINGSMITH_BANK_FULL

	PUSH	BC

	XOR		A
	LD		(RINGSMITH_BANKFULL),A
	
	BATTERY_SET_BANK	RAMB_GAMESTATE
	BATTERY_ON	
	
	LD		A,(XRAM_CREATURECOUNT)
	LD		B,A
	
	BATTERY_OFF
	
	LD		A,B
	CP		XRAM_RINGBANK_SIZE
	JR		C,_NOT_FULL
	
	LD		A,1
	LD		(RINGSMITH_BANKFULL),A
	
_NOT_FULL
	
	POP		BC
	RET		

;********************************
?RINGSMITH_BG_NAME_DUMP

	LD		D,10
	
_LOOP1
	LD		(HLI),A
	INC		A
	DEC		D
	JR		NZ,_LOOP1
	
	LD		BC,23
	ADD		HL,BC
	
	LD		D,10
	
_LOOP2
	LD		(HLI),A
	INC		A
	DEC		D
	JR		NZ,_LOOP2
	
	LD		BC,22
	ADD		HL,BC
	
	LD		D,10
	
_LOOP3
	LD		(HLI),A
	INC		A
	DEC		D
	JR		NZ,_LOOP3

	RET

;********************************
?RINGSMITH_CLOSE

	FRAME_CLEAR_ALL
	SCREEN_HIDE
	
	CALL_FOREIGN		?MAIN_MENU_DE_ARCHIVE_VRAM
	SWITCH_RAM_BANK		WRAM_VRAMBAK1
	
	XOR			A
	LD			(VBK),A
	
	MEM_MOV		$9000,$D000,$800
	
	LD			A,1
	LD			(VBK),A
	
	MEM_MOV		$9000,$D800,$800
	
	TEXTBOX_INIT
	SCREEN_SHOW

	RET
	
;********************************
;HL <- PTR TO AMOUNT
;DE <- BG START
;A  <- 0/1  FOR 8/16 BIT
?RINGSMITH_COPY_COST_VRAM
	
	PUSH	DE
	AND		A
	JR		Z,_8
	
_16
	XOR		A
	LD		(VBK),A
	DEREF_HL
	LD		A,H
	OR		L
	JR		Z,_0
	LD		D,H
	LD		E,L
	JR		_NORMAL
	
_8
	XOR		A
	LD		(VBK),A
	LD		E,(HL)
	CP		E
	LD		D,0
	JR		NZ,_NORMAL

_0
	LD		A,$FA		;NEG DISTANCE FROM 0 TO SPACE
	LD		(X100),A	
	LD		(X10),A
	LD		(X1),A
	JR		_CONT
	
_NORMAL
	CALL	?CONVERT_NUMBER_2_ELEMENT
	
_CONT
	POP		HL
	LD		D,RINGSMITH_VRAM_0
	CALL	?MENU_DRAW_3DIGIT_VALUE
	
	RET
	
;********************************
;HL <- PTR TO CREATURE ID... ALSO ASSUMES
;MENU_VRAM_PTR IS ALREADY SET
?RINGSMITH_COPY_NAME_VRAM

	LD		A,(HL)
	LD		(BTL_NAME_INDEX),A
	LD		BC,BTL_TABLE_COPY_BUFFER
	FSET16	B,C,BTL_TABLE_COPY_TO
	CALL_FOREIGN	?BTL_COPY_CREATURE_NAME
	LD		BC,BTL_TABLE_COPY_BUFFER
	FSET16	B,C,MENU_CUR_CHAR
	LD		A,10					;SIZE
	LD		(MENU_CHAR_LEFT),A
	CALL_FOREIGN	?MAIN_MENU_PACK_VRAM	

	RET

;********************************	
?RINGSMITH_DRAW_BORDER

;FILL W/ BLANKS
;THIS MENU SYSTEM IS SO GOOD, IT SHOULD BE (BLANK)
	XOR		A
	LD		(VBK),A			
	LD		BC,563
	LD		HL,$9C00
	
_TOP_BLANK
	LD		A,TEXT_BOX_BLANK		;BLANK
	LD		(HLI),A
	DEC16_LOOP	B,C,_TOP_BLANK
	
;PLOT BORDER
;CORNERS
	LD		A,TEXT_BOX_BORD2	;CORNER

;UL CORNER
	LD		($9C00),A

;UR CORNER
	LD		($9C13),A

;LL CORNER
	LD		($9D80),A

;LR	CORNER
	LD		($9D93),A
	
;ML	CORNER
	LD		($9E20),A

;MR	CORNER
	LD		($9E33),A
	
;TOP LINE
	MENU_BORDER_HORIZ_LINE	18,$9C01,_TOP
	
;MID LINE
	MENU_BORDER_HORIZ_LINE	18,$9D81,_MID
	
;BOTTOM LINE
	MENU_BORDER_HORIZ_LINE	18,$9E21,_BOTTOM
	
;LOWER LEFT LINE
	MENU_BORDER_VERT_LINE	4,$9DA0,_LL
	
;LOWER RIGHT LINE
	MENU_BORDER_VERT_LINE	4,$9DB3,_LR

;UPPER LEFT LINE
	MENU_BORDER_VERT_LINE	11,$9C20,_UL
	
;UPPER RIGHT LINE
	MENU_BORDER_VERT_LINE	11,$9C33,_UR
	
	LD		A,(RINGSMITH_BORROW_BORDER)
	AND		A
	JR		NZ,_ATTRIBS
	
;ARROWS
	LD		A,RINGSMITH_VRAM_ARROW
	
	LD		($9C29),A	
	LD		($9C2A),A	
	LD		($9D69),A	
	LD		($9D6A),A
	
;CREATURE NAMES
	XOR		A
	LD		(VBK),A	

	LD		A,$94
	LD		HL,$9C43
	CALL	?RINGSMITH_BG_NAME_DUMP		
	
	LD		A,$B2
	LD		HL,$9CA3
	CALL	?RINGSMITH_BG_NAME_DUMP	
	
	LD		A,$D0
	LD		HL,$9D03
	CALL	?RINGSMITH_BG_NAME_DUMP			
	
;UPPER RING ICON
	LD		A,RINGSMITH_VRAM_RING	
	LD		($9C42),A
	
;UPPER ANIMITE ICON
	LD		A,RINGSMITH_VRAM_ANIMITE
	LD		($9C4F),A
	
;LOWER ANIMITE ICON
	LD		($9DAF),A
	
;UPPER INFUSED ICON
	LD		A,RINGSMITH_VRAM_INFUSED
	LD		($9C6F),A
	
;LOWER INFUSED ICON
	LD		($9DCF),A			

;ATTRIBUTE STUFF
_ATTRIBS
	LD		A,$01
	LD		(VBK),A
		
;FILL THE ATTRIBS
	LD		D,$0F		;MY ATTRIBS
	LD		BC,564
	
_TOP_ATTRIB
	LD		HL,$9BFF			;START OF MY BG
	ADD		HL,BC
	LD		(HL),D	
	DEC16_LOOP	B,C,_TOP_ATTRIB	
	
;Bottom line
	;-----------------
	LD		A,%01001111
	LD		D,18
	LD		HL,$9E21
	
_BOT_ATTRIB_LOOP
	LD		(HLI),A
	DEC		D
	JR		NZ,_BOT_ATTRIB_LOOP
	
	;Right line
	;----------------------
	LD		BC,16
		
_RIGHT_ATTRIB_LOOP
	LD		HL,$9C00
	PUSH	BC
	SLA16	B,C,5
	ADD		HL,BC
	LD		A,%00101111
	LD		(HLI),A
	POP		BC
	DEC		C
	JR		NZ,_RIGHT_ATTRIB_LOOP	
	
	;Set attribs for corners and arrows
	;----------------------
	LD		A,%00101111			
	LD		($9C00),A			;UL CORNER
	LD		($9C2A),A			;UR ARROW	
	LD		($9DA0),A			;ML CORNER
	
	LD		A,%01001111			
	LD		($9E33),A			;LR CORNER
	LD		($9D69),A			;LL ARROW
	
	LD		A,%01101111
	LD		($9E20),A			;LL	CORNER
	LD		($9D6A),A			;LR ARROW
	
;WINDOW
	XOR		A
	LD		(TEXTBOX_WY),A		;WIN Y
	LD		A,7
	LD		(TEXTBOX_WX),A		;WIN X

	RET

;********************************	
?RINGSMITH_DRAW_INFO

	;CLEAR OUT NON-CONSTANT STUFF
	;--------------------------
	XOR		A
	LD		(VBK),A
	LD		A,$80
	LD		($9C42),A			;1ST RING
	LD		($9C4F),A			;1ST ANIMITE LOGO
	LD		($9C6F),A			;1ST 1ST INFUSED LOGO
	LD		($9C8F),A			;1ST 2ND INFUSED LOGO
	LD		($9CA2),A			;2ND RING
	LD		($9CAF),A			;2ND ANIMITE LOGO
	LD		($9CCF),A			;2ND 1ST INFUSED LOGO
	LD		($9CEF),A			;2ND 2ND INFUSED LOGO
	LD		($9D02),A			;3RD RING LOGO
	LD		($9D0F),A			;3RD ANIMITE LOGO
	LD		($9D2F),A			;3RD 1ST INFUSED LOGO
	LD		($9D4F),A			;3RD 2ND INFUSED LOGO	
	LD		($9DEF),A			;TONY 2ND INFUSED LOGO	
	LD		($9C29),A			;TL ARROW
	LD		($9C2A),A			;TR ARROW
	LD		($9D69),A			;BL ARROW
	LD		($9D6A),A			;BR ARROW
	
	;DRAW THE ARROWS IF THEY NEED BE.
	;------------------------------
	LD		A,(MENU_MAIN_VALID)
	AND		A
	JR		Z,_CHECK_LOWER_ARROW	
	LD		A,RINGSMITH_VRAM_ARROW
	LD		HL,$9C29
	LD		(HLI),A			;TL ARROW
	LD		(HLI),A			;TR ARROW	
	
_CHECK_LOWER_ARROW
	LD		A,(MENU_MAIN_VALID+4)
	AND 	A
	JR		Z,_NORMAL
	LD		A,RINGSMITH_VRAM_ARROW
	LD		HL,$9D69
	LD		(HLI),A			;BL ARROW
	LD		(HLI),A			;BR ARROW		
	
_NORMAL
	XOR		A
	LD		(MENU_COUNTER),A
	LD		BC,0
	FSET16	B,C,RINGSMITH_INFO_BG_OFF	
	FSET16	B,C,RINGSMITH_INFO_VRAM_OFF
	
_TOP	
	LD		A,(MENU_COUNTER)
	LD		B,A
	LD		C,RINGSMITH_ENTRY_SIZE
	CALL	?MULT
	LD		BC,RINGSMITH_ON_SCREEN
	ADD		HL,BC
	PUSH	HL
	LD		BC,$1E0
	LD		HL,$60
	LD		A,(MENU_COUNTER)
	AND		A
	JR		Z,_FIRST
	CP		1
	JR		Z,_SECOND
	SLA16	B,C,1
	SLA16	H,L,1	
	
_SECOND
	SET16	H,L,RINGSMITH_INFO_BG_OFF
	FSET16	B,C,RINGSMITH_INFO_VRAM_OFF	
	
	;NAME OF MAKING CREATURE
	;---------------
_FIRST
	LD		BC,$8940
	FGET16	H,L,RINGSMITH_INFO_VRAM_OFF
	ADD		HL,BC
	SET16	H,L,MENU_VRAM_PTR
	POP		HL
	PUSH	HL
	CALL	?RINGSMITH_COPY_NAME_VRAM
	LD		A,(BTL_TABLE_COPY_BUFFER)
	CP		?SPCE
	JR		Z,_CONT1
	XOR		A
	LD		(VBK),A
	FGET16	B,C,RINGSMITH_INFO_BG_OFF
	LD		HL,$9C42
	ADD		HL,BC
	LD		A,RINGSMITH_VRAM_RING
	LD		(HL),A
		
_CONT1
	POP		HL
	INC		HL
	PUSH	HL
	
	;NAME OF FIRST NEEDED CREATURE
	;---------------
	LD		BC,$89E0
	FGET16	H,L,RINGSMITH_INFO_VRAM_OFF
	ADD		HL,BC
	SET16	H,L,MENU_VRAM_PTR
	POP		HL
	PUSH	HL
	CALL	?RINGSMITH_COPY_NAME_VRAM

	POP		HL
	INC		HL
	PUSH	HL
	
	;AMOUNT OF FIRST NEEDED CREATURE
	;--------------------
	LD		DE,$9C70
	FGET16	H,L,RINGSMITH_INFO_BG_OFF
	ADD		HL,DE
	LD		D,H
	LD		E,L
	POP		HL
	PUSH	HL
	XOR		A
	CALL	?RINGSMITH_COPY_COST_VRAM
	CP		$80
	JR		Z,_CONT2
	XOR		A
	LD		(VBK),A
	FGET16	B,C,RINGSMITH_INFO_BG_OFF
	LD		HL,$9C6F
	ADD		HL,BC
	LD		A,RINGSMITH_VRAM_INFUSED
	LD		(HL),A	
	
_CONT2
	POP		HL
	INC		HL
	PUSH	HL
	
	;NAME OF SECOND NEEDED CREATURE
	;---------------
	LD		BC,$8A80
	FGET16	H,L,RINGSMITH_INFO_VRAM_OFF
	ADD		HL,BC
	SET16	H,L,MENU_VRAM_PTR
	POP		HL
	PUSH	HL
	CALL	?RINGSMITH_COPY_NAME_VRAM
	
	POP		HL
	INC		HL
	PUSH	HL
	
	;AMOUNT OF SECOND NEEDED CREATURE
	;--------------------
	LD		DE,$9C90
	FGET16	H,L,RINGSMITH_INFO_BG_OFF
	ADD		HL,DE
	LD		D,H
	LD		E,L
	POP		HL
	PUSH	HL
	XOR		A
	CALL	?RINGSMITH_COPY_COST_VRAM
	CP		$80
	JR		Z,_CONT3
	XOR		A
	LD		(VBK),A
	FGET16	B,C,RINGSMITH_INFO_BG_OFF
	LD		HL,$9C8F
	ADD		HL,BC
	LD		A,RINGSMITH_VRAM_INFUSED
	LD		(HL),A	
	
_CONT3		
	;COST IN CASH OF RING
	;---------------------
	LD		DE,$9C50
	FGET16	H,L,RINGSMITH_INFO_BG_OFF
	ADD		HL,DE
	LD		D,H
	LD		E,L
	POP		HL
	INC		HL
	LD		A,1
	CALL	?RINGSMITH_COPY_COST_VRAM
	CP		$80
	JR		Z,_CONT4
	XOR		A
	LD		(VBK),A
	FGET16	B,C,RINGSMITH_INFO_BG_OFF
	LD		HL,$9C4F
	ADD		HL,BC
	LD		A,RINGSMITH_VRAM_ANIMITE
	LD		(HL),A	
	
_CONT4
	LD		HL,MENU_COUNTER
	INC		(HL)
	LD		A,3
	CP		(HL)
	RET		Z
	JP		_TOP
	
;********************************
?RINGSMITH_MAINLOOP

	MENU_GO_CLOBBER
	CALL	?SYSTEM_UPDATE_GAME_NOSCRIPT
	LD		A,(MENU_CURSOR_ID)
	LD		B,A
	LD		A,(RINGSMITH_LAST_POS)
	CP		B
	JR		Z,_NO_MOVE
	CALL	?RINGSMITH_SETUP_VBLANK
	
_NO_MOVE
	LD		A,(MENU_RETURN_VALUE)
	CP		$FF
	JR		Z,?RINGSMITH_MAINLOOP
	
	LD		(RINGSMITH_CURSOR_RETURN),A
	
	AND		A
	JR		NZ,_NOT_UP
	
_UP_DOWN
	SCREEN_HIDE
	CALL	?RINGSMITH_SET_ARRAY
	CALL	?RINGSMITH_DRAW_INFO	
	MENU_INIT	RINGSMITH_CHOICE,243,MENU_MAIN_VALID,?MENU_FLASH,?MENU_FLASH,1,MENU_CURSOR_NOBLINK,MENU_CURSOR_SPRITE
	SCREEN_SHOW
	JP		?RINGSMITH_MAINLOOP
	
_NOT_UP
	CP		4
	JR		Z,_UP_DOWN
	
_NOT_DOWN	
	CP		$FE
	JR		NZ,_SELECTED
	JP		?RINGSMITH_CLOSE 
	
_SELECTED
	CALL	?RINGSMITH_SELECTED
	LD		A,(RINGSMITH_MADERING)
	AND		A
	JP		NZ,?RINGSMITH_CLOSE 

_RESTART
	LD		A,RINGSMITH_BANK
	LD		(VBLANK_BANK),A
	MOVADDR		VBLANK_FUNC,?RINGSMITH_VBLANK_CLEAR_BOTTOM1
	CALL	?SYSTEM_UPDATE_GAME_NOSCRIPT	
	MOVADDR		VBLANK_FUNC,?RINGSMITH_VBLANK_CLEAR_BOTTOM2
	CALL	?SYSTEM_UPDATE_GAME_NOSCRIPT		
	MENU_INIT	RINGSMITH_CHOICE,243,MENU_MAIN_VALID,?MENU_FLASH,?MENU_FLASH,(RINGSMITH_CURSOR_RETURN),MENU_CURSOR_NOBLINK,MENU_CURSOR_SPRITE

	JP		?RINGSMITH_MAINLOOP

;********************************
?RINGSMITH_OPEN

	FRAME_INIT

	SCREEN_HIDE
	
	LD		A,$FF
	LD		(SCRIPT_RINGMADE),A
	
	XOR			A
	LD			(WY),A		;WIN Y
	LD			A,7
	LD			(WX),A		;WIN X	
	
	CALL_FOREIGN	?MAIN_MENU_ARCHIVE_VRAM
	CALL_FOREIGN	?CARDSCENE_ARCHIVE_BG_VRAM

	;Load needed vram stuff
	;(1) Digits
	;----------------------
	LD		BC,MENU_ZERO_STR_9		;DIGIT STRING
	FSET16	B,C,MENU_CUR_CHAR
	LD		BC,$8860				;VRAM DEST
	FSET16	B,C,MENU_VRAM_PTR
	LD		A,10					;SIZE
	LD		(MENU_CHAR_LEFT),A
	CALL_FOREIGN	?MAIN_MENU_PACK_VRAM	

	;(2) Animite logo
	;---------------------
	LD		A,1
	LD		(VBLANK_VBK),A
	LD		BC,BIT_FONT+(?ANIMITE*16)
	FSET16	B,C,VBLANK_SOURCE
	LD		BC,$8900				;VRAM DEST
	FSET16	B,C,VBLANK_DEST
	LD		E,6						;BANK OF FONT
	LD		HL,?VBLANK_COPY_TILE
	CALL	?CALL_FOREIGN
	
	;(3) Infused logo
	;---------------------
	LD		BC,BIT_FONT+(?INFUSED*16)
	FSET16	B,C,VBLANK_SOURCE
	LD		HL,?VBLANK_COPY_TILE
	CALL	?CALL_FOREIGN
	
	;(4) Ring logo
	;---------------------
	LD		BC,BIT_FONT+(?RING*16)
	FSET16	B,C,VBLANK_SOURCE
	LD		HL,?VBLANK_COPY_TILE
	CALL	?CALL_FOREIGN
	
	;(5) Arrow
	;---------------------
	LD		BC,BIT_FONT+(?ARROW*16)
	FSET16	B,C,VBLANK_SOURCE
	LD		HL,?VBLANK_COPY_TILE
	CALL	?CALL_FOREIGN	
		
	;Init Vars
	;------------------------
?RINGSMITH_RESTART_CONTINUE
	SWITCH_RAM_BANK		WRAM_SPARE1
	LD		A,(RINGSMITH_WRAM_BASE)
	DEC		A
	LD		(RINGSMITH_TABLE_SIZE),A
	XOR		A
	LD		(RINGSMITH_LAST_POS),A
	LD		(RINGSMITH_MADERING),A
	LD		(RINGSMITH_BORROW_BORDER),A
	
	;VALID ARRAY, ALL BUT PAGE UP SHOULD BE OK AT BEGINING
	LD		HL,MENU_MAIN_VALID
	LD		(HLI),A
	LD		A,1
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A

	MENU_INIT	RINGSMITH_CHOICE,243,MENU_MAIN_VALID,?MENU_FLASH,?MENU_FLASH,1,MENU_CURSOR_NOBLINK,MENU_CURSOR_SPRITE
	
	;Draw the screen
	CALL	?RINGSMITH_DRAW_BORDER
	CALL	?RINGSMITH_SET_ARRAY
	CALL	?RINGSMITH_DRAW_INFO
	
	;Set Tony's Money
	;-----------------------
	BATTERY_SET_BANK	RAMB_GAMESTATE
	BATTERY_ON
	LD		A,1
	
	LD		HL,XRAM_INVENTORY_ANIMITE
	LD		DE,$9DB0	
	CALL	?RINGSMITH_COPY_COST_VRAM
	
	BATTERY_OFF
	
	SCREEN_SHOW
	
	JP	?RINGSMITH_MAINLOOP	

;********************************			
?RINGSMITH_RESTART

	CALL	?SYSTEM_UPDATE_GAME_NOSCRIPT
	SCREEN_HIDE	
	JP	?RINGSMITH_RESTART_CONTINUE

;********************************		
?RINGSMITH_SELECTED

	;(-1) Clear the text out of the bottom section
	;-----------------------
	LD		A,RINGSMITH_BANK
	LD		(VBLANK_BANK),A
	MOVADDR		VBLANK_FUNC,?RINGSMITH_VBLANK_CLEAR_BOTTOM1
	CALL	?SYSTEM_UPDATE_GAME_NOSCRIPT
	
	;CLEAR 2ND TO SET
	;-------------------
	LD		BC,$FFFF
	FSET16	B,C,RINGSMITH_2ND_TO_SET

	;(0) Get on the entry we want
	;---------------------
	LD		A,(MENU_CURSOR_ID)
	DEC		A
	LD		B,A
	LD		C,RINGSMITH_ENTRY_SIZE
	CALL	?MULT
	LD		BC,RINGSMITH_ON_SCREEN
	ADD		HL,BC

	;(1) Does Tony have enough normal animite?
	;--------------------
	PUSH	HL
	LD		BC,RINGSMITH_COST_OFFSET
	ADD		HL,BC
	DEREF_HL
	LD		B,H
	LD		C,L
	TWOS_COMP B,C
	
	BATTERY_SET_BANK	RAMB_GAMESTATE
	BATTERY_ON
	
	FGET16		H,L,XRAM_INVENTORY_ANIMITE
	
	BATTERY_OFF
	
	ADD		HL,BC
	SET16	H,L,RINGSMITH_COST_TO_SET
	POP		HL				;GET HL BACK EARLY FOR STACK BALANCE
	JP		NC,?_CANT_MAKE
	
	;(2) Does he have enough of creature#1's animite?
	;--------------------	
	PUSH	HL
	LD		BC,RINGSMITH_FIRST_QUAN_OFFSET
	ADD		HL,BC
	LD		E,(HL)
	LD		D,0				;DE HAS AMOUNT OF 1ST	
	TWOS_COMP	D,E
	
	POP		HL
	PUSH	HL
	LD		BC,RINGSMITH_FIRST_ID_OFFSET
	ADD		HL,BC
	LD		A,(HL)
	LD		(RINGSMITH_1ST_TO_SET),A
	LD		C,A
	LD		B,0
	LD		HL,XRAM_INVENTORY_INFUSED
	ADD		HL,BC

	BATTERY_SET_BANK	RAMB_GAMESTATE
	BATTERY_ON
	
	LD		L,(HL)
	LD		H,0
	
	BATTERY_OFF
	
	ADD		HL,DE
	LD		A,L
	LD		(RINGSMITH_1ST_TO_SET+1),A
	POP		HL				;GET HL BACK EARLY FOR STACK BALANCE
	JP		NC,?_CANT_MAKE	
	
	;(3) Does he have enough of creature#2's animite?
	;--------------------
	
	PUSH	HL
	LD		BC,RINGSMITH_SECOND_QUAN_OFFSET
	ADD		HL,BC
	LD		E,(HL)
	XOR		A
	CP		E
						;GET HL BACK EARLY FOR STACK BALANCE
	JR		Z,_MAKE_SURE
	LD		D,0				;DE HAS AMOUNT OF 2ND	
	TWOS_COMP	D,E	
	
	POP		HL
	PUSH	HL
	LD		BC,RINGSMITH_SECOND_ID_OFFSET
	ADD		HL,BC
	LD		A,(HL)
	LD		(RINGSMITH_2ND_TO_SET),A
	LD		C,A
	LD		B,0
	LD		HL,XRAM_INVENTORY_INFUSED
	ADD		HL,BC

	BATTERY_SET_BANK	RAMB_GAMESTATE
	BATTERY_ON
	
	LD		L,(HL)
	LD		H,0
	
	BATTERY_OFF
	
	ADD		HL,DE
	LD		A,L
	LD		(RINGSMITH_2ND_TO_SET+1),A
	POP		HL
	JP		NC,?_CANT_MAKE
	PUSH	HL
	
	;(4) Is the player sure?
	;--------------------
_MAKE_SURE
	MENU_TEXT_SETUP		$8EE0,1,$9DA1,12,RINGSMITH_STR_1
	CALL_FOREIGN		?MENU_TEXT_UPDATE
	MENU_TEXT_SETUP		$8FA0,1,$9DE1,10,RINGSMITH_STR_2
	CALL_FOREIGN		?MENU_TEXT_UPDATE
	MENU_TEXT_SETUP		$9040,1,$9E02,7,RINGSMITH_STR_3
	CALL_FOREIGN				?MENU_TEXT_UPDATE
	
	LD		HL,MENU_MAIN_VALID+5
	LD		A,1
	LD		(HLI),A
	LD		(HLI),A
	
	MENU_INIT	RINGSMITH_CHOICE,243,MENU_MAIN_VALID,?MENU_FLASH,?MENU_FLASH,5,MENU_CURSOR_NOBLINK,MENU_CURSOR_SPRITE	
	
_MAKE_SURE_MENU_LOOP
	MENU_GO
	CALL	?SYSTEM_UPDATE_GAME_NOSCRIPT
	LD		A,(MENU_RETURN_VALUE)
	CP		$FF
	JR		Z,_MAKE_SURE_MENU_LOOP
	POP		HL					;GET HL BACK EARLY FOR STACK BALANCE
	CP		5
	RET		NZ	
	
	;(5) Make the damn thing
	;--------------------	
	
	;Set flags, etc
	;---------------------
	LD		A,1
	LD		(RINGSMITH_MADERING),A
	LD		A,(HL)
	LD		(BTL_NAME_INDEX),A
	LD		(RINGSMITH_CREATURE_MAKE),A
	LD		BC,TEXT_PARAM_BUFFER
	FSET16	B,C,BTL_TABLE_COPY_TO
	CALL_FOREIGN	?BTL_COPY_CREATURE_NAME
	LD		HL,TEXT_PARAM_BUFFER+10
	LD		A,?FORMAT	
	LD		(HL),A
	TEXT_SET_PARAMS	TEXT_PARAM_BUFFER
	
	;Take away animite
	;-------------------------
	BATTERY_SET_BANK	RAMB_GAMESTATE
	BATTERY_ON
	
	FGET16	B,C,RINGSMITH_COST_TO_SET
	FSET16	B,C,XRAM_INVENTORY_ANIMITE
	
	LD		A,(RINGSMITH_1ST_TO_SET)
	LD		C,A
	LD		B,0
	LD		HL,XRAM_INVENTORY_INFUSED
	ADD		HL,BC
	LD		A,(RINGSMITH_1ST_TO_SET+1)
	LD		(HL),A
		
	LD		A,(RINGSMITH_2ND_TO_SET)
	CP		$FF
	JR		Z,?_GENERATE_CREATURE
	LD		C,A
	LD		B,0
	LD		HL,XRAM_INVENTORY_INFUSED
	ADD		HL,BC
	LD		A,(RINGSMITH_2ND_TO_SET+1)
	LD		(HL),A
	
?_GENERATE_CREATURE
	;(1) COPY THE TEMPLATE
	;---------------------

	;Inc creaturecount
	;---------------------------
	BATTERY_SET_BANK	RAMB_GAMESTATE
	BATTERY_ON
	
	LD		HL,XRAM_CREATURECOUNT
	INC		(HL)
	
	BATTERY_OFF	
	
	LD		A,(RINGSMITH_CREATURE_MAKE)
	LD		(SCRIPT_RINGMADE),A
	LD		B,A
	LD		C,CREATURE_TEMPLATE_SIZE
	
	CALL	?MULT
	
	LD		BC,CREATURE_TEMPLATE_TABLE
	ADD		HL,BC
	
	SET16	H,L,BTL_TABLE_COPY_FROM
	LD		BC,BTL_TABLE_COPY_BUFFER
	FSET16	B,C,BTL_TABLE_COPY_TO
	
	CALL_FOREIGN	?CREATURE_TABLE_COPY_NO_GFX	
	
	;(2) find an open spot in the ring bank
	;----------------------
	LD		HL,CREATURE00
	LD		BC,CREATURE_XRAM_SIZE
	LD		D,0
	
	BATTERY_SET_BANK	RAMB_CREATURES
	BATTERY_ON	
	
_FIND_OPEN_LOOP
	LD		A,(HL)
	CP		$FF
	JR		Z,_GOT_SLOT
	ADD		HL,BC
	INC		D
	JR		_FIND_OPEN_LOOP
	
	
_GOT_SLOT
	;Set slot # for auto equip
	;-------------------------
	LD		A,D
	LD		(RINGSMITH_AUTOEQUIP),A

	;(3) Copy the base stats into xram
	;------------------------
	SET16	H,L,RINGSMITH_XRAM_CREATURE
	LD		BC,BTL_TABLE_COPY_BUFFER
	LD		A,(RINGSMITH_CREATURE_MAKE)	
	LD		(HLI),A				;ID
	LD_HLI_BCI					;TYPE
	LD		A,1
	LD		(HLI),A				;LVL
	XOR		A
	LD		(HLI),A				;EXPH
	LD		(HLI),A				;EXPL
	LD		(HLI),A				;ENGH
	LD		(HLI),A				;ENGL
	LD		(HLI),A				;ENGMAXH
	LD_HLI_BCI					;ENGMAXL
	INC		BC					;Skip templates ENGMAXH
	INC		BC					;Skip templates ENGMAXL
	
	LD		D,12
_STATS	
	LD_HLI_BCI					;ATK-IMMUNE
	DEC		D
	JR		NZ,_STATS

	XOR		A
	LD		(HLI),A				;STATUS
	LD_HLI_BCI					;PERMSTAT
	LD_HLI_BCI					;AI
	INC		BC					;Skip templates COST
	INC		BC					;Why are we skipping here? (I still dont know)
	
	LD		D,12
_CMDS	
	LD_HLI_BCI					;CMD0-CMDLVL3
	DEC		D
	JR		NZ,_CMDS

	XOR		A
	LD		(HLI),A				;RELIC0
	LD		(HLI),A				;RELIC1
	LD		(HLI),A				;OTHER
	
	BATTERY_OFF	
	
	;(4) copy to BTLRAM, raise lvls, put back
	;-----------------------
	PUSH_RAM_BANK
	CALL_FOREIGN	?RINGSMITH_GENERATE_CREATURE
	POP_RAM_BANK
	
	;(5) auto-equip if less than 10
	;-----------------------------------
	LD		HL,XRAM_INVENTORY_RINGS
	LD		D,10
	
	BATTERY_SET_BANK	RAMB_GAMESTATE
	BATTERY_ON
	
	LD		A,$FF
	
_AUTO_EQUIP_LOOP
	CP		(HL)
	JR		Z,_GOT_EQUIP
	INC		HL
	DEC		D
	JR		NZ,_AUTO_EQUIP_LOOP
	JR		_NO_EQUIP
	
_GOT_EQUIP
	LD		A,(RINGSMITH_AUTOEQUIP)
	INC		A
	LD		(HL),A
	
_NO_EQUIP
	BATTERY_OFF
	
	RET	
	
?_CANT_MAKE
	MENU_TEXT_SETUP		$8EE0,1,$9DA1,10,RINGSMITH_CANT_STR_1
	CALL_FOREIGN		?MENU_TEXT_UPDATE
	MENU_TEXT_SETUP		$8F80,1,$9DC1,11,RINGSMITH_CANT_STR_2
	CALL_FOREIGN		?MENU_TEXT_UPDATE
	MENU_TEXT_SETUP		$9030,1,$9DE1,8,RINGSMITH_CANT_STR_3
	CALL_FOREIGN		?MENU_TEXT_UPDATE	
	
	WAIT_AB_NOSCRIPT	_WAIT1		
	
	RET

;********************************	
?RINGSMITH_SET_ARRAY

	SWITCH_RAM_BANK		WRAM_SPARE1

	LD		A,(MENU_CURSOR_ID)
	CP		0
	JR		Z,_PAGE_UP_START
	
	CP		4
	JR		Z,_PAGE_DOWN
	
_NEW_PAGE	
	;FIRST ONE
	;----------------------
	XOR		A
	LD		(RINGSMITH_TOP_ENTRY),A
	LD		(MENU_COUNTER),A	
	JR		_PAGE_UP	
	
_PAGE_UP_START
	LD		HL,RINGSMITH_TOP_ENTRY
	LD		A,(HL)
	SUB		3
	LD		(HL),A
	LD		(MENU_COUNTER),A	
	LD		HL,MENU_MAIN_VALID
	LD		(HLI),A
	LD		A,1
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	
	LD		A,(RINGSMITH_TOP_ENTRY)
	ADD		A,3
	LD		B,A
	LD		A,(RINGSMITH_TABLE_SIZE)
	INC		A
	SUB		B
	LD		(HLI),A
	
_PAGE_UP
	LD		A,3
	LD		(RINGSMITH_DISPLAYED),A
	LD		A,(RINGSMITH_TOP_ENTRY)
	LD		B,A
	LD		C,RINGSMITH_ENTRY_SIZE
	CALL	?MULT
	LD		BC,RINGSMITH_TABLE_BASE
	ADD		HL,BC
	LD		BC,RINGSMITH_ON_SCREEN
	
	LD		D,3*RINGSMITH_ENTRY_SIZE
	
_UP_LOOP
	LD_BCI_HLI
	DEC		D
	JR		NZ,_UP_LOOP
	
	JP		_DONE	
	
_PAGE_DOWN
	;SET PAGE UP TO VALID
	;--------------------
	LD		A,1
	LD		HL,MENU_MAIN_VALID
	LD		(HLI),A
	
	;INVALIDATE 2ND AND 3RD CHOICES, 
	;MAKE VALID AS THEY APPEAR
	;----------------------
	XOR		A
	INC		HL
	LD		(HLI),A
	LD		(HLI),A
	
	;FILL THE RINGSMITH_ON_SCREEN WITH
	;"BLANK" ENTRIES
	;----------------------------
	LD		HL,RINGSMITH_ON_SCREEN+RINGSMITH_ENTRY_SIZE
	LD		A,$FF
	LD		(HLI),A
	LD		(HLI),A
	XOR		A
	LD		(HLI),A
	LD		A,$FF
	LD		(HLI),A
	XOR		A
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	
	LD		A,$FF
	LD		(HLI),A
	LD		(HLI),A
	XOR		A
	LD		(HLI),A
	LD		A,$FF
	LD		(HLI),A
	XOR		A
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A

	;FIRST ONE
	;-------------------
	LD		A,1
	LD		(RINGSMITH_DISPLAYED),A
	LD		A,(RINGSMITH_TOP_ENTRY)
	ADD		A,3
	LD		(RINGSMITH_TOP_ENTRY),A	
	
	LD		B,A
	LD		C,RINGSMITH_ENTRY_SIZE
	CALL	?MULT
	LD		BC,RINGSMITH_TABLE_BASE
	ADD		HL,BC
	LD		BC,RINGSMITH_ON_SCREEN
	
	LD		D,RINGSMITH_ENTRY_SIZE
	
_DN_LOOP_1
	LD_BCI_HLI
	DEC		D
	JR		NZ,_DN_LOOP_1
	
	;IS THE TOP ENTRY THE LAST?
	;-------------------------
	LD		A,(RINGSMITH_TOP_ENTRY)
	INC		A
	LD		B,A
	LD		A,(RINGSMITH_TABLE_SIZE)
	CP		B
	JR		C,_DONE_NO_DN
	
	LD		HL,RINGSMITH_DISPLAYED
	INC		(HL)
	LD		A,1
	LD		(MENU_MAIN_VALID+2),A
	
	LD		A,(RINGSMITH_TOP_ENTRY)
	INC		A
	LD		B,A
	LD		C,RINGSMITH_ENTRY_SIZE
	CALL	?MULT
	LD		BC,RINGSMITH_TABLE_BASE
	ADD		HL,BC
	LD		BC,RINGSMITH_ON_SCREEN+RINGSMITH_ENTRY_SIZE
	
	LD		D,RINGSMITH_ENTRY_SIZE
	
_DN_LOOP_2
	LD_BCI_HLI
	DEC		D
	JR		NZ,_DN_LOOP_2
	
	;IS THE MIDDLE ENTRY THE LAST?
	;-------------------------
	LD		A,(RINGSMITH_TOP_ENTRY)
	INC		A
	INC		A
	LD		B,A
	LD		A,(RINGSMITH_TABLE_SIZE)
	CP		B
	JR		C,_DONE_NO_DN
	
	LD		HL,RINGSMITH_DISPLAYED
	INC		(HL)
	LD		A,1
	LD		(MENU_MAIN_VALID+3),A
	
	LD		A,(RINGSMITH_TOP_ENTRY)
	INC		A
	INC		A
	LD		B,A
	LD		C,RINGSMITH_ENTRY_SIZE
	CALL	?MULT
	LD		BC,RINGSMITH_TABLE_BASE
	ADD		HL,BC
	LD		BC,RINGSMITH_ON_SCREEN+RINGSMITH_ENTRY_SIZE+RINGSMITH_ENTRY_SIZE
	
	LD		D,RINGSMITH_ENTRY_SIZE
	
_DN_LOOP_3
	LD_BCI_HLI
	DEC		D
	JR		NZ,_DN_LOOP_3
	
	;IF BOTTOM IS LAST ONE, DISABLE PAGE DOWN.
	;------------------
	LD		A,(RINGSMITH_TOP_ENTRY)
	ADD		A,3
	LD		B,A
	LD		A,(RINGSMITH_TABLE_SIZE)
	CP		B
	JR		NC,_DONE	
	
_DONE_NO_DN
	XOR		A
	LD		(MENU_MAIN_VALID+4),A		;DISABLE PAGE DOWN

_DONE
	LD		A,(RINGSMITH_TOP_ENTRY)
	AND		A
	RET		Z
	
	;DISABLE PAGE UP IF AT TOP
	LD		(MENU_MAIN_VALID),A
	
	RET
	
;********************************	
?RINGSMITH_SETUP_VBLANK

	LD		A,(MENU_CURSOR_ID)
	LD		(RINGSMITH_LAST_POS),A
	CP		0
	RET		Z
	
	CP		4
	RET		Z
	
	;CLEAR BUFFER
	;--------------
	LD		A,$80
	LD		D,7
	LD		HL,RINGSMITH_VBLANK_BUFFER
	
_CLEAR_LOOP
	LD		(HLI),A
	DEC		D
	JR		NZ,_CLEAR_LOOP

	;START OF ENTRY
	;------------------
	LD		A,(MENU_CURSOR_ID)
	DEC		A
	LD		B,A
	LD		C,RINGSMITH_ENTRY_SIZE
	CALL	?MULT
	LD		BC,RINGSMITH_ON_SCREEN
	ADD		HL,BC
	PUSH	HL			;SAVE FOR LATER
	LD		BC,RINGSMITH_FIRST_ID_OFFSET
	ADD		HL,BC
	LD		C,(HL)
	LD		B,0
	LD		HL,XRAM_INVENTORY_INFUSED
	ADD		HL,BC
	
	BATTERY_SET_BANK	RAMB_GAMESTATE
	BATTERY_ON

	XOR		A
	LD		DE,RINGSMITH_VBLANK_BUFFER
	CALL	?RINGSMITH_COPY_COST_VRAM
	
	BATTERY_OFF
	
	LD		HL,$9C64
	LD		BC,$60
	LD		A,(MENU_CURSOR_ID)
	
_BG_LOOP
	DEC		A
	JR		Z,_DONE_BG
	ADD		HL,BC
	JR		_BG_LOOP			
	
_DONE_BG
	SET16	H,L,RINGSMITH_VB_BG

	;2ND CREATURE
	;--------------------
	POP		HL
	PUSH	HL
	LD		BC,RINGSMITH_SECOND_ID_OFFSET
	ADD		HL,BC
	LD		C,(HL)
	LD		A,$FF
	CP		C
	JR		Z,_DONE
	LD		B,0
	LD		HL,XRAM_INVENTORY_INFUSED
	ADD		HL,BC
	
	BATTERY_SET_BANK	RAMB_GAMESTATE
	BATTERY_ON

	XOR		A
	LD		DE,RINGSMITH_VBLANK_BUFFER+4
	CALL	?RINGSMITH_COPY_COST_VRAM
	
	BATTERY_OFF
	
	LD		A,RINGSMITH_VRAM_INFUSED
	LD		(RINGSMITH_VBLANK_BUFFER+3),A	

_DONE
	POP		HL
	LD		BC,RINGSMITH_LVL_OFFSET
	ADD		HL,BC
	LD		A,(HL)
	LD		(RINGSMITH_LVL_TO_RAISE),A
	
	LD		A,RINGSMITH_BANK
	LD		(VBLANK_BANK),A
	MOVADDR		VBLANK_FUNC,?RINGSMITH_VBLANK
	CALL	?SYSTEM_UPDATE_GAME_NOSCRIPT	

	RET
	
;********************************	
?RINGSMITH_VBLANK

	XOR			A
	LD			(VBK),A

	LD			BC,RINGSMITH_VBLANK_BUFFER
	LD			HL,$9DD0
	LD_HLI_BCI
	LD_HLI_BCI
	LD_HLI_BCI
	
	LD		HL,$9DEF
	LD_HLI_BCI
	LD_HLI_BCI
	LD_HLI_BCI
	LD_HLI_BCI	
	
	FGET16	B,C,RINGSMITH_VB_BG
	LD		HL,$9DC4
	
	LD_HLI_BCI
	LD_HLI_BCI
	LD_HLI_BCI
	LD_HLI_BCI	
	LD_HLI_BCI
	LD_HLI_BCI
	LD_HLI_BCI
	LD_HLI_BCI	
	LD_HLI_BCI
	LD_HLI_BCI
	
	FGET16	B,C,RINGSMITH_VB_BG
	LD		HL,$0020
	ADD		HL,BC
	LD		B,H
	LD		C,L
	LD		HL,$9DE4	
	
	LD_HLI_BCI
	LD_HLI_BCI
	LD_HLI_BCI
	LD_HLI_BCI	
	LD_HLI_BCI
	LD_HLI_BCI
	LD_HLI_BCI
	LD_HLI_BCI	
	LD_HLI_BCI
	LD_HLI_BCI

	MOVADDR		VBLANK_FUNC,?VBLANK_IDLE
	RET

;********************************	
?RINGSMITH_VBLANK_CLEAR_BOTTOM1
	
	XOR		A
	LD		(VBK),A
	LD		A,$80
	
	LD		HL,$9DC4
	
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A	
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A	
	LD		(HLI),A
	LD		(HLI),A
	
	LD		HL,$9DE4	
	
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A	
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A	
	LD		(HLI),A
	LD		(HLI),A	

	MOVADDR		VBLANK_FUNC,?VBLANK_IDLE
	RET

;********************************	
?RINGSMITH_VBLANK_CLEAR_BOTTOM2
	
	XOR		A
	LD		(VBK),A
	LD		A,$80
	
	LD		HL,$9DA1
	
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A	
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A	
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A	
	LD		(HLI),A
	LD		(HLI),A
	
	LD		HL,$9DC1	
	
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A
	
	LD		HL,$9DE1	
	
	LD		(HLI),A	
	LD		(HLI),A
	LD		(HLI),A
	
	LD		HL,$9E02
	
	LD		(HLI),A	
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A	
	LD		(HLI),A
	LD		(HLI),A
	LD		(HLI),A


	MOVADDR		VBLANK_FUNC,?VBLANK_IDLE
	RET

	
;********************************
	END
;********************************