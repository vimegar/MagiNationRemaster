;********************************
; MENU_MUSIC.S
;********************************
;	Author:	Erik Hutchinson
;	(c)2000	Interactive Imagination
;	All rights reserved
;********************************

;********************************
;The Main MUSIC loop that checks for users choices and goes to the appropriate functions
?MENU_MUSIC_LOOP
	LD		A,$FF							;precautionary
	LD		(MENU_RETURN_VALUE),A
	MENU_GO
	CALL	?SYSTEM_UPDATE_GAME_NOSCRIPT
	LD		A,(MENU_RETURN_VALUE)
	CP		$FF	
	JR		Z,?MENU_MUSIC_LOOP
	
	CP		$FE								;the b button
	JP		Z,?MENU_SPECIAL_END
	
	CP		MENU_MUSIC_SCROLLBACK		; LEFT: go back in the menu
	JP		Z,?MENU_MUSIC_SCROLL_BACK
	CP		MENU_MUSIC_SCROLLFORWARD	; RIGHT: go forward in the menu
	JP		Z,?MENU_MUSIC_SCROLL_FORWARD

	CP		MENU_MUSIC_DONE
	JP		Z,?MENU_SPECIAL_END
;not one of the previous choices? then the user must have selected an item
	CALL	?MENU_MUSIC_SELECT_SONG
	 
	JP		?MENU_MUSIC_LOOP
	
;********************************
;Scrolls back through the inventory list
?MENU_MUSIC_SCROLL_BACK
	LD		A,(MENU_SPECIAL_TOP_ITEM)
	SUB		MENU_SPECIAL_NUMBER_ON_SCREEN
	LD		(MENU_SPECIAL_TOP_ITEM),A
	CALL	?MENU_SPECIAL_ON_SCREEN
	
	
	SCREEN_HIDE
	CALL	?MENU_MUSIC_ITEMS_UPDATE
	SCREEN_SHOW

	CALL	?MENU_SPECIAL_FORWARD_INSERT
	LD		HL,MENU_SPECIAL_VALID+MENU_MUSIC_SCROLLFORWARD	
	LD		A,$01
	LD		(HLD),A
	LD		A,(MENU_SPECIAL_TOP_ITEM)
	;SUB		MENU_SPECIAL_NUMBER_ON_SCREEN
	CP		$00
	JR		NZ,_CANSCROLL
	LD		A,$00
	LD		(HL),A						;setting up scroll back to be invalid
	CALL	?MENU_SPECIAL_BACK_REMOVAL
	JR		_DONE
	
_CANSCROLL	
	CALL	?MENU_SPECIAL_BACK_INSERTION
	
_DONE
	LD		A,(MENU_RETURN_VALUE)
	LD		(MENU_CURSOR_ID),A
	MENU_INIT	MENU_MUSIC_SEL,243,MENU_SPECIAL_VALID,?MENU_SHOP_KEY_START,?MENU_FLASH,(MENU_CURSOR_ID),MENU_CURSOR_BLINK,MENU_CURSOR_SPRITE
	JP		?MENU_MUSIC_LOOP
	
;********************************
;Scrolls forward through the inventory list
?MENU_MUSIC_SCROLL_FORWARD	
	LD		A,(MENU_SPECIAL_TOP_ITEM)
	ADD		A,MENU_SPECIAL_NUMBER_ON_SCREEN
	LD		(MENU_SPECIAL_TOP_ITEM),A
	CALL	?MENU_SPECIAL_ON_SCREEN
	SCREEN_HIDE
	LD			DE,$8860
	FSET16		D,E,MENU_VRAM_PTR
	CALL	?MENU_MUSIC_ITEMS_UPDATE
	SCREEN_SHOW
	
	LD		A,(MENU_RETURN_VALUE)
	LD		(MENU_CURSOR_ID),A
	
	CALL	?MENU_SPECIAL_BACK_INSERTION
	LD		A,$01
	LD		HL,MENU_SPECIAL_VALID+MENU_MUSIC_SCROLLBACK
	LD		(HLI),A						;setting up scroll back to be valid


	LD		A,(MENU_SPECIAL_TOTAL_ITEMS)
	LD		C,A	

	LD		A,(MENU_SPECIAL_TOP_ITEM)
	ADD		A,MENU_SPECIAL_NUMBER_ON_SCREEN
		
	CP		C
	JR		C,_CANSCROLL
	
	LD		A,$00						;cant scroll forward anymore
	LD		(HL),A						;HL is already setup at scrollforward point
	LD		A,MENU_MUSIC_SCROLLBACK
	LD		(MENU_CURSOR_ID),A	
	CALL	?MENU_SPECIAL_FORWARD_REMOVAL
	JR		_DONE
_CANSCROLL	
	CALL	?MENU_SPECIAL_FORWARD_INSERT

_DONE
	MENU_INIT	MENU_MUSIC_SEL,243,MENU_SPECIAL_VALID,?MENU_SHOP_KEY_START,?MENU_FLASH,(MENU_CURSOR_ID),MENU_CURSOR_BLINK,MENU_CURSOR_SPRITE
	JP		?MENU_MUSIC_LOOP
	
;********************************
;Initializes the MUSIC menu, along with the border, and
;displays the initial choices of items, spells, and relics
?MENU_MUSIC_START

	SWITCH_RAM_BANK		WRAM_INFLATE
	LD		A,(MENU_MUSIC_TABLE_SIZE)
	LD		(MENU_SPECIAL_TOTAL_ITEMS),A

	XOR		A
	LD		(MENU_SPECIAL_TOP_ITEM),A
	LD		(MENU_SPECIAL_COUNTER),A
	LD		A,$0B
	LD		(MENU_SPECIAL_VRAM_ARROW_POS),A
	
	LD		A,MENU_SPECIAL_NUMBER_ON_SCREEN
	LD		(MENU_SPECIAL_ITEM_NUM),A
	LD		HL,MENU_MUSIC_TABLE_ADDRESS
	SET16	H,L,MENU_SPECIAL_TYPE_TABLE
	LD		A,$03
	LD		(MENU_SPECIAL_MODE),A					;the menu starts off in no mode

	CALL		?MENU_SPECIAL_ATTRIB_SETUP
	LD			BC,MENU_MUSIC_BG_TABLE
	CALL		?MENU_SPECIAL_READ_DUMP
	LD			DE,$8860
	FSET16		D,E,MENU_VRAM_PTR
	LD		A,104								;8 times the item size..number of blanks
	CALL	?MENU_SPECIAL_BLANK_LINE			;inserts blank spaces in place of items

	LD			BC,MENU_MUSIC_STR
	FSET16		B,C,MENU_CUR_CHAR
	LD			A,$1E
	LD			(MENU_CHAR_LEFT),A
	CALL_FOREIGN	?MAIN_MENU_PACK_VRAM

	CALL		?MENU_MUSIC_DUMP_FIX

	SCREEN_SHOW
	CALL		?SYSTEM_UPDATE_GAME_NOSCRIPT
	LD		A,$03
	LD		(MENU_SPECIAL_MENU_SECTION),A
	
;********************************
?MENU_MUSIC_SONGLIST
	LD			DE,$8860
	FSET16		D,E,MENU_VRAM_PTR

	SCREEN_HIDE
	CALL	?MENU_SPECIAL_ON_SCREEN
	CALL	?MENU_MUSIC_ITEMS_UPDATE
	SCREEN_SHOW
	
	XOR		A
	LD		(MENU_SPECIAL_MENU_SECTION),A

	CALL	?MENU_SPECIAL_BACK_REMOVAL
	XOR		A
	LD		HL,MENU_SPECIAL_VALID+MENU_MUSIC_SCROLLBACK	
	LD		(HLI),A		
	LD		(HL),A
	LD		A,(MENU_SPECIAL_TOTAL_ITEMS)
	LD		C,A
	LD		A,MENU_SPECIAL_NUMBER_ON_SCREEN
	LD		(MENU_SPECIAL_ITEM_NUM),A
	CP		C
	JR		NC,_NOFORWARD

	LD		A,$01
	LD		(HL),A						;setting up scroll forward to be valid
	CALL	?MENU_SPECIAL_FORWARD_INSERT
	JR		_DONE

_NOFORWARD
	CALL	?MENU_SPECIAL_FORWARD_REMOVAL	

_DONE
	LD		A,MENU_MUSIC_ITEM1
	LD		(MENU_CURSOR_ID),A	
	
	MENU_INIT	MENU_MUSIC_SEL,243,MENU_SPECIAL_VALID,?MENU_SHOP_KEY_START,?MENU_FLASH,(MENU_CURSOR_ID),MENU_CURSOR_BLINK,MENU_CURSOR_SPRITE
	JP		?MENU_MUSIC_LOOP	
	
;********************************	
?MENU_SPECIAL_ON_SCREEN
	LD		A,(MENU_SPECIAL_TOP_ITEM)
	LD		(MENU_SPECIAL_COUNTER),A
	XOR		A
	LD		(MENU_SPECIAL_NUMBER_HOLDER),A
	SWITCH_RAM_BANK		WRAM_INFLATE

_LOOP	
	LD		A,(MENU_SPECIAL_COUNTER)
	LD		C,A
	LD		B,MENU_MUSIC_SONG_SIZE			;3 bytes between each item in shop table
	CALL	?MULT							;getting to proper position in table...so mult by 3 bytes		
	
	LD		DE,MENU_MUSIC_TABLE_ADDRESS
	ADD		HL,DE
	LD		A,(HL)
	LD		B,A

	LD		A,(MENU_SPECIAL_NUMBER_HOLDER)
	LD		HL,MENU_SPECIAL_ON_SCREEN
	LD		E,A
	LD		D,$00
	ADD		HL,DE
	LD		(HL),B	
	
	LD		A,(MENU_SPECIAL_TOP_ITEM)
	ADD		A,MENU_SPECIAL_NUMBER_ON_SCREEN
	LD		B,A
	LD		A,(MENU_SPECIAL_COUNTER)
	INC		A
	CP		B
	RET		Z
	
	LD		(MENU_SPECIAL_COUNTER),A
	LD		B,A
	LD		A,(MENU_SPECIAL_NUMBER_HOLDER)
	INC		A
	LD		(MENU_SPECIAL_NUMBER_HOLDER),A
	LD		A,(MENU_SPECIAL_TOTAL_ITEMS)
	CP		B
	JR		NZ,_LOOP
	
_EMPTIES	
	LD		A,(MENU_SPECIAL_NUMBER_HOLDER)
	LD		HL,MENU_SPECIAL_ON_SCREEN
	LD		E,A
	LD		D,$00
	ADD		HL,DE
	LD		(HL),$FF
	
	LD		A,(MENU_SPECIAL_TOP_ITEM)
	ADD		A,MENU_SPECIAL_NUMBER_ON_SCREEN
	LD		B,A
	LD		A,(MENU_SPECIAL_COUNTER)
	INC		A
	CP		B
	RET		Z
	
	LD		(MENU_SPECIAL_COUNTER),A
	LD		A,(MENU_SPECIAL_NUMBER_HOLDER)
	INC		A
	LD		(MENU_SPECIAL_NUMBER_HOLDER),A
	JR		_EMPTIES

;********************************
;Displays items on screen that are stored in MENU_SPECIAL_ON_SCREEN/MENU_SPECIAL_ON_SCREEN
;WARNING: Screen must already be hidden upon entering this fucntion
?MENU_MUSIC_ITEMS_UPDATE
	LD		A,$01
	LD		(VBK),A

	XOR		A
	LD		(MENU_SPECIAL_COUNTER),A
	LD		DE,$8860
	FSET16	D,E,MENU_VRAM_PTR
	
_LOOP
	LD		HL,MENU_SPECIAL_ON_SCREEN
	LD		A,(MENU_SPECIAL_COUNTER)
	LD		C,A
	LD		B,$00
	ADD		HL,BC
	LD		A,(HL)								;the item number from the list
	CP		$FF
	JR		Z,_EMPTIES
	LD		A,(MENU_SPECIAL_TOP_ITEM)
	ADD		A,C
	LD		B,A
	LD		A,MENU_MUSIC_SONG_SIZE
	LD		C,A
	CALL	?MULT
	
	GET16	B,C,MENU_SPECIAL_TYPE_TABLE
	ADD		HL,BC								;adding the table location to the item location
	LD		A,MENU_MUSIC_TYPE_OFFSET		;the name offset for the type
	LD		E,A
	LD		D,$00
	ADD		HL,DE
	SET16	H,L,MENU_CUR_CHAR
	LD		A,MENU_MUSIC_NAME_SIZE			;all types have the same size string...change if necessary
	LD		(MENU_CHAR_LEFT),A
	CALL_FOREIGN	?MAIN_MENU_PACK_VRAM
	
	LD		A,(MENU_SPECIAL_COUNTER)
	ADD		A,MENU_MUSIC_ITEM1
	LD		HL,MENU_SPECIAL_VALID
	LD		D,$00
	LD		E,A
	ADD		HL,DE
	LD		A,$01
	LD		(HL),A	
	LD		HL,MENU_SPECIAL_COUNTER
	INC		(HL)
	LD		A,(HL)
	CP		MENU_SPECIAL_NUMBER_ON_SCREEN									;the number of items that can be on screen
	JR		NZ,_LOOP
	RET

_EMPTIES
	LD		A,MENU_MUSIC_NAME_SIZE
	CALL	?MENU_SPECIAL_BLANK_LINE		;inserts blank spaces in place of items
	LD		A,(MENU_SPECIAL_COUNTER)
	ADD		A,MENU_MUSIC_ITEM1
	LD		HL,MENU_SPECIAL_VALID
	LD		D,$00
	LD		E,A
	ADD		HL,DE
	LD		(HL),D
	LD		HL,MENU_SPECIAL_COUNTER
	INC		(HL)
	LD		A,(HL)
	CP		MENU_SPECIAL_NUMBER_ON_SCREEN	;the number of items that can be on screen
	JR		NZ,_EMPTIES
	RET

	
;********************************	
;Sets up variables that contain the information on the item selected
?MENU_MUSIC_SELECT_SONG	
	LD		A,(MENU_SPECIAL_MODE)
	CP		MENU_MUSIC_PLAYING
	JR		NZ,_NEXT
	LD		A,(MENU_HISTORIAN_TYPE_NUMBER)
	SOUND_STOP_SONG	A
	CALL	?SYSTEM_UPDATE_GAME_NOSCRIPT
	
_NEXT
	LD		A,MENU_MUSIC_PLAYING
	LD		(MENU_SPECIAL_MODE),A
	LD		A,(MENU_RETURN_VALUE)
	SUB		$03								;removing menu position info
	LD		C,A
	LD		B,$00
	LD		HL,MENU_SPECIAL_ON_SCREEN
	ADD		HL,BC
	LD		A,(HL)
	LD		(MENU_HISTORIAN_TYPE_NUMBER),A
	SOUND_START_SONG	A
	RET

;********************************
;This is a Music Menu specific function ONLY
;meant to fix up the existing dumps to save space	
;places new text in spots previously filled by  items/spells/relics		
?MENU_MUSIC_DUMP_FIX
	XOR		A
	LD		(VBK),A
	
	LD		HL,MENU_MUSIC_BG_CHOOS_ADDRESS
	LD		A,MENU_MUSIC_VRAM_CHOOSE_POS
	LD		B,$0D
_CHOOSELOOP
	LD		(HLI),A
	INC		A
	DEC		B
	JR		NZ,_CHOOSELOOP
	
	LD		HL,MENU_MUSIC_BG_A_ADDRESS
	LD		A,MENU_MUSIC_VRAM_A_POS
	LD		B,$09
_ALOOP
	LD		(HLI),A
	INC		A
	DEC		B
	JR		NZ,_ALOOP
	
	LD		HL,MENU_MUSIC_BG_B_ADDRESS
	LD		A,MENU_MUSIC_VRAM_B_POS
	LD		B,$07
_BLOOP
	LD		(HLI),A
	INC		A
	DEC		B
	JR		NZ,_BLOOP
	
	LD		HL,MENU_MUSIC_BG_DONE_ADDRESS		;gets rid of the "DONE" in the dump
	LD		A,MENU_MUSIC_VRAM_BLANK_POS
	LD		B,$04
_DONELOOP
	LD		(HLI),A
	DEC		B
	JR		NZ,_DONELOOP
	
	RET
	
;********************************
	END
;********************************