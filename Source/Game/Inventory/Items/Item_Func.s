;********************************
; ITEM_FUNC.S
;********************************
;	Author:	Patrick Meehan/Dylan "YouMUSTUseTwoTables" Mayo,Emory Georges
;	(c)2000	Interactive Imagination
;	All rights reserved

;********************************
	LIB		SOURCE\GAME\INVENTORY\ITEMS\ITEM_TABLE.S

;********************************
;This is for items that lowers _one_ stat/energy
?ITEM_CMD_BASIC_LOWER

	LD		HL,BTL_TABLE_COPY_BUFFER+ITEM_BASE_CODE_OFFSET
	LD		A,(HL)
	AND		A
	JR		Z,_ENERGY
	
	LD		B,CREATURE_ENGMAXL	;SINCE EQU FOR ATK IS 1
	ADD		A,B
	LD		C,A
	LD		B,0
	LD		HL,BTL_TARGET
	ADD		HL,BC
	LD		A,(HL)
	PUSH	AF
	PUSH	HL
	LD		HL,BTL_TABLE_COPY_BUFFER+ITEM_BASE_AMOUNT_OFFSET
	SUB		(HL)
	JR		NC,_NORM_DONE
	XOR		A
	
_NORM_DONE
	POP		HL
	LD		(HL),A
	POP		BC
	SUB		B
	CPL
	INC		A
	LD		(BTL_OVERRIDE_DAMAGE),A
	LD		A,BTL_OVERRIDE_NODAM
	LD		(BTL_OVERRIDE_FLAG),A
	
	JR		_COMMON_DONE	
	
_ENERGY
	LD		HL,BTL_TABLE_COPY_BUFFER+ITEM_BASE_AMOUNT_OFFSET
	LD		A,(HL)
	LD		(BTL_OVERRIDE_DAMAGE),A
	LD		A,BTL_OVERRIDE_DAM
	LD		(BTL_OVERRIDE_FLAG),A

_COMMON_DONE
	LD		A,1
	LD		(BTL_PENDING_MSG),A
	SCRIPT_SET_VAR		TEXT_SCRIPT,BTL_TABLE_COPY_BUFFER+ITEM_BTL_SCRIPT_FUNC_OFFSET,BTL_TABLE_COPY_BUFFER+ITEM_BTL_SCRIPT_BANK_OFFSET
	CALL_FOREIGN		?BTL_MSG_NORM_PARAMS
	
	RET
	
;***************************************	
?ITEM_CMD_BASIC_LOWER_PERM

	CALL	?ITEM_CMD_BASIC_LOWER
	
	LD		A,(BTL_CREATURE_TARGET)
	CP		BTL_ID_ENEMY0
	RET		NC
	
	DEC		A	
	ADD		A,A
	LD		C,A
	LD		B,0
	LD		HL,BTL_HERO_XRAM0
	ADD		HL,BC
	DEREF_HL
	PUSH	HL	
	LD		HL,BTL_TABLE_COPY_BUFFER+ITEM_BASE_CODE_OFFSET
	LD		A,(HL)
	LD		B,XRAM_CREATURE_ENGMAXL	;SINCE EQU FOR ATK IS 1
	ADD		A,B
	LD		C,A
	LD		B,0
	POP		HL
	ADD		HL,BC
	
	BATTERY_SET_BANK	RAMB_CREATURES
	BATTERY_ON
	
	LD		A,(HL)
	PUSH	HL
	LD		HL,BTL_TABLE_COPY_BUFFER+ITEM_BASE_AMOUNT_OFFSET
	SUB		(HL)
	JR		NZ,_NORM_DONE
	JR		NC,_NORM_DONE
	LD		A,1
	
_NORM_DONE
	POP		HL
	LD		(HL),A	
	
	BATTERY_OFF

	RET

;********************************
;This is for items that raise _one_ stat/energy
?ITEM_CMD_BASIC_RAISE

	LD		HL,BTL_TABLE_COPY_BUFFER+ITEM_BASE_CODE_OFFSET
	LD		A,(HL)
	AND		A
	JR		Z,_ENERGY
	
	LD		B,CREATURE_ENGMAXL	;SINCE EQU FOR ATK IS 1
	ADD		A,B
	LD		C,A
	LD		B,0
	LD		HL,BTL_TARGET
	ADD		HL,BC
	LD		A,(HL)
	PUSH	AF
	PUSH	HL
	LD		HL,BTL_TABLE_COPY_BUFFER+ITEM_BASE_AMOUNT_OFFSET
	ADD		A,(HL)
	LD		B,MAX_NORMAL_STAT_BOUNDRARY
	CP		B
	JR		C,_NORM_DONE
	LD		A,B
	
_NORM_DONE
	POP		HL
	LD		(HL),A
	POP		BC
	SUB		B
	LD		(BTL_OVERRIDE_DAMAGE),A
	LD		A,BTL_OVERRIDE_NODAM
	LD		(BTL_OVERRIDE_FLAG),A
	
	JR		_COMMON_DONE	
	
_ENERGY
	LD		HL,BTL_TABLE_COPY_BUFFER+ITEM_BASE_AMOUNT_OFFSET
	LD		A,(HL)
	LD		(BTL_OVERRIDE_DAMAGE),A
	LD		A,BTL_OVERRIDE_DAM
	LD		(BTL_OVERRIDE_FLAG),A
	LD		(BTL_HEAL_FLAG),A

_COMMON_DONE
	LD		A,1
	LD		(BTL_PENDING_MSG),A
	SCRIPT_SET_VAR		TEXT_SCRIPT,BTL_TABLE_COPY_BUFFER+ITEM_BTL_SCRIPT_FUNC_OFFSET,BTL_TABLE_COPY_BUFFER+ITEM_BTL_SCRIPT_BANK_OFFSET
	CALL_FOREIGN		?BTL_MSG_NORM_PARAMS
	
	RET
	
;***************************************	
?ITEM_CMD_BASIC_RAISE_PERM

	CALL	?ITEM_CMD_BASIC_RAISE
	
	LD		A,(BTL_CREATURE_TARGET)
	CP		BTL_ID_ENEMY0
	RET		NC
	
	DEC		A	
	ADD		A,A
	LD		C,A
	LD		B,0
	LD		HL,BTL_HERO_XRAM0
	ADD		HL,BC
	DEREF_HL
	PUSH	HL	
	LD		HL,BTL_TABLE_COPY_BUFFER+ITEM_BASE_CODE_OFFSET
	LD		A,(HL)
	LD		B,XRAM_CREATURE_ENGMAXL	;SINCE EQU FOR ATK IS 1
	ADD		A,B
	LD		C,A
	LD		B,0
	POP		HL
	ADD		HL,BC
	
	BATTERY_SET_BANK	RAMB_CREATURES
	BATTERY_ON
	
	LD		A,(HL)
	PUSH	HL
	LD		HL,BTL_TABLE_COPY_BUFFER+ITEM_BASE_AMOUNT_OFFSET
	ADD		A,(HL)
	LD		B,MAX_NORMAL_STAT_BOUNDRARY
	CP		B
	JR		C,_NORM_DONE
	LD		A,B
	
_NORM_DONE
	POP		HL
	LD		(HL),A	
	
	BATTERY_OFF

	RET
	
;***************************************
?ITEM_CMD_CAUSE_STATUS
	
	LD		A,BTL_OVERRIDE_DAM
	LD		(BTL_OVERRIDE_FLAG),A
	XOR		A
	LD		(BTL_OVERRIDE_DAMAGE),A
	
	LD		A,(BTL_TABLE_COPY_BUFFER+ITEM_AILMENT_OFFSET)
	LD		B,A
	LD		A,(BTL_TARGET_IMMUNE)
	AND		B
	JR		Z,_NOT_IMMUNE	
	
_IMMUNE
	SCRIPT_SET	TEXT_SCRIPT,?_BTL_CANT_CAUSE_MSG
	JR		_BOTH
	
_NOT_IMMUNE
	LD		A,B	
	LD		HL,BTL_TARGET
	LD		BC,CREATURE_STATUS
	CALL	?SET_CREATURE_STATUS
	SCRIPT_SET_VAR		TEXT_SCRIPT,BTL_TABLE_COPY_BUFFER+ITEM_BTL_SCRIPT_FUNC_OFFSET,BTL_TABLE_COPY_BUFFER+ITEM_BTL_SCRIPT_BANK_OFFSET
	
_BOTH
	CALL_FOREIGN		?BTL_MSG_NORM_PARAMS
	CALL	?INV_SET_AILMENT_NAME	
	
	LD		A,1
	LD		(BTL_PENDING_MSG),A

	RET		
	
;***************************************	
?ITEM_CMD_CAUSE_STATUS_ALL
	
	LD		A,BTL_OVERRIDE_DAM
	LD		(BTL_OVERRIDE_FLAG),A
	XOR		A
	LD		(BTL_OVERRIDE_DAMAGE),A
	
	LD		A,1
	LD		(BTL_PENDING_MSG),A
	SCRIPT_SET_VAR		TEXT_SCRIPT,BTL_TABLE_COPY_BUFFER+ITEM_BTL_SCRIPT_FUNC_OFFSET,BTL_TABLE_COPY_BUFFER+ITEM_BTL_SCRIPT_BANK_OFFSET

	LD		A,(BTL_TARGET_IMMUNE)
	CPL
	LD		(BTL_TARGET_STATUS),A
	CALL_FOREIGN		?BTL_MSG_NORM_PARAMS

	RET
	
;***************************************
?ITEM_CMD_CURE_STATUS
	
	LD		A,BTL_OVERRIDE_DAM
	LD		(BTL_OVERRIDE_FLAG),A
	XOR		A
	LD		(BTL_OVERRIDE_DAMAGE),A
	
	LD		A,(BTL_TABLE_COPY_BUFFER+ITEM_AILMENT_OFFSET)
	LD		B,A
	LD		A,(BTL_TARGET_PERMSTAT)
	AND		B
	JR		Z,_NOT_PERM

_PERM
	SCRIPT_SET	TEXT_SCRIPT,?_BTL_CANT_CURE_MSG
	JR		_BOTH	
	
_NOT_PERM	
	LD		A,B
	LD		HL,BTL_TARGET
	LD		BC,CREATURE_STATUS
	CALL	?CLR_CREATURE_STATUS
	SCRIPT_SET_VAR		TEXT_SCRIPT,BTL_TABLE_COPY_BUFFER+ITEM_BTL_SCRIPT_FUNC_OFFSET,BTL_TABLE_COPY_BUFFER+ITEM_BTL_SCRIPT_BANK_OFFSET
	
_BOTH
	CALL_FOREIGN		?BTL_MSG_NORM_PARAMS
	CALL	?INV_SET_AILMENT_NAME
	
	LD		A,1
	LD		(BTL_PENDING_MSG),A

	RET		

;***************************************	
?ITEM_CMD_CURE_STATUS_ALL
	
	LD		A,BTL_OVERRIDE_DAM
	LD		(BTL_OVERRIDE_FLAG),A
	XOR		A
	LD		(BTL_OVERRIDE_DAMAGE),A
	
	LD		A,1
	LD		(BTL_PENDING_MSG),A
	SCRIPT_SET		TEXT_SCRIPT,?_BTL_STATUS_ALL_GONE

	LD		A,(BTL_TARGET_PERMSTAT)
	LD		(BTL_TARGET_STATUS),A
	CALL_FOREIGN		?BTL_MSG_NORM_PARAMS

	RET
	
;***************************************
?ITEM_CMD_FULL_HEAL		

	LD		A,BTL_OVERRIDE_DAM
	LD		(BTL_OVERRIDE_FLAG),A
	XOR		A
	LD		(BTL_OVERRIDE_DAMAGE),A	
	
	LD			HL,BTL_TARGET_ENGMAXH
	LD			BC,BTL_TARGET_ENGH
	LD_BCI_HLI
	LD_BCI_HLI
	
	LD		A,1
	LD		(BTL_PENDING_MSG),A
	CALL_FOREIGN		?BTL_MSG_NORM_PARAMS
	SCRIPT_SET_VAR		TEXT_SCRIPT,BTL_TABLE_COPY_BUFFER+ITEM_BTL_SCRIPT_FUNC_OFFSET,BTL_TABLE_COPY_BUFFER+ITEM_BTL_SCRIPT_BANK_OFFSET
	
	RET	

;***************************************
?ITEM_CMD_KARMIC_RAISE

	CALL	?ITEM_CMD_BASIC_RAISE_PERM
	
	RANDVAL	B
	LD		C,A
	LD		B,5
	CALL	?DIV
	LD		H,0
	LD		BC,XRAM_CREATURE_STR
	PUSH	HL
	ADD		HL,BC
	PUSH	HL
	DEC		A	
	ADD		A,A
	LD		C,A
	LD		B,0
	LD		HL,BTL_HERO_XRAM0
	ADD		HL,BC
	DEREF_HL
	POP		BC
	ADD		HL,BC
	
	LD		A,(BTL_CREATURE_TARGET)
	CP		BTL_ID_ENEMY0
	JR		NC,_NORM
	
	BATTERY_SET_BANK	RAMB_CREATURES
	BATTERY_ON
	DEC		(HL)
	JR		NZ,_NORM
	LD		(HL),1
	
_NORM
	BATTERY_OFF
	
	POP		BC
	LD		B,BTL_STAT_LBL_LEN
	CALL	?MULT
	LD		BC,BTL_STAT_LBLS
	ADD		HL,BC
	LD		BC,TEXT_PARAM_BUFFER+24
	LD		D,BTL_STAT_LBL_LEN
	
_LOOP
	LD_BCI_HLI
	DEC		D
	JR		NZ,_LOOP
	
	LD		A,?FORMAT
	LD		(BC),A
	
	RET		
	
;***************************************
?ITEM_CMD_PERM_ALL_INCREASE		


	LD		BC,ITEM_BASIC_STRENGTH+2
	FSET16	B,C,BTL_TABLE_COPY_BUFFER+ITEM_BASE_AMOUNT_OFFSET
	CALL	?ITEM_CMD_BASIC_RAISE_PERM
	
	LD		BC,ITEM_BASIC_SKILL+2
	FSET16	B,C,BTL_TABLE_COPY_BUFFER+ITEM_BASE_AMOUNT_OFFSET
	CALL	?ITEM_CMD_BASIC_RAISE_PERM
	
	LD		BC,ITEM_BASIC_SPEED+2
	FSET16	B,C,BTL_TABLE_COPY_BUFFER+ITEM_BASE_AMOUNT_OFFSET
	CALL	?ITEM_CMD_BASIC_RAISE_PERM
	
	LD		BC,ITEM_BASIC_DEFENSE+2
	FSET16	B,C,BTL_TABLE_COPY_BUFFER+ITEM_BASE_AMOUNT_OFFSET
	CALL	?ITEM_CMD_BASIC_RAISE_PERM
	
	LD		BC,ITEM_BASIC_RESIST+2
	FSET16	B,C,BTL_TABLE_COPY_BUFFER+ITEM_BASE_AMOUNT_OFFSET
	CALL	?ITEM_CMD_BASIC_RAISE_PERM
	
	SCRIPT_SET_VAR		TEXT_SCRIPT,BTL_TABLE_COPY_BUFFER+ITEM_BTL_SCRIPT_FUNC_OFFSET,BTL_TABLE_COPY_BUFFER+ITEM_BTL_SCRIPT_BANK_OFFSET
	
	RET		
	
;***************************************
?ITEM_CMD_SHIFT_LEFT_STAT_BYTE	

	LD		A,BTL_OVERRIDE_DAM
	LD		(BTL_OVERRIDE_FLAG),A
	XOR		A
	LD		(BTL_OVERRIDE_DAMAGE),A

	LD		HL,BTL_TARGET_STATUS
	RLC		(HL)
	LD		A,(BTL_TARGET_PERMSTAT)
	OR		(HL)
	LD		(HL),A
	LD		A,(BTL_TARGET_IMMUNE)
	CPL
	AND		(HL)
	LD		(HL),A
	
	LD		A,$33
	LD		(BTL_TARGET_COUNTER),A
	
	LD		A,1
	LD		(BTL_PENDING_MSG),A
	CALL_FOREIGN		?BTL_MSG_NORM_PARAMS
	SCRIPT_SET_VAR		TEXT_SCRIPT,BTL_TABLE_COPY_BUFFER+ITEM_BTL_SCRIPT_FUNC_OFFSET,BTL_TABLE_COPY_BUFFER+ITEM_BTL_SCRIPT_BANK_OFFSET

	RET		

;***************************************
?ITEM_CMD_SHIFT_RIGHT_STAT_BYTE	

	LD		A,BTL_OVERRIDE_DAM
	LD		(BTL_OVERRIDE_FLAG),A
	XOR		A
	LD		(BTL_OVERRIDE_DAMAGE),A

	LD		HL,BTL_TARGET_STATUS
	RRC		(HL)
	LD		A,(BTL_TARGET_PERMSTAT)
	OR		(HL)
	LD		(HL),A
	LD		A,(BTL_TARGET_IMMUNE)
	CPL
	AND		(HL)
	LD		(HL),A	
	
	LD		A,$33
	LD		(BTL_TARGET_COUNTER),A
	
	LD		A,1
	LD		(BTL_PENDING_MSG),A
	CALL_FOREIGN		?BTL_MSG_NORM_PARAMS
	SCRIPT_SET_VAR		TEXT_SCRIPT,BTL_TABLE_COPY_BUFFER+ITEM_BTL_SCRIPT_FUNC_OFFSET,BTL_TABLE_COPY_BUFFER+ITEM_BTL_SCRIPT_BANK_OFFSET

	RET		
	
;********************************
?INV_GIVE_ITEM

	LD			HL,XRAM_INVENTORY_ITEMS
	ADD			HL,DE
	PUSH		HL

	LD			B,E
	LD			C,ITEM_SIZE
	CALL		?MULT

	LD			BC,ITEM_TABLE+ITEM_NAME_OFFSET
	ADD			HL,BC
	LD			BC,ITEM_NAME_SIZE
	LD			DE,TEXT_PARAM_BUFFER
	CALL		?MEM_MOV
	LD			A,?FORMAT
	LD			(DE),A

	LD			BC,ITEM_MAX_OFFSET-ITEM_NAME_OFFSET-ITEM_NAME_SIZE
	ADD			HL,BC

	LD			A,(HL)	; B = Max items allowed
	LD			B,A

	XOR			A
	LD			(INV_ID_SUCCESS),A

	BATTERY_SET_BANK	RAMB_GAMESTATE
	BATTERY_ON

	POP			HL
	LD			A,(HL)		; C = Current items held
	LD			C,A

	CP			B			; Skip w/ failure if at max
	JR			Z,_SKIP

	LD			A,(INV_ID_TOTAL)
	ADD			A,C
	JR			C,_MAX		; If byte rolled over, max out
	
	CP			B
	JR			Z,_OK
	JR			C,_OK		; If greater than max, clamp

_MAX
	LD			A,B

_OK
	LD			(HL),A
	LD			A,$01
	LD			(INV_ID_SUCCESS),A
_SKIP
	BATTERY_OFF
	RET

;********************************
?INV_SET_AILMENT_NAME

	LD		A,(BTL_TABLE_COPY_BUFFER+ITEM_AILMENT_OFFSET)
	LD		B,$FF
	
_EQU_CONVERT_LOOP
 	INC		B
 	BIT		0,A
 	JR		NZ,_CONT
 	SRL		A
 	JR		_EQU_CONVERT_LOOP	
	
_CONT
	LD		C,BTL_STATUS_LBL_LEN
	CALL	?MULT
	LD		BC,BTL_STATUS_LBLS
	ADD		HL,BC
	LD		BC,TEXT_PARAM_BUFFER+22
	LD		D,BTL_STATUS_LBL_LEN
	
_LOOP
	LD_BCI_HLI
	DEC		D
	JR		NZ,_LOOP
	
	
	LD		A,?FORMAT
	LD		(BC),A

	RET

;********************************
?INV_TAKE_ITEM

	LD			HL,XRAM_INVENTORY_ITEMS
	ADD			HL,DE

	JP			?INV_TAKE_GENERIC

;********************************
	END
;********************************
