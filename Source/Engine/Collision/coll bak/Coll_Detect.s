;********************************
; COLL_DETECT.S
;********************************
;	Author:	Dylan ExoByte Mayo
;	(c)2000	Interactive Imagination
;	All rights reserved


;********************************
?COLL_DETECT
;CHECK FOR NON MOVEMENT
	LD		A,(COLL_XMOVE)
	LD		B,A
	LD		A,(COLL_YMOVE)
	OR		B
 	RET		Z
 	
 	;I AM SO CLEVER.  I'M JOSH!!!
 	
;CHECK FOR DIAG 
	LD		A,(COLL_YMOVE)
	AND		B
	JR		Z,_NO_DIAG
	LD		A,2
	LD		(COLL_DIAG_FLAG),A
	
_NO_DIAG
 	
;CALCUTLATE DIR CODE,0-7, LIKE SO:
;   0   6   3
;   2   -  	5
;   1   7   4
 	CALL	?MENU_DIR_CODE_CALC
 	
 	
;FIND FUNCTION TO ACCESS THAT DIRECTION
;A HAS THE CODES
;IF A = 8, FREEMOVE
	CP		8
	JR		NZ,_NO_FREE
	CALL	?COLL_X_FREEMOVE
	CALL	?COLL_Y_FREEMOVE

	RET	

_NO_FREE
	LD		HL,COLL_TILGET_TABLE
	ADD		A,A			;ON WORD BOUNDRIES
	LD		C,A
	ADD		A,A			;MOVE THE DIR CODE TO
	ADD		A,A			;WHERE IT SHOULD BE IN CODE
	LD		(COLL_TABLE_CODE),A
	LD		B,$00
	ADD		HL,BC
	ECALL_HL	
	
;ADD THE RESULT TO THE COLL_TABLE_CODE
;RESULT IS IN C
	LD		HL,COLL_TABLE_CODE
	LD		A,(HL)
	ADD		A,C
	LD		(HL),A
	
;NOW GET TO THE CLEVER FUNCTION THAT FIGURES OUT
;THE ACTUAL  DELTA X/Y TO USE, CLEVERLY
	LD		HL,COLL_MOVEFUNC_TABLE
	ADD		A,A			;WORD BOUNDERIES
	LD		C,A
	LD		B,$00
	ADD		HL,BC
	ECALL_HL
	 	
	RET
	
;********************************* 	
?MENU_DIR_CODE_CALC
;CALCUTLATE DIR CODE,0-7, LIKE SO:
;   0   6   3
;   2   -  	5
;   1   7   4
;CALC BY:   X     |    Y
;		 -  0  +  |-   0   +
;        1  7  4   -1  +1  0

	LD		A,%00000000
	LD		(COLL_TABLE_CODE),A
	

;FIND X POS/NEG/Z
	LD		A,(COLL_XMOVE)
	BIT		7,A
	JR		Z,_POSX
;NEGATIVE X
;CHECK FOR BOUNDARY BREACH
	LD		B,A
	LD		A,(ACTOR_XOFF)
	ADD		A,B
	CP		8
	JR		NC,_ZEROX		

	LD		A,1
	JR		_DONEX
	
_POSX
;CHECK FOR BOUNDARY BREACH
	CP		0
	JR		Z,_ZEROX

	LD		B,A
	LD		A,(ACTOR_XOFF)
	ADD		A,B
	CP		8
	JR		C,_ZEROX	
	
	LD		A,4
	JR		_DONEX
	
_ZEROX
	LD		A,7

_DONEX
	LD		(COLL_TABLE_CODE),A
	
;FIND Y POS/NEG/Z
	LD		A,(COLL_YMOVE)
	BIT		7,A
	JR		Z,_POSY
;NEG Y
;CHECK FOR BOUNDARY BREACH
	LD		B,A
	LD		A,(ACTOR_YOFF)
	ADD		A,B
	CP		8
	JR		NC,_ZEROY		

	LD		B,-1
	JR		_DONEY
	
_POSY
;CHECK FOR BOUNDARY BREACH
	CP		0
	JR		Z,_ZEROY

	LD		B,A
	LD		A,(ACTOR_YOFF)
	ADD		A,B
	CP		8
	JR		C,_ZEROY		
	
	LD		B,0
	JR		_DONEY
	
_ZEROY
	LD		B,1
	
_DONEY
	LD		A,(COLL_TABLE_CODE)
	ADD		A,B
	
	RET
	
;*********************************
; 12X 
; 0`X
; XXX
?COLL_TILGET_00

;SET EVERYTHING UP
	GET16	H,L,(ACTOR_TILE)
	LD		C,%00000000	;USED FOR MASK TO ADD TO 
						;COLL_TABLE_CODE
;GET ONE TO LEFT
	DEC		HL
	LD		A,(HL)
	CP		COLL_MAX
	JR		NC,_CHECK_2
	CP		COLL_TOGG
	JR		NC,_SET_1
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	JR		Z,_CHECK_2	
	
_SET_1
	SET		2,C

;CHECK ONE ABOVE AND TO LEFT
_CHECK_2
	LD		A,(COLL_WIDTH)
	LD		E,A
	LD		D,$00
	TWOS_COMP D,E
	ADD		HL,DE
	LD		A,(HLI)
	CP		COLL_MAX
	JR		NC,_CHECK_3
	CP		COLL_TOGG
	JR		NC,_SET_2
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	JR		Z,_CHECK_3
	
_SET_2
	SET		1,C
	
;CHECK THE ONE ABOVE
_CHECK_3
	LD		A,(HL)
	CP		COLL_MAX
	RET		NC
	CP		COLL_TOGG
	JR		NC,_SET_3
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	RET		Z	
	
_SET_3
	SET		0,C

	RET
	
;*********************************
; XXX 
; 0`X
; 12X
?COLL_TILGET_01

;SET EVERYTHING UP
	GET16	H,L,(ACTOR_TILE)
	LD		C,%00000000	;USED FOR MASK TO ADD TO 
						;COLL_TABLE_CODE
	
;GET ONE TO LEFT
	DEC		HL
	LD		A,(HL)
	CP		COLL_MAX
	JR		NC,_CHECK_2
	CP		COLL_TOGG
	JR		NC,_SET_1
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	JP		Z,_CHECK_2	
	
_SET_1
	SET		2,C

;CHECK ONE BELOW AND TO LEFT
_CHECK_2
	LD		A,(COLL_WIDTH)
	LD		E,A
	LD		D,$00
	ADD		HL,DE
	LD		A,(HLI)
	CP		COLL_MAX
	JR		NC,_CHECK_3
	CP		COLL_TOGG
	CP		COLL_TOGG
	JR		NC,_SET_2
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	JP		Z,_CHECK_3
	
_SET_2
	SET		1,C
	
;CHECK THE ONE BELOW
_CHECK_3
	LD		A,(HL)
	RET		NC
	CP		COLL_TOGG
	JR		NC,_SET_3
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	RET		Z	
	
_SET_3
	SET		0,C
	
	RET
	
;*********************************
; 1XX 
; 0`X
; 2XX
?COLL_TILGET_02

;SET EVERYTHING UP
	GET16	H,L,(ACTOR_TILE)
	LD		C,%00000000	;USED FOR MASK TO ADD TO 
						;COLL_TABLE_CODE	
;GET ONE TO LEFT
	DEC		HL
	LD		A,(HL)
	CP		COLL_MAX
	JR		NC,_CHECK_2
	CP		COLL_TOGG
	JR		NC,_SET_1
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	JR		Z,_CHECK_2	
	
_SET_1
	SET		2,C

;CHECK ONE ABOVE AND TO LEFT
_CHECK_2
	LD		A,(COLL_WIDTH)
	LD		E,A
	LD		D,$00
	TWOS_COMP	D,E
	ADD		HL,DE
	LD		A,(HL)
	CP		COLL_MAX
	JR		NC,_CHECK_3
	CP		COLL_TOGG
	JR		NC,_SET_2
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	JR		Z,_CHECK_3
	
_SET_2
	SET		1,C
	
;CHECK ONE BELOW AND TO THE LEFT
_CHECK_3
	LD		A,(COLL_WIDTH)
	LD		E,A
	LD		D,$00
	ADD		HL,DE
	ADD		HL,DE
	LD		A,(HL)
	CP		COLL_MAX
	RET		NC
	CP		COLL_TOGG
	JR		NC,_SET_3
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	RET		Z	
	
_SET_3
	SET		0,C

	RET
	
;*********************************
; X21 
; X`0
; XXX
?COLL_TILGET_03

;SET EVERYTHING UP
	GET16	H,L,(ACTOR_TILE)
	LD		C,%00000000	;USED FOR MASK TO ADD TO 
						;COLL_TABLE_CODE
;GET ONE TO RIGHT
	INC		HL
	LD		A,(HL)
	CP		COLL_MAX
	JR		NC,_CHECK_2
	CP		COLL_TOGG
	JR		NC,_SET_1
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	JR		Z,_CHECK_2	
	
_SET_1
	SET		2,C

;CHECK ONE ABOVE AND TO RIGHT
_CHECK_2
	LD		A,(COLL_WIDTH)
	LD		E,A
	LD		D,$00
	TWOS_COMP	D,E
	ADD		HL,DE
	LD		A,(HL)
	CP		COLL_MAX
	JR		NC,_CHECK_3
	CP		COLL_TOGG
	JR		NC,_SET_2
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	JR		Z,_CHECK_3
	
_SET_2
	SET		1,C
	
;CHECK THE ONE ABOVE
_CHECK_3
	DEC 	HL
	LD		A,(HL)
	CP		COLL_MAX
	RET		NC
	CP		COLL_TOGG
	JR		NC,_SET_3
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	RET		Z	
	
_SET_3
	SET		0,C

	RET
	
;*********************************
; XXX 
; X`0
; X21
?COLL_TILGET_04

;SET EVERYTHING UP
	GET16	H,L,(ACTOR_TILE)
	LD		C,%00000000	;USED FOR MASK TO ADD TO 
						;COLL_TABLE_CODE
	
;GET ONE TO RIGHT
	INC		HL
	LD		A,(HL)
	CP		COLL_MAX
	JR		NC,_CHECK_2
	CP		COLL_TOGG
	JR		NC,_SET_1
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	JR		Z,_CHECK_2	
	
_SET_1
	SET		2,C

;CHECK ONE BELOW AND TO RIGHT
_CHECK_2
	LD		A,(COLL_WIDTH)
	LD		E,A
	LD		D,$00
	ADD		HL,DE
	LD		A,(HL)
	CP		COLL_MAX
	JR		NC,_CHECK_3
	CP		COLL_TOGG
	JR		NC,_SET_2
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	JR		Z,_CHECK_3
	
_SET_2
	SET		1,C
	
;CHECK THE ONE BELOW
_CHECK_3
	DEC		HL
	LD		A,(HL)
	CP		COLL_MAX
	RET		NC
	CP		COLL_TOGG
	JR		NC,_SET_3
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	RET		Z	
	
_SET_3
	SET		0,C
	
	RET
	
;*********************************
; XX1 
; X`0
; XX2
?COLL_TILGET_05


;SET EVERYTHING UP
	GET16	H,L,(ACTOR_TILE)
	LD		C,%00000000	;USED FOR MASK TO ADD TO 
						;COLL_TABLE_CODE
	
;GET ONE TO RIGHT
	INC		HL
	LD		A,(HL)
	CP		COLL_MAX
	JR		NC,_CHECK_2
	CP		COLL_TOGG
	JR		NC,_SET_1
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	JR		Z,_CHECK_2	
	
_SET_1
	SET		2,C

;CHECK ONE ABOVE AND TO RIGHT
_CHECK_2
	LD		A,(COLL_WIDTH)
	LD		E,A
	LD		D,$00
	TWOS_COMP	D,E
	ADD		HL,DE
	LD		A,(HL)
	CP		COLL_MAX
	JR		NC,_CHECK_3
	CP		COLL_TOGG
	JR		NC,_SET_2
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	JR		Z,_CHECK_3
	
_SET_2
	SET		1,C
	
;CHECK ONE BELOW AND TO THE RIGHT
_CHECK_3
	LD		A,(COLL_WIDTH)
	LD		E,A
	LD		D,$00
	ADD		HL,DE
	ADD		HL,DE
	LD		A,(HL)
	CP		COLL_MAX
	RET		NC
	CP		COLL_TOGG
	JR		NC,_SET_3
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	RET		Z	
	
_SET_3
	SET		0,C

	RET	
	
;*********************************
; 102 
; X`X
; XXX
?COLL_TILGET_06

;SET EVERYTHING UP
	GET16	H,L,(ACTOR_TILE)
	LD		C,%00000000	;USED FOR MASK TO ADD TO 
						;COLL_TABLE_CODE
;CHECK ONE ABOVE
	LD		A,(COLL_WIDTH)
	LD		E,A
	LD		D,$00
	TWOS_COMP	D,E
	ADD		HL,DE
	LD		A,(HL)
	CP		COLL_MAX
	JR		NC,_CHECK_2
	CP		COLL_TOGG
	JR		NC,_SET_1
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	JR		Z,_CHECK_2	
	
_SET_1
	SET		2,C
	
;CHECK ONE ABOVE AND LEFT
_CHECK_2
	DEC 	HL
	LD		A,(HL)
	CP		COLL_MAX
	JR		NC,_CHECK_3
	CP		COLL_TOGG
	JR		NC,_SET_2
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	JR		Z,_CHECK_3
	
_SET_2
	SET		1,C
	
;CHECK ONE ABOVE AND RIGHT
_CHECK_3
	INC		HL
	INC		HL
	LD		A,(HL)
	CP		COLL_MAX
	RET		NC
	CP		COLL_TOGG
	JR		NC,_SET_3
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	RET		Z	
	
_SET_3
	SET		0,C

	RET
	
;*********************************
; XXX  
; X`X
; 102
?COLL_TILGET_07

;SET EVERYTHING UP
	GET16	H,L,(ACTOR_TILE)
	LD		A,(COLL_MASK)
;B = BITMASK
	LD		B,A
	LD		C,%00000000	;USED FOR MASK TO ADD TO 
						;COLL_TABLE_CODE
;CHECK ONE BELOW
	LD		A,(COLL_WIDTH)
	LD		E,A
	LD		D,$00
	ADD		HL,DE
	LD		A,(HL)
	CP		COLL_MAX
	JR		NC,_CHECK_2
	CP		COLL_TOGG
	JR		NC,_SET_1
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	JR		Z,_CHECK_2	
	
_SET_1
	SET		2,C
	
;CHECK ONE BELOW AND LEFT
_CHECK_2
	DEC 	HL
	LD		A,(HL)
	CP		COLL_MAX
	JR		NC,_CHECK_3
	CP		COLL_TOGG
	JR		NC,_SET_2
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	JR		Z,_CHECK_3
	
_SET_2
	SET		1,C
	
;CHECK ONE BELOW AND RIGHT
_CHECK_3
	INC		HL
	INC		HL
	LD		A,(HL)
	CP		COLL_MAX
	RET		NC
	CP		COLL_TOGG
	JR		NC,_SET_3
	LD		DE,COLL_MASK
	ADD		A,E
	LD		E,A
	LD		A,(DE)
	CP		0
	RET		Z	
	
_SET_3
	SET		0,C

	RET	
	
;*********************************
	END
;*********************************

